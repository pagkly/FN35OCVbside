b'blob 4822\x00/*!\n * $.fn.scrollIntoView - similar to the default browser scrollIntoView\n * The default browser behavior always places the element at the top or bottom of its container. \n * This override is smart enough to not scroll if the element is already visible.\n *\n * Copyright 2011 Arwid Bancewicz\n * Licensed under the MIT license\n * http://www.opensource.org/licenses/mit-license.php\n * \n * @date 9 May 2011\n * @author Arwid Bancewicz http://arwid.ca\n * @version 0.2\n */\n (function($) {\n    $.fn.scrollIntoView = function(duration, easing, complete) {\n        // The arguments are optional.\n        // The first argment can be false for no animation or a duration.\n        // The first argment could also be a map of options.\n        // Refer to http://api.jquery.com/animate/.\n        var opts = $.extend({},\n        $.fn.scrollIntoView.defaults);\n\n        // Get options\n        if ($.type(duration) == "object") {\n            $.extend(opts, duration);\n        } else if ($.type(duration) == "number") {\n            $.extend(opts, { duration: duration, easing: easing, complete: complete });\n        } else if (duration == false) {\n            opts.smooth = false;\n        }\n\n        // get enclosing offsets\n        var elY = Infinity, elH = 0;\n        if (this.size()==1)((elY=this.get(0).offsetTop)==null||(elH=elY+this.get(0).offsetHeight));\n        else this.each(function(i,el){(el.offsetTop<elY?elY=el.offsetTop:el.offsetTop+el.offsetHeight>elH?elH=el.offsetTop+el.offsetHeight:null)});\n        elH -= elY;\n\n        // start from the common ancester\n        var pEl = this.commonAncestor().get(0);\n\n        var wH = $(window).height();\n        \n        // go up parents until we find one that scrolls\n        while (pEl) {\n            var pY = pEl.scrollTop, pH = pEl.clientHeight;\n            if (pH > wH) pH = wH;\n            \n            // case: if body\'s elements are all absolutely/fixed positioned, use window height\n            if (pH == 0 && pEl.tagName == "BODY") pH = wH;\n            \n            if (\n            // it wiggles?\n            (pEl.scrollTop != ((pEl.scrollTop += 1) == null || pEl.scrollTop) && (pEl.scrollTop -= 1) != null) ||\n            (pEl.scrollTop != ((pEl.scrollTop -= 1) == null || pEl.scrollTop) && (pEl.scrollTop += 1) != null)) {\n                if (elY <= pY) scrollTo(pEl, elY); // scroll up\n                else if ((elY + elH) > (pY + pH)) scrollTo(pEl, elY + elH - pH); // scroll down\n                return;\n            }\n\n            // try next parent\n            pEl = pEl.parentNode;\n        }\n\n        function scrollTo(el, scrollTo) {\n        \t// NBK HACK: add +60\n            // if (opts.smooth) $(el).stop().animate({ scrollTop: scrollTo }, opts);\n        \tif (opts.smooth) $(el).stop().animate({ scrollTop: scrollTo+60 }, opts);\n            else el.scrollTop = scrollTo;\n        }\n        return this;\n    };\n\n    $.fn.scrollIntoView.defaults = {\n        smooth: true,\n        duration: null,\n        easing: $.easing && $.easing.easeOutExpo ? \'easeOutExpo\': null,\n        // Note: easeOutExpo requires jquery.effects.core.js\n        //       otherwise jQuery will default to use \'swing\'\n        complete: $.noop(),\n        step: null,\n        specialEasing: null\n    };\n\n    /*\n     Returns whether the elements are in view\n    */\n    $.fn.isOutOfView = function(completely) {\n        // completely? whether element is out of view completely\n        var outOfView = true;\n        this.each(function() {\n            var pEl = this.parentNode, pY = pEl.scrollTop, pH = pEl.clientHeight, elY = this.offsetTop, elH = this.offsetHeight;\n            if (completely ? (elY) > (pY + pH) : (elY + elH) > (pY + pH)) {}\n            else if (completely ? (elY + elH) < pY: elY < pY) {}\n            else outOfView = false;\n        });\n        return outOfView;\n    };\n\n    /*\n     Returns the common ancestor of the elements.\n     It was taken from http://stackoverflow.com/questions/3217147/jquery-first-parent-containing-all-children\n     It has received minimal testing.\n    */\n    $.fn.commonAncestor = function() {\n        var parents = [];\n        var minlen = Infinity;\n\n        $(this).each(function() {\n            var curparents = $(this).parents();\n            parents.push(curparents);\n            minlen = Math.min(minlen, curparents.length);\n        });\n\n        for (var i in parents) {\n            parents[i] = parents[i].slice(parents[i].length - minlen);\n        }\n\n        // Iterate until equality is found\n        for (var i in parents[0]) {\n            var equal = true;\n            for (var j in parents) {\n                if (parents[j][i] != parents[0][i]) {\n                    equal = false;\n                    break;\n                }\n            }\n            if (equal) return $(parents[0][i]);\n        }\n        return $([]);\n    }\n\n})(jQuery);'