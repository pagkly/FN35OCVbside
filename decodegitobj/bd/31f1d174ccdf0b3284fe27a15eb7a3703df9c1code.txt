b'blob 8024\x00/**\n * MyBlackboard javascript library\n *\n * @since  9.1 SP10\n * @author rshehadeh\n */\nvar mybb = {\n\n  TOOL_LISTENER_ID  : "mybb",\n  CANVAS_ID         : "mybbCanvas",\n\n  TOOL_ID_SEPARATOR : "_____",\n\n\n  /**\n   * Set up MyBb\n   *\n   * @param initialToolUri  The URI of the tool to display when MyBb first appears\n   * @param trustedHosts A list of trusted origins from which we will accept PostMessage messages.\n   */\n  setup: function( initialToolUri, trustedHosts ) {\n\n    // define resizing behavior for mybb\n    Event.observe( window, "resize", this.resizeCanvas );\n\n    // listen for messages coming in from our child tools\n    Event.observe ( window, "message", this.handleToolMessage );\n\n    // arrange for our own dissolution\n    Event.observe ( window, "unload", this.teardown );\n\n    // initialize the tool_service\n    top.tool_service.register ( mybb.TOOL_LISTENER_ID, this.activityListener );\n\n    // load up the chosen tool\n    $( mybb.CANVAS_ID ).src = globalNavigation.getNoGlobalNavUrl( initialToolUri );\n    \n    mybb.trustedHosts = trustedHosts;\n\n    overflow_handler.init( "mybbListTools", mybb.getWindowHeight );\n\n    var winH = mybb.getWindowHeight();\n    var bbCanv = $( mybb.CANVAS_ID );\n    if ( bbCanv ) {\n      bbCanv.style.height = winH - 12 + \'px\';\n    }\n  },\n  /**\n   * Resize the tool canvas to reflect the current size of the browser window.\n   */\n  resizeCanvas : function() {\n\n    var winH = mybb.getWindowHeight();\n\n    var bbCanv = $( mybb.CANVAS_ID );\n    if ( bbCanv ) {\n      bbCanv.style.height = winH - 12 + \'px\';\n    }\n\n  },\n\n  getWindowHeight : function() {\n    var winH;\n\n    if ( window.innerHeight ) {\n      winH = window.innerHeight;\n    }\n\n    else if ( window.document.documentElement && window.document.documentElement.clientHeight ) {\n      winH = window.document.documentElement.clientHeight;\n    }\n\n    else {\n      winH = document.body.offsetHeight;\n    }\n\n    return winH - globalNavigation.getNavDivHeight();\n  },\n  \n  onSwitchTool: function ( selectedToolId, toolUrl ) {\n    mybb.switchTool( selectedToolId );\n    $( mybb.CANVAS_ID ).src = globalNavigation.getNoGlobalNavUrl( toolUrl );\n    if ( typeof(event) !== \'undefined\' ) { // event is undefined in firefox\n      Event.stop( event );\n    }\n  },\n\n  /**\n   * Switch to the tool with the given id.\n   *\n   * This function also gets fresh activity data for both the previous and the newly-\n   * selected tool.\n   *\n   * @selectedToolId  The id of the tool we\'re switching to\n   */\n  switchTool: function ( selectedToolId ) {\n\n    var selectedTool = $$(\'li[id="\' + selectedToolId + \'"]\').first();\n    var currentTool = $$(\'#side_nav li.active\').first();\n\n    var tabs = $$( \'#side_nav > ul > li\' );\n\n    tabs.each( function( e )  {\n      e.className = \'\';\n    } );\n\n    selectedTool.addClassName( \'active\' );\n\n    // get the latest badge counts for both the current and selected tools\n    if ( selectedTool.id )\n    {\n      top.tool_service.getActivityDataForTool ( selectedTool.id );\n    }\n\n    if ( currentTool.id )\n    {\n      top.tool_service.getActivityDataForTool ( currentTool.id );\n    }\n\n    // set the title of the my bb canvas to the selected tool and focus the iframe\n    $( mybb.CANVAS_ID ).title = selectedTool.down( "a" ).title;\n    $( mybb.CANVAS_ID ).focus();\n\n    // close the more tools menu if available and visible\n    var myBbMoreTools = $(\'mybbMoreTools\');\n    if ( myBbMoreTools && myBbMoreTools.visible() )\n    {\n      myBbMoreTools.hide();\n    }\n\n  },\n\n\n  /**\n   * Get the id of the currently-selected tool.\n   *\n   * @return Tool id. Or undefined, if no tool is selected\n   */\n  getCurrentToolId : function ( currentTool ) {\n\n    var activeTool = $$(\'#side_nav li.active\');\n    return activeTool ? activeTool.first().id : undefined;\n\n  },\n\n\n  /**\n   * Handle incoming messages from MyBb tools.\n   *\n   * @param event A postMessage\n   */\n  handleToolMessage : function ( event ) {\n\n    if ( event.data )\n    {\n      var myLocation;\n      if ( event.target )\n      {\n        var etl = event.target.location;\n        if (etl.origin)\n        {\n          myLocation = etl.origin;\n        }\n        else\n        {\n          myLocation = etl.protocol + "//" + etl.host;\n        }\n      }\n      else\n      {\n        myLocation = event.srcElement.location.origin;\n      }\n      \n      if (event.origin !== myLocation)\n      {\n        // make sure the origin is one of the registered tools since it isn\'t coming from learn itself.\n        var wrappedHost = \'~~\' + event.origin + \'~~\';\n        if ( mybb.trustedHosts.indexOf( wrappedHost ) == -1 )\n        {\n          if ( window.console )\n          {\n            window.console.log( page.bundle.getString( "mybb.invalid.source.origin.postmessage", event.origin,\n                                                       myLocation ) );\n          }\n          return;\n        }\n      }\n\n      // request to make a given tool active\n      if( event.data.type === "switchTool" )\n      {\n        var fullToolId = event.data.pluginId + mybb.TOOL_ID_SEPARATOR + event.data.toolId;\n        var selectedTool = $$(\'li[id="\' + fullToolId + \'"]\').first();\n\n        /* make sure that the selectedTool exists and differs from the\n         * currently active tool before switching the active tool\n         */\n        if ( selectedTool && mybb.getCurrentToolId() != fullToolId )\n        {\n          mybb.switchTool ( selectedTool );\n        }\n      }\n      else if (event.data.type === "hideMyBbPanel")\n      {\n        var sidePanel = $(\'side_nav\');\n        if (sidePanel)\n        {\n          sidePanel.style.width = \'0px\';\n          sidePanel.style.overflow = \'hidden\';\n        }\n        var ifw = $(\'iframe_wrap\');\n        if (ifw)\n        {\n          ifw.style.left=\'0px\';\n          ifw.style.top=\'0px\';\n          ifw.style.right=\'0px\';\n          ifw.style.border=\'none\';\n        }\n      }\n    }\n  },\n\n\n  /**\n   * Pull MyBlackboard apart\n   */\n  teardown: function () {\n    top.tool_service.unregister (mybb.TOOL_LISTENER_ID);\n  },\n\n\n  /**\n   * Inserts the tool activity value in the badge element.\n   *\n   * @param toolId         The tool whose activity we\'re showing\n   * @param activityCount  The count\n   */\n  showActivityValue: function(toolId, activityCount) {\n\n    var badge = $(toolId + "::badge");\n\n    if ( badge ) {\n\n      // update the badge\n      var badgeValue = top.tool_service.formatCount(activityCount, top.tool_service.MAX_TOOL_COUNT);\n      badge.innerHTML = badgeValue;\n      badge.show();\n\n      // update the screen reader img to include activity data\n      var altImg = $(toolId + "_altImg");\n\n      altImg.alt =\n        altImg.getAttribute("data-tool-title") + " - " +\n          page.bundle.getString("mybb.tool.activity.description", badgeValue );\n\n    }\n\n  },\n\n\n  /**\n   * Get rid of all signs of a tool\'s activity count.\n   *\n   * @param toolId  The id of the tool whose activity count is being cleared\n   */\n  removeActivityValue: function( toolId ) {\n\n    var badge = $(toolId + "::badge");\n\n    if ( badge ) {\n\n      badge.hide();\n      var altImg = $(toolId + "_altImg");\n      altImg.alt = altImg.getAttribute("data-tool-title");\n\n    }\n\n  },\n\n  /**\n   * The listener we register for activity update events\n   */\n  activityListener : {\n\n    activityCountsUpdated : function () {\n\n      if ( top.tool_service.getActivityCounts() ) {\n\n        top.tool_service.getActivityCounts().each ( function ( pair ) {\n\n          // if the tool has any activity, display its badge\n          if ( pair.value > 0 ) {\n            mybb.showActivityValue ( pair.key, pair.value );\n          }\n\n          // ... otherwise hide it\n          else {\n            mybb.removeActivityValue ( pair.key );\n          }\n\n        });\n\n      }\n\n    },\n\n    activityCountUpdated : function ( toolId ) {\n\n      var badgeValue = top.tool_service.getActivityCountForTool(toolId);\n\n      if ( badgeValue && badgeValue > 0 ) {\n        mybb.showActivityValue ( toolId, badgeValue );\n      }\n\n      else {\n        mybb.removeActivityValue ( toolId );\n      }\n\n    }\n\n  }\n};\n'