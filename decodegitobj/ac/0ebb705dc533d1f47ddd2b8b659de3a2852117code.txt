b'blob 6432\x00import math\ndef h2d(hexstring):\n    return ("decno("+str(hexstring)+")="+str(int(hexstring, 16)) )\n#https://codebeautify.org/hex-decimal-converter#\ndef d2h(decno):\n    return ("hexstring("+str(decno)+")="+format(decno,"x"))\n#https://codebeautify.org/decimal-hex-converter#\n\npatternpic=r\'(01 c8 8a)(.{54})(.{32})(.{3})(.{3})(.{3})(.{3})(.{54})(03 03)(.{153,})\'\npatternpicwxhex=r\'(01 [cC]8 8[aA].)(.{18})(.{18})(.{18})(.{18})(.{18})(.{18})(.{18})(.{18})(.{18})(03.)(0.{8,11})(0.{8,11})(0.{8,11})(0.{8,11})(.*)(67.)\'\npatternpicpython=r\'(01[cC]88[aA])(.{12})(.{12})(.{12})(.{12})(.{12})(.{12})(.{12})(.{12})(.{12})(03)(0.{5,7})(0.{5,7})(0.{5,7})(0.{5,7})(.*)(67.)\'\n#(01[cC]88[aA])(.{12})(.{12})(.{12})(.{12})(.{12})(.{12})(.{12})(.{12})(.{12})(03)(0.{5,7})(0.{5,7})(0.{5,7})(0.{5,7})\n#(01[cC]88[aA]){0,1}(.{12}){0,1}(.{12}){0,1}(.{12}){0,1}(.{12}){0,1}(.{12}){0,1}(.{12}){0,1}(.{12}){0,1}(.{12}){0,1}(.{12}){0,1}(03){0,1}(0.{5,7})(0.{5,7})(0.{5,7})(0.{5,7})\nreplacewith=r\'\\n$1\\n$2\\n$3\\n$4\\n\\n$5\\n$6\\n$7\\n\\n$8\\n$9\\n$10\\n\\n$11\\n$12\\n$13\\n$14\\n$15\\n\\n$16\\n$17\'\n#\\n\\n$1\\n$2\\n$3\\n$4\\n\\n$5\\n$6\\n$7\\n\\n$8\\n$9\\n$10\\n\\n$11\\n$12\\n$13\\n$14\\n$15\\n\\n$16\\n$17\nregexindex1=r\'(01)(.{8})(.{4})(011a)\'\npatternpic=r\'(010ac480c391c391c391(?!.*010ac480c391c391c391))(.*?)(01c88a)(.{36})(.{28})(.{2})(.{2})(.{2})(.{2})(.{36})(0303)(.{102,})\'\npatternpicx=r\'(010ac480c391c391c391(?!.*010ac480c391c391c391))(.*?)(01c88a)(.{28})(.{2})(.{2})(.{2})(.{2})(.{36})(.{36})(0303)(.{102,})\'\nregexindex2=r\'(1123236e6f7465732f2323756e66696c6564(?!.*1123236e6f7465732f2323756e66696c6564))(.*?)(00\\d\\d\\d\\d00\\d\\d)(2323)\'\nregexnote1=r\'(0302010201)(.{2})(.{2}){0,1}\'\nregexnote2=r\'(0302010201)(.{2})(.{2})(0a){0,1}\'\nregexnote1v2=r\'(.{1570})(0201)(.{2})(0a)\'\ndef parser(fnnotedir):\n    filetext=open(fnnotedir,"r")\n    with open(fnnotedir, \'r\') as f:\n        content = f.read()\n        replace1 = re.sub(regexnote1, mo1.group(1)+totalobjhex, cihx)\n    parsedtext=open(fnnotedir,"w+")\n    parsedtext.append("")\n    filetext.close()\n    subprocess.call("notepad ",shell=True)\n    return True\nprint(h2d("E2"))\n#exit()\nprint(h2d("BF"))\nprint(h2d("37"))\nprint(h2d("937"))\nprint(h2d("F4"))\nprint(h2d("BA"))\nprint(h2d("93"))\nprint(h2d("80"))\nprint(d2h(192))\nprint(h2d("E7"))\nprint(h2d("B9"))\nprint(h2d("E0"))\nprint(h2d("E8"))\nprint(404/64)\n#exit()\n#LAST VAL-1\ndef picscaling(w,h):\n            orix="03 E2 93 B9"\n            oriy="03 E2 93 B9"\n            """\n            03 E2 93 80=7\n            03 E3 80 80=(192-147)*64=45*64=2880\n            04 E0 80 80=(e8-e3)*64*64=20480\n            """\n            if w>h:\n                realscaling=15\n                ##orix="03 E2 8C AE"\n                ##oriy="03 E2 A8 92"\n                realscaling=36\n            if w<h:\n                realscaling=80\n                realscaling=30\n                realscaling=18\n                #h,w=w,h\n                #orix="02 E2 8F 9E"\n                #oriy="02 E3 92 AD"\n            print(orix)\n            print(oriy)\n            orixlist=orix.split()\n            defxvallist=[]\n            for f in orixlist:\n                val=int(f, 16)\n                defxvallist.append(val)\n            defxpresuffix,defxsuffix,defxscalequot,defxscalerem=defxvallist\n                \n            oriylist=oriy.split()\n            defyvallist=[]\n            for f in oriylist:\n                val=int(f, 16)\n                defyvallist.append(val)\n            defypresuffix,defysuffix,defyscalequot,defyscalerem=defyvallist\n            #print(defxpresuffix,defxsuffix,defxscalequot,defxscalerem)\n            #print(defypresuffix,defysuffix,defyscalequot,defyscalerem)\n            xpresuffixint,xsuffixint,xscalequotint,xscaleremint=defxvallist\n            ypresuffixint,ysuffixint,yscalequotint,yscaleremint=defyvallist\n            \n            scaledw=(realscaling*w)\n            while scaledw>0:\n                xscaleremint+=1\n                if xscaleremint>191:\n                    xscalequotint+=1\n                    xscaleremint=128\n                if xscalequotint>191:\n                    xsuffixint+=1\n                    xscalequotint=128\n                if xsuffixint>231:\n                    xpresuffixint+=1\n                    xsuffixint=224\n                scaledw-=1           \n            \n            xpresuffixhex=format(xpresuffixint,\'x\').zfill(2)\n            xsuffixhex=format(xsuffixint,\'x\').zfill(2)\n            xscalequothex=format(xscalequotint,\'x\').zfill(2)\n            xscaleremhex=format(xscaleremint,\'x\').zfill(2)\n            print(xpresuffixhex,xsuffixhex,xscalequothex,xscaleremhex)\n            xscalehexs=xpresuffixhex+xsuffixhex+xscalequothex+xscaleremhex;\n\n            #([ =+(#,-])(x) #$1y\n            #scaledw #scaledh\n            #defx #defy\n            scaledh=realscaling*h;\n            while scaledh>0:\n                yscaleremint+=1\n                if yscaleremint>191:\n                    yscalequotint+=1\n                    yscaleremint=128\n                if yscalequotint>191:\n                    ysuffixint+=1\n                    yscalequotint=128\n                if ysuffixint>231:\n                    ypresuffixint+=1\n                    ysuffixint=224\n                scaledh-=1  \n            \n            ypresuffixhex=format(ypresuffixint,\'x\').zfill(2)\n            ysuffixhex=format(ysuffixint,\'x\').zfill(2)\n            yscalequothex=format(yscalequotint,\'x\').zfill(2)\n            yscaleremhex=format(yscaleremint,\'x\').zfill(2)\n            print(ypresuffixhex,ysuffixhex,yscalequothex,yscaleremhex)\n            yscalehexs=ypresuffixhex+ysuffixhex+yscalequothex+yscaleremhex;\n\n            print("orix="+orix)\n            print("oriy="+oriy)\n            print("finalx="+str(xscalehexs))\n            print("finaly="+str(yscalehexs))\n            return True\nprint(picscaling(1755,1240))\nprint(picscaling(1275,1500))\nprint(picscaling(97,48))\nprint(picscaling(418,73))\nprint(picscaling(404,22))\n\n"""\nif scaledw<2880:\n                xscalequotint=\n                xscaleremint=\n                xsuffixint=\n                xpresuffixint=int(scaledw/(((231-226)+(231-224))*64*64)\n                pass\n            elif scaledw>=2880 and scaledw<20480:\n                pass\n            elif scaledw>=20480:\n                pass\n            if int(scaledw/64)==0:\n                xscaleremint=128+scaledw%64\n            elif int(scaledw/64)>0:\n                if int(scaledw/(64*64))>0:\n"""                    \n                elif int(scaledw/(64*64*64))>0: \n    \n'