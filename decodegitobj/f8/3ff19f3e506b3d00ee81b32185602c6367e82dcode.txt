b'blob 396950\x00String.prototype.format=function(){var t=arguments;return this.replace(/{(\\d)}/g,function(e,n){return void 0!==t[n]?t[n]:e})};var myApp=angular.module("myApp",["ngRoute","http-auth-interceptor","LocalStorageModule","ng-breadcrumbs","angular-loading-bar","ngPromiseExtras","ubc.ctlt.compair.common","ubc.ctlt.compair.common.xapi","ubc.ctlt.compair.rich.content","ubc.ctlt.compair.answer","ubc.ctlt.compair.attachment","ubc.ctlt.compair.classlist","ubc.ctlt.compair.comment","ubc.ctlt.compair.course","ubc.ctlt.compair.criterion","ubc.ctlt.compair.group","ubc.ctlt.compair.gradebook","ubc.ctlt.compair.home","ubc.ctlt.compair.comparison","ubc.ctlt.compair.login","ubc.ctlt.compair.lti","ubc.ctlt.compair.lti.consumer","ubc.ctlt.compair.lti.context","ubc.ctlt.compair.navbar","ubc.ctlt.compair.assignment","ubc.ctlt.compair.report","ubc.ctlt.compair.oauth","localytics.directives","templates"]);myApp.factory("StandardErrorHandler",["$log","Toaster",function(s,a){return function(e){e.data=e.data||{};var n=e.data.title||e.statusText,t=e.data.message||void 0;switch(e.status){case 400:case 409:s.error(e.status,n,t),a.warning(n,t);break;case 401:t=t||"Please log in again.",s.warn(e.status,n,t),a.warning(n,t);break;case 403:t=t||"Sorry, you don\'t have permission for this action.",s.error(e.status,n,t),a.error(n,t);break;case 404:t=t||"Resource not found.",s.error(e.status,n,t),a.error(n,t);break;default:t=t||"Unable to connect. This might be a server issue or your connection might be down. Please contact support if the problem continues.",s.error(e.status,n,t),a.error(n,t)}}}]),myApp.factory("defaultErrorHandlerInterceptor",["$rootScope","$q","StandardErrorHandler",function(t,s,a){return{responseError:function(e){var n=e.config;return n&&n.bypassErrorsInterceptor||!0!==t.skipAutoToastAPIErrors&&a(e),s.reject(e)}}}]),myApp.factory("ResolveDeferredRouteData",["$rootScope","$q","StandardErrorHandler","Toaster",function(r,t,o,i){return function(e,n){n=n||[];var s=t.defer(),a=_.concat(n,_.pullAll(_.keys(e),n));return r.skipAutoToastAPIErrors=!0,t.allSettled(e).then(function(t){for(var e in r.skipAutoToastAPIErrors=void 0,a){var n=t[a[e]];if(n&&"rejected"==n.state)return i.clear(),o(n.reason),s.reject(n.reason)}return _.forEach(t,function(e,n){t[n]=e.value}),s.resolve(t)}),s.promise}}]),myApp.factory("RouteResolves",["$q","$route","Toaster","Authorize","Session","LTI","CourseResource","AssignmentResource","ClassListResource","GroupResource","UserResource","ComparisonExampleResource","CriterionResource","AssignmentCommentResource","AnswerResource","TimerResource","GradebookResource","LTIConsumerResource","UserLTIUsersResource","UserThirdPartyUsersResource","AuthTypesEnabled",function(n,s,e,t,a,r,o,i,c,l,d,u,m,p,g,h,f,b,w,v,_){return{canManageUsers:function(){return t.can(t.MANAGE,d.MODEL)},canCreateUsers:function(){return t.can(t.CREATE,d.MODEL)},canAddCourse:function(){return t.can(t.CREATE,o.MODEL)},canEditCourse:function(){var e=s.current.params.courseId;return t.can(t.EDIT,o.MODEL,e)},canCreateAssignment:function(){var e=s.current.params.courseId;return t.can(t.CREATE,i.MODEL,e)},canManageAssignment:function(){var e=s.current.params.courseId;return t.can(t.MANAGE,i.MODEL,e)},loggedInUser:function(){return a.getUser()},consumer:function(){var e=s.current.params.consumerId;return b.get({id:e}).$promise},user:function(){var e=s.current.params.userId;return d.get({id:e}).$promise},userEditButton:function(){var e=s.current.params.userId;return d.getEditButton({id:e}).$promise},course:function(){var e=s.current.params.courseId;return o.get({id:e}).$promise},courseAssignments:function(){var e=s.current.params.courseId;return i.get({courseId:e}).$promise},classlist:function(){var e=s.current.params.courseId;return c.get({courseId:e}).$promise},groups:function(){var e=s.current.params.courseId;return l.getAllFromSession({courseId:e}).$promise},students:function(){var e=s.current.params.courseId;return o.getStudents({id:e}).$promise},instructorLabels:function(){var e=s.current.params.courseId;return o.getInstructorsLabels({id:e}).$promise},assignment:function(){var e=s.current.params.courseId,n=s.current.params.assignmentId;return i.get({courseId:e,assignmentId:n}).$promise},assignmentStatus:function(){var e=s.current.params.courseId,n=s.current.params.assignmentId;return i.getCurrentUserStatus({courseId:e,assignmentId:n}).$promise},assignmentComparisonExamples:function(){var e=s.current.params.courseId,n=s.current.params.assignmentId;return u.get({courseId:e,assignmentId:n}).$promise},gradebook:function(){var e=s.current.params.courseId,n=s.current.params.assignmentId;return f.get({courseId:e,assignmentId:n}).$promise},answer:function(){var e=s.current.params.courseId,n=s.current.params.assignmentId,t=s.current.params.answerId;return g.get({courseId:e,assignmentId:n,answerId:t}).$promise},userAnswers:function(){var e=s.current.params.courseId,n=s.current.params.assignmentId;return g.user({courseId:e,assignmentId:n}).$promise},answerUnsaved:function(){var e=s.current.params.courseId,n=s.current.params.assignmentId;return g.userUnsaved({courseId:e,assignmentId:n}).$promise},userLTIs:function(){if(_.lti){var e=s.current.params.userId;return w.get({id:e}).$promise}return n.when({objects:[]})},userThirdPartyUsers:function(){if(_.cas){var e=s.current.params.userId;return v.get({id:e}).$promise}return n.when({objects:[]})},timer:function(){return h.get().$promise},criteria:function(){return m.get().$promise},coursesAsInstructor:function(){return d.getTeachingUserCourses().$promise},ltiStatus:function(){return r.getStatus()}}}]),myApp.config(["$routeProvider","$logProvider","$httpProvider","$locationProvider","RouteResolvesProvider","ResolveDeferredRouteDataProvider","localStorageServiceProvider","chosenProvider",function(e,n,t,s,a,r,o,i){o.setStorageType("sessionStorage"),o.setPrefix("compair"),o.setStorageCookie(0),i.setOption({disable_search_threshold:8,search_contains:!0,enable_split_word_search:!0}),t.defaults.headers.common||(t.defaults.headers.common={}),t.defaults.headers.common["If-Modified-Since"]="0",t.defaults.headers.common.Accept="application/json",t.interceptors.push("defaultErrorHandlerInterceptor");var c=a.$get(),l=r.$get();e.when("/",{title:"Home",templateUrl:"modules/home/home-partial.html",label:"Home",controller:"HomeController",resolve:{resolvedData:function(){return l({loggedInUser:c.loggedInUser(),canAddCourse:c.canAddCourse(),canManageUsers:c.canManageUsers()})}}}).when("/oauth/create",{title:"Add User",templateUrl:"modules/oauth/oauth-partial.html",label:"Add User",controller:"OAuthController",resolve:{resolvedData:function(){}}}).when("/course/create",{title:"Add Course",templateUrl:"modules/course/course-partial.html",label:"Add Course",controller:"CourseController",resolve:{resolvedData:function(){return l({loggedInUser:c.loggedInUser()},["course"])}}}).when("/course/:courseId",{title:"Course Assignments",templateUrl:"modules/course/course-assignments-partial.html",label:"Course Assignments",controller:"CourseAssignmentsController",resolve:{resolvedData:function(){return l({course:c.course(),courseAssignments:c.courseAssignments(),loggedInUser:c.loggedInUser(),canEditCourse:c.canEditCourse(),canCreateAssignment:c.canCreateAssignment(),canManageAssignment:c.canManageAssignment(),canManageUsers:c.canManageUsers()},["course","courseAssignments"])}}}).when("/course/:courseId/edit",{title:"Edit Course",templateUrl:"modules/course/course-partial.html",label:"Edit Course",controller:"CourseController",resolve:{resolvedData:function(){return l({course:c.course(),loggedInUser:c.loggedInUser()},["course"])}}}).when("/course/:courseId/duplicate",{title:"Duplicate Course",templateUrl:"modules/course/course-duplicate-partial.html",label:"Duplicate Course",controller:"CourseDuplicateController"}).when("/course/:courseId/user",{title:"Manage Users",templateUrl:"modules/classlist/classlist-view-partial.html",label:"Manage Users",controller:"ClassViewController",resolve:{resolvedData:function(){return l({course:c.course(),classlist:c.classlist(),groups:c.groups(),loggedInUser:c.loggedInUser(),canManageUsers:c.canManageUsers(),canCreateUsers:c.canCreateUsers()},["course"])}}}).when("/course/:courseId/user/import",{title:"Import Users",templateUrl:"modules/classlist/classlist-import-partial.html",label:"Import Users",controller:"ClassImportController",resolve:{resolvedData:function(){return l({course:c.course()},["course"])}}}).when("/course/:courseId/user/import/results",{title:"Results",templateUrl:"modules/classlist/classlist-import-results-partial.html",label:"Results",controller:"ClassImportResultsController",resolve:{resolvedData:function(){}}}).when("/course/:courseId/assignment/create",{title:"Add Assignment",templateUrl:"modules/assignment/assignment-form-partial.html",label:"Add Assignment",controller:"AssignmentWriteController",resolve:{resolvedData:function(){return l({course:c.course(),criteria:c.criteria(),loggedInUser:c.loggedInUser(),canManageAssignment:c.canManageAssignment()},["course","criteria"])}}}).when("/course/:courseId/assignment/:assignmentId",{title:"Assignment & Results",templateUrl:"modules/assignment/assignment-view-partial.html",label:"Assignment & Results",controller:"AssignmentViewController",resolve:{resolvedData:function(){return l({course:c.course(),assignment:c.assignment(),students:c.students(),instructorLabels:c.instructorLabels(),loggedInUser:c.loggedInUser(),canManageAssignment:c.canManageAssignment()},["course","assignment","students","instructorLabels"])}},reloadOnSearch:!1}).when("/course/:courseId/assignment/:assignmentId/edit",{title:"Edit Assignment",templateUrl:"modules/assignment/assignment-form-partial.html",label:"Edit Assignment",controller:"AssignmentWriteController",resolve:{resolvedData:function(){return l({course:c.course(),assignment:c.assignment(),assignmentComparisonExamples:c.assignmentComparisonExamples(),criteria:c.criteria(),loggedInUser:c.loggedInUser(),canManageAssignment:c.canManageAssignment()},["course","assignment","assignmentComparisonExamples","criteria"])}}}).when("/course/:courseId/assignment/:assignmentId/duplicate",{title:"Duplicate Assignment",templateUrl:"modules/assignment/assignment-form-partial.html",label:"Duplicate Assignment",controller:"AssignmentWriteController",method:"copy",resolve:{resolvedData:function(){return l({course:c.course(),assignment:c.assignment(),assignmentComparisonExamples:c.assignmentComparisonExamples(),criteria:c.criteria(),loggedInUser:c.loggedInUser(),canManageAssignment:c.canManageAssignment()},["course","assignment","assignmentComparisonExamples","criteria"])}}}).when("/course/:courseId/assignment/:assignmentId/answer/create",{title:"Answer",templateUrl:"modules/answer/answer-form-partial.html",label:"Answer",controller:"AnswerWriteController",resolve:{resolvedData:function(){return l({course:c.course(),assignment:c.assignment(),answerUnsaved:c.answerUnsaved(),loggedInUser:c.loggedInUser(),timer:c.timer(),canManageAssignment:c.canManageAssignment()},["course","assignment","answerUnsaved"])}}}).when("/course/:courseId/assignment/:assignmentId/answer/:answerId/edit",{title:"Edit Answer",templateUrl:"modules/answer/answer-form-partial.html",label:"Edit Answer",controller:"AnswerWriteController",resolve:{resolvedData:function(){return l({course:c.course(),assignment:c.assignment(),answer:c.answer(),loggedInUser:c.loggedInUser(),timer:c.timer(),canManageAssignment:c.canManageAssignment()},["course","assignment","answer"])}}}).when("/course/:courseId/assignment/:assignmentId/compare",{title:"Compare Answer Pairs",templateUrl:"modules/comparison/comparison-form-partial.html",label:"Compare Answer Pairs",controller:"ComparisonController",resolve:{resolvedData:function(){return l({course:c.course(),assignment:c.assignment(),loggedInUser:c.loggedInUser(),timer:c.timer(),canManageAssignment:c.canManageAssignment()},["course","assignment"])}}}).when("/course/:courseId/assignment/:assignmentId/self_evaluation",{title:"Self-Evaluation",templateUrl:"modules/comparison/comparison-self_evaluation-partial.html",label:"Self-Evaluation",controller:"ComparisonSelfEvalController",resolve:{resolvedData:function(){return l({course:c.course(),assignment:c.assignment(),assignmentStatus:c.assignmentStatus(),userAnswers:c.userAnswers(),loggedInUser:c.loggedInUser()},["course","assignment","assignmentStatus","userAnswers"])}}}).when("/report",{title:"Download Reports",templateUrl:"modules/report/report-create-partial.html",label:"Download Reports",controller:"ReportCreateController",resolve:{resolvedData:function(){return l({coursesAsInstructor:c.coursesAsInstructor()},["coursesAsInstructor"])}}}).when("/user/create",{title:"Add User",templateUrl:"modules/user/user-create-partial.html",label:"Add User",controller:"UserWriteController",resolve:{resolvedData:function(){return l({canManageUsers:c.canManageUsers(),loggedInUser:c.loggedInUser()},[])}}}).when("/user/:userId/edit",{title:"Edit User",templateUrl:"modules/user/user-edit-partial.html",label:"Edit User",controller:"UserWriteController",resolve:{resolvedData:function(){return l({user:c.user(),canManageUsers:c.canManageUsers(),loggedInUser:c.loggedInUser()},["user"])}}}).when("/user/:userId",{title:"View User",templateUrl:"modules/user/user-view-partial.html",label:"View User",controller:"UserViewController",resolve:{resolvedData:function(){return l({user:c.user(),userEditButton:c.userEditButton(),canManageUsers:c.canManageUsers(),loggedInUser:c.loggedInUser()},["user","userEditButton"])}}}).when("/users",{title:"Manage Users",templateUrl:"modules/user/user-list-partial.html",label:"Manage Users",controller:"UserListController",resolve:{resolvedData:function(){return l({canManageUsers:c.canManageUsers(),loggedInUser:c.loggedInUser()},[])}}}).when("/users/:userId/manage",{title:"User Courses & Accounts",templateUrl:"modules/user/user-manage-partial.html",label:"User Courses & Accounts",controller:"UserManageController",resolve:{resolvedData:function(){return l({user:c.user(),canManageUsers:c.canManageUsers(),userLTIs:c.userLTIs(),userThirdPartyUsers:c.userThirdPartyUsers()},["user"])}}}).when("/lti",{title:"ComPAIR Setup",templateUrl:"modules/lti/lti-setup-partial.html",label:"ComPAIR Setup",controller:"LTIController",resolve:{resolvedData:function(){return l({ltiStatus:c.ltiStatus()},[])}},excludeBreadcrumb:!0}).when("/lti/consumer",{title:"Manage LTI Consumers",templateUrl:"modules/lti_consumer/lti-consumers-list-partial.html",label:"Manage LTI",controller:"LTIConsumerListController",resolve:{resolvedData:function(){return l({canManageUsers:c.canManageUsers()},[])}}}).when("/lti/consumer/create",{title:"Add LTI Consumer",templateUrl:"modules/lti_consumer/lti-consumer-form-partial.html",label:"Add LTI Consumer",controller:"LTIConsumerWriteController",resolve:{resolvedData:function(){return l({canManageUsers:c.canManageUsers()},[])}}}).when("/lti/consumer/:consumerId/edit",{title:"Edit LTI Consumer",templateUrl:"modules/lti_consumer/lti-consumer-form-partial.html",label:"Edit LTI Consumer",controller:"LTIConsumerWriteController",resolve:{resolvedData:function(){return l({consumer:c.consumer(),canManageUsers:c.canManageUsers()},["consumer"])}}}).when("/lti/consumer/:consumerId",{title:"View LTI Consumer",templateUrl:"modules/lti_consumer/lti-consumer-view-partial.html",label:"View LTI Consumer",controller:"LTIConsumerViewController",resolve:{resolvedData:function(){return l({consumer:c.consumer(),canManageUsers:c.canManageUsers()},["consumer"])}}}).otherwise({redirectTo:"/"}),n.debugEnabled(!1)}]),myApp.run(["$rootScope",function(a){a.$on("$routeChangeError",function(e,n,t,s){void 0===t||void 0!==a.routeResolveLoadError?a.routeResolveLoadError=s:a.routeResolveLoadError=void 0}),a.$on("$routeChangeSuccess",function(e,n,t){a.routeResolveLoadError=void 0,a.title=n.$$route.title})}]),angular.module("templates",[]).run(["$templateCache",function(e){}]),angular.module("templates").run(["$templateCache",function(e){e.put("modules/answer/answer-form-partial.html",\'<div ng-show="example">\\n    <h1>{{answerName}}</h1>\\n    <p class="intro-text">This is one answer in the pair students will review as the first comparison for this assignment.</p>\\n</div>\\n<div ng-show="!example">\\n    <h1 ng-if="method == \\\'create\\\'">Answer</h1>\\n    <h1 ng-if="method == \\\'edit\\\'">Edit Answer</h1>\\n</div>\\n\\n<div ng-hide="comparison_example">\\n\\n    <p class="intro-text">Answer the assignment with a file attachment and/or response in the text editor. Please note <strong>answers are not automatically saved</strong> as you type. However, you may manually save a draft of your answer below.</p>\\n\\n    <p class="assignment-toggle"><a href="" ng-click="showAssignment = !showAssignment">\\n        <i class="fa fa-chevron-down" ng-show="showAssignment "></i>\\n        <i class="fa fa-chevron-right" ng-hide="showAssignment "></i>\\n        Show description for assignment "{{assignment.name}}"\\n    </a></p>\\n\\n    <div ng-show="showAssignment" class="standalone-assignment">\\n        <h2><i class="fa fa-comments"></i> {{assignment.name}}</h2>\\n        <rich-content content="assignment.description" attachment="assignment.file"></rich-content>\\n    </div>\\n\\n</div>\\n\\n<form class="form" name="answerForm" ng-submit="answerSubmit()" novalidate confirm-form-exit form-type="answer">\\n    <fieldset>\\n        <legend>Answer Details</legend>\\n        <div class="h3 text-center" ng-show="!canManageAssignment && showCountDown && comparison_example !== true">\\n            <timer end-time="assignment.answer_end">\\n                <span ng-show="minutes > 0 || seconds > 0" title="Official time remaining until deadline" class="bg-danger alert text-danger"><i class="glyphicon glyphicon-time"></i> {{minutes}} minutes {{seconds}} seconds left</span>\\n                <span ng-show="minutes == 0 && seconds == 0" class="bg-danger alert text-danger"><i class="glyphicon glyphicon-time"></i> DEADLINE REACHED</span>\\n            </timer>\\n            <br /><br />\\n            <span class="h4">(Answer must be submitted before deadline to be accepted)</span>\\n        </div>\\n\\n        <div class="instructional-text">\\n                <p ng-if="canManageAssignment && !comparison_example">Answers submitted as an instructor or TA <strong>will be included</strong> in comparisons unless this option is unchecked below. All answers will appear to students when the assignment completes.</p>\\n                <p>Allowed file types for attachments include {{ UploadValidator.getAttachmentExtensionsForDisplay() }}, with a maximum file size of <strong>{{UploadValidator.getAttachmentUploadLimit() | filesize }}</strong>. Any files you upload will be attached when you <strong>save or submit this answer</strong> but not before.</p>\\n        </div>\\n\\n        <div class="form-group" ng-if="canManageAssignment && answer.draft && comparison_example !== true">\\n            <label class="required-star" for="user_id">Submit As</label>\\n            <select id="user_id" name="user_id" required\\n                    ng-model="answer.user_id" class="form-control" chosen width="\\\'100%\\\'"\\n                    ng-options="u.id as u.fullname_sortable for u in classlist"\\n                    ng-change="onSubmitAsChanged(answer.user_id)">\\n                <option value="">- Select a user -</option>\\n            </select>\\n        </div>\\n\\n        <div class="form-group" ng-if="canManageAssignment && submitAsInstructorOrTA && comparison_example !== true">\\n            <label for="comparable" ng-class="!answer.draft ? \\\'text-muted not-bold\\\' : \\\'\\\'">\\n                <input type="checkbox" id="comparable" name="comparable"\\n                    ng-model="answer.comparable"\\n                    ng-false-value="false"\\n                    ng-disabled="!answer.draft" >&nbsp;\\n                Allow this instructor answer to appear in comparison pairings (when the algorithm selects it)\\n            </label>\\n        </div>\\n\\n        <div>\\n            <label class="required-star" for="importFile">Answer Attachment and/or Text</label>\\n            <input type="file" nv-file-select uploader="uploader" ng-click="answerForm.$setDirty()" id="importFile" ng-hide="(uploader.queue.length) || (answer.file && answer.uploadedFile)" multiple/>\\n            <br />\\n            <div class="row" ng-repeat="item in uploader.queue">\\n                <div class="col-md-2">\\n                    <a href="" ng-click="item.cancel();item.remove();resetFileUploader();">\\n                        Remove\\n                    </a>\\n                </div>\\n                <div class="col-md-7"><i class="fa fa-paperclip"></i> File: <strong>{{item.file.name}}</strong></div>\\n                <div class="col-md-1">{{item.file.size/1024/1024|number:2}} MB</div>\\n                <div class="col-md-2" ng-if="item.progress < 100"><strong>{{item.progress}}% uploaded</strong></div>\\n                <div class="col-md-2" ng-if="item.progress == 100 && !item.isSuccess"><strong>Storing file...</strong></div>\\n                <div class="col-md-2" ng-if="item.progress == 100 && item.isSuccess"><strong>Attached</strong></div>\\n                <br /><br />\\n            </div>\\n        </div>\\n        <div ng-show="answer.file && answer.uploadedFile">\\n            <div class="row">\\n                <div class="col-md-1">\\n                    <a href="" ng-click="deleteFile(answer.file)">\\n                        Remove\\n                    </a>\\n                </div>\\n                <div class="col-md-4">\\n                    <i class="fa fa-paperclip"></i> Attached File: <strong>{{answer.file.alias}}</strong>\\n                </div>\\n            </div>\\n            <br />\\n        </div>\\n        <div class="form-group">\\n            <textarea ng-model="answer.content" id="answerContent"\\n                class="form-control" rows="8" ckeditor="editorOptions" ng-required="!(uploader.queue.length || uploadedFile || answer.file)">\\n            </textarea>\\n        </div>\\n    </fieldset>\\n    <div class="text-center" ng-show="answer.draft && (!canManageAssignment || answer.user_id == loggedInUserId)">\\n        <input type="submit" class="btn btn-default btn-lg" value="Save Draft"\\n            ng-click="saveDraft = true"\\n            ng-disabled="answerForm.$invalid || submitted || (uploader.queue.length && !uploader.queue[0].isSuccess) || uploader.waitForKalturaComplete" />\\n        &nbsp; &nbsp;\\n        <input type="submit" class="btn btn-success btn-lg" value="Submit"\\n            ng-click="saveDraft = false"\\n            ng-disabled="answerForm.$invalid || submitted || (uploader.queue.length && !uploader.queue[0].isSuccess) || uploader.waitForKalturaComplete" />\\n        <p ng-if="submitted">\\n                <i class="fa fa-spin fa-spinner"></i>\\n                &nbsp; Submitting answer...\\n        </p>\\n    </div>\\n    <div ng-show="!answer.draft || (canManageAssignment && answer.user_id != loggedInUserId)" class="text-center">\\n        <input type="submit" class="btn btn-success btn-lg center-block" value="Save"\\n            ng-click="saveDraft = false"\\n            ng-disabled="answerForm.$invalid || submitted || (uploader.queue.length && !uploader.queue[0].isSuccess) || uploader.waitForKalturaComplete" />\\n        <p ng-if="submitted">\\n                <i class="fa fa-spin fa-spinner"></i>\\n                &nbsp; Saving answer...\\n        </p>\\n    </div>\\n</form>\\n\'),e.put("modules/answer/answer-modal-partial.html",\'<modal-cancel-button modal-instance="modalInstance" ng-show="modalInstance !== undefined"></modal-cancel-button>\\n<ng-include src="\\\'modules/answer/answer-form-partial.html\\\'"></ng-include>\'),e.put("modules/assignment/assignment-form-partial.html",\'<h1 ng-if="method == \\\'create\\\'">Add Assignment</h1>\\n<h1 ng-if="method == \\\'edit\\\'">Edit Assignment</h1>\\n\\n<h1 ng-if="method == \\\'copy\\\'">Duplicate: {{originalAssignment.name}}</h1>\\n<br ng-if="method == \\\'copy\\\'">\\n<p class="intro-text" ng-if="method == \\\'copy\\\'">Please update the schedule and any other fields requiring changes to duplicate your assignment. This process will <em>not</em> copy submitted answers or comparisons.</p>\\n\\n<form name="assignmentForm" class="form" ng-submit="assignmentSubmit()" novalidate>\\n\\n    <fieldset>\\n        <legend>Assignment Details</legend>\\n        <div class="lti-param-copy pull-right" ng-show="assignment.id != null && assignment.lti_course_linked">\\n            LTI Parameter: "<em>assignment={{assignment.id}}</em>"\\n            &nbsp;&nbsp;\\n            \\x3c!-- TODO: when ui bootstrap is updated change trigger to \\\'outsideClick\\\' --\\x3e\\n            <a href="" uib-tooltip="Copied" tooltip-placement="bottom" tooltip-trigger="click"\\n                  ngclipboard data-clipboard-text="assignment={{assignment.id}}"\\n                  title="Copy the parameter to create a link from an LTI tool">\\n                Copy?\\n            </a>\\n        </div>\\n\\n        <compair-field-with-feedback form-control="assignmentForm.assignmentName">\\n            <label for="assignmentName" class="required-star">Short Name</label>\\n            <input class="form-control" id="assignmentName" type="text"\\n                name="assignmentName" ng-model="assignment.name" placeholder="short question or title that will link to the assignment"\\n                required ng-maxlength="255" auto-focus />\\n            <span ng-if="assignmentForm.assignmentName.$error.maxlength" class="help-block has-error">Maximum length is 255 characters</span>\\n        </compair-field-with-feedback>\\n\\n        <div>\\n            <label for="importFile">Related Attachment</label>\\n            <input type="file" nv-file-select uploader="uploader" id="importFile" ng-hide="(uploader.queue.length) || (assignment.file && assignment.uploadedFile)" multiple/>\\n\\n            <div class="row" ng-repeat="item in uploader.queue">\\n                <div class="col-md-1">\\n                    <a href="" ng-click="item.cancel();item.remove();resetFileUploader();">\\n                        Remove\\n                    </a>\\n                </div>\\n                <div class="col-md-8"><i class="fa fa-paperclip"></i> File: <strong>{{item.file.name}}</strong></div>\\n                <div class="col-md-1">{{item.file.size/1024/1024|number:2}} MB</div>\\n                <div class="col-md-2" ng-if="item.progress < 100"><strong>{{item.progress}}% uploaded</strong></div>\\n                <div class="col-md-2" ng-if="item.progress == 100 && !item.isSuccess"><strong>Storing file...</strong></div>\\n                <div class="col-md-2" ng-if="item.progress == 100 && item.isSuccess"><strong>Attached</strong></div>\\n            </div>\\n        </div>\\n\\n        <div ng-show="assignment.file && assignment.uploadedFile">\\n            <div class="row">\\n                <div class="col-md-1">\\n                    <a href="" ng-click="deleteFile(assignment.file)">\\n                        Remove\\n                    </a>\\n                </div>\\n                <div class="col-md-11">\\n                    <i class="fa fa-paperclip"></i> Attached File: <strong>{{assignment.file.alias}}</strong>\\n                </div>\\n            </div>\\n            <br>\\n        </div>\\n        <p class="instructional-text">\\n                Allowed file types include {{ UploadValidator.getAttachmentExtensionsForDisplay() }}, with a maximum file size of <strong>{{UploadValidator.getAttachmentUploadLimit() | filesize }}</strong>. Any files you upload will be attached when you <strong>save this assignment</strong> but not before.\\n        </p>\\n        <div class="form-group">\\n            <label for="assignmentDescription">Additional Assignment Information</label>\\n            <textarea ckeditor="editorOptions" rows="8"\\n                ng-model="assignment.description" class="form-control" id="assignmentDescription">\\n            </textarea>\\n        </div>\\n    </fieldset>\\n\\n    <fieldset>\\n        <legend>Schedule</legend>\\n        <div class="instructional-text">\\n            <p><strong>Students can submit and edit their answers only during the answering dates and times you set below.</strong> Students do not see an assignment in the application until the answer period begins. Students can read all answers only <em>after</em> the answer period ends <em>and</em> they have completed the required number of comparisons.</p>\\n            <p><strong>By default, students can compare answers after the answer period ends.</strong> You may instead set specific dates and times for the comparison period. Note that if you manually set a comparison period, students can read all answers only <em>after</em> the answer <em>and</em> comparison periods end.</p>\\n        </div>\\n\\n        <div class="row">\\n            <div class="col-md-6 form-group">\\n                <label class="required-star">Answering Begins</label><br />\\n                <div class="assignment-date">\\n                    <span class="input-group">\\n                        <input type="text" class="form-control" uib-datepicker-popup="{{format}}" ng-model="date.astart.date"\\n                            is-open="date.astart.opened" required\\n                            datepicker-options="{ minDate: datePickerMinDate(course.start_date), maxDate: datePickerMaxDate(date.aend.date, course.end_date) }"\\n                            />\\n                        <span class="input-group-btn">\\n                            <button type="button" class="btn btn-default" ng-click="datePickerOpen($event, date.astart)"><i class="glyphicon glyphicon-calendar"></i></button>\\n                        </span>\\n                    </span>\\n                </div>\\n                <div class="assignment-date">\\n                    <div uib-timepicker ng-model="date.astart.time" minute-step="1" mousewheel="false"></div>\\n                </div>\\n            </div>\\n            <div class="col-md-6 form-group">\\n                <label class="required-star">Answering Ends</label><br />\\n                <div class="assignment-date">\\n                    <span class="input-group">\\n                        <input type="text" class="form-control" uib-datepicker-popup="{{format}}" ng-model="date.aend.date"\\n                            is-open="date.aend.opened" required\\n                            datepicker-options="{ minDate: datePickerMinDate(date.astart.date, course.start_date), maxDate: datePickerMaxDate(course.end_date) }"\\n                            />\\n                        <span class="input-group-btn">\\n                            <button type="button" class="btn btn-default" ng-click="datePickerOpen($event, date.aend)"><i class="glyphicon glyphicon-calendar"></i></button>\\n                        </span>\\n                    </span>\\n                </div>\\n                <div class="assignment-date">\\n                    <div uib-timepicker ng-model="date.aend.time" minute-step="1" mousewheel="false"></div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <hr />\\n\\n        <input id="availableCheck" type="checkbox" ng-model="assignment.availableCheck">\\n        <label for="availableCheck">Manually set when students compare answers for this assignment<span ng-show="assignment.availableCheck">:</span></label>\\n        <br /><br />\\n\\n        <div ng-show="assignment.availableCheck">\\n\\n            <div class="row">\\n                <div class="col-md-6 form-group">\\n                    <label class="required-star">Comparing Begins</label><br />\\n                    <div class="assignment-date">\\n                        <span class="input-group">\\n                            <input type="text" class="form-control" uib-datepicker-popup="{{format}}" ng-model="date.cstart.date"\\n                                is-open="date.cstart.opened" ng-required="assignment.availableCheck"\\n                                datepicker-options="{ minDate: datePickerMinDate(date.astart.date, course.start_date), maxDate: datePickerMaxDate(date.cend.date, course.end_date) }"\\n                                />\\n                            <span class="input-group-btn">\\n                                <button type="button" class="btn btn-default" ng-click="datePickerOpen($event, date.cstart)"><i class="glyphicon glyphicon-calendar"></i></button>\\n                            </span>\\n                        </span>\\n                    </div>\\n                    <div class="assignment-date">\\n                        <div uib-timepicker ng-model="date.cstart.time" minute-step="1" mousewheel="false"></div>\\n                    </div>\\n                </div>\\n                <div class="col-md-6 form-group">\\n                    <label class="required-star">Comparing Ends</label><br />\\n                    <div class="assignment-date">\\n                        <span class="input-group">\\n                            <input type="text" class="form-control" uib-datepicker-popup="{{format}}" ng-model="date.cend.date"\\n                                is-open="date.cend.opened" ng-required="assignment.availableCheck"\\n                                datepicker-options="{ minDate: datePickerMinDate(date.cstart.date, course.start_date), maxDate: datePickerMaxDate(course.end_date) }"\\n                                />\\n                            <span class="input-group-btn">\\n                                <button type="button" class="btn btn-default" ng-click="datePickerOpen($event, date.cend)"><i class="glyphicon glyphicon-calendar"></i></button>\\n                            </span>\\n                        </span>\\n                    </div>\\n                    <div class="assignment-date">\\n                        <div uib-timepicker ng-model="date.cend.time" minute-step="1" mousewheel="false"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </fieldset>\\n\\n    <fieldset>\\n        <legend>Comparison Prompts</legend>\\n        <div class="instructional-text">\\n            <p><strong>These criteria and instructions appear when students compare answers</strong> for this assignment, to guide them in their critical-thinking process. For each comparison, students have to choose a preferred answer for each criterion listed below and provide peer feedback to both answers as prompted below.</p>\\n            <p>Note that the <strong>number of criteria is permanently set once students start comparing</strong>, so you won\\\'t be able to add or drop criteria after comparing begins. For multiple criteria, if you use the adaptive answer selection setting (see next section), you may also add a weight for each criterion before comparing begins.</p>\\n        </div>\\n        <ng-include src="\\\'modules/criterion/criterion-assignment-partial.html\\\'"></ng-include>\\n        <hr />\\n        <label>Peer Feedback Instructions</label>\\n        <br />\\n        <div ng-show="!assignment.peerFeedbackCheck">\\n            <p>You are currently using the default:</p>\\n            <blockquote>Use any instructor-provided guidelines or answer general questions, based on the criteria above: What did the author do well? Where might the author improve? Remember to make your comments\xe2\x80\x94including criticisms\xe2\x80\x94encouraging, respectful, and specific.</blockquote>\\n        </div>\\n        <input id="peerFeedbackCheck" type="checkbox" ng-model="assignment.peerFeedbackCheck" ng-checked="assignment.peerFeedbackCheck || assignment.peer_feedback_prompt" ng-disabled="assignment.peer_feedback_prompt">\\n        <label for="peerFeedbackCheck">Manually set how students are prompted for peer feedback<span ng-if="assignment.peerFeedbackCheck || assignment.peer_feedback_prompt">:</span></label>\\n        <div ng-if="assignment.peerFeedbackCheck || assignment.peer_feedback_prompt">\\n            <div class="form-group">\\n                <textarea ng-model="assignment.peer_feedback_prompt" id="assignmentPeerFeedbackPrompt" class="form-control" ckeditor="editorOptions" rows="4"></textarea>\\n            </div>\\n        </div>\\n        <br />\\n    </fieldset>\\n\\n    <fieldset>\\n        <legend>Comparison Settings</legend>\\n        <div class="instructional-text">\\n            <p>For each comparison, students have to choose a preferred answer for each criterion listed above and provide peer feedback to both answers as prompted above. In a self-evaluation, students provide feedback on their own answer. For this assignment, students are currently required to submit:\\n                <strong ng-show="assignment.number_of_comparisons && !assignment.addPractice">{{assignment.number_of_comparisons}} comparison<span ng-show="assignment.number_of_comparisons > 1">s</span></strong><strong ng-show="assignment.number_of_comparisons && assignment.addPractice">{{assignment.number_of_comparisons*1+1}} comparisons</strong><strong ng-show="!assignment.number_of_comparisons && assignment.addPractice">1 comparison</strong><strong ng-show="!assignment.number_of_comparisons && !assignment.addPractice">0 comparisons</strong><span ng-show="assignment.enable_self_evaluation"> and <strong>1 self-evaluation</strong></span>.\\n            </p>\\n            <p>By default, <strong>answers are scored and ranked</strong> during comparisons, and scores are used to pair similar answers. However, you may disable this by changing the answer selection option below.</p>\\n        </div>\\n\\n        <label class="required-star">Answer Pair Selection</label>\\n        <p ng-if="(assignment.pairing_algorithm == PairingAlgorithm.adaptive || assignment.pairing_algorithm == PairingAlgorithm.adaptive_min_delta) && assignment.rank_display_limit == null">You are currently using the default:</p>\\n        <blockquote ng-if="assignment.pairing_algorithm == PairingAlgorithm.adaptive || assignment.pairing_algorithm == PairingAlgorithm.adaptive_min_delta">Adaptive&mdash;Add score/rank to answers, pair answers by scores, <span ng-if="assignment.rank_display_limit == null">hide ranking from students</span><span ng-if="assignment.rank_display_limit == 10">let students see answers ranked 10<sup>th</sup> and higher</span><span ng-if="assignment.rank_display_limit == 20">let students see answers ranked 20<sup>th</sup> and higher</span></blockquote>\\n        <blockquote ng-if="assignment.pairing_algorithm == PairingAlgorithm.random">Random&mdash;Don\\\'t add score/rank to answers, pair answers randomly</blockquote>\\n        <a href="" ng-click="showAdvanced = !showAdvanced">\\n            <p>\\n                <i class="fa fa-chevron-down" ng-show="showAdvanced"></i>\\n                <i class="fa fa-chevron-right" ng-hide="showAdvanced"></i>\\n                <span>Change how answers are selected and scored/ranked?</span>\\n            </p>\\n        </a>\\n        <div ng-show="showAdvanced">\\n            <br />\\n            <div class="row">\\n                <div class="form-check col-md-1"></div>\\n                <div class="form-check col-md-5">\\n                    <label class="form-check-label">\\n                        <input class="form-check-input" type="radio" ng-model="assignment.pairing_algorithm"\\n                               value="{{PairingAlgorithm.adaptive_min_delta}}" ng-disabled="assignment.compared">\\n                        &nbsp;Adaptively select answers for comparison (add score/rank):\\n                    </label>\\n                    <ul>\\n                        <li>Answers receive a <a href="http://ubc.github.io/compair/site/best-practices.html#scores" target="_blank">dynamic score</a> (only instructors see)</li>\\n                        <li>Answers are paired for comparison based on similarity in scores</li>\\n                        <li>Adaptive pairing allows for meaningful scores after a manageable number of comparisons per student</li>\\n                        <li>Later students <em>may</em> experience increased level of difficulty</li>\\n                    </ul>\\n                    <div class="rank-selection">\\n                        <label ng-show="assignment.pairing_algorithm == \\\'{{PairingAlgorithm.adaptive}}\\\' || assignment.pairing_algorithm == \\\'{{PairingAlgorithm.adaptive_min_delta}}\\\'">Let students see rank (but not score) for: &nbsp;</label>\\n                        <select ng-show="assignment.pairing_algorithm == \\\'{{PairingAlgorithm.adaptive}}\\\' || assignment.pairing_algorithm == \\\'{{PairingAlgorithm.adaptive_min_delta}}\\\'" ng-model="assignment.rank_display_limit"\\n                                ng-options="option.value as option.label for option in rankLimitOptions">\\n                            <option value="">No answers (ranking hidden)</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class="form-check col-md-1"></div>\\n                <div class="form-check col-md-5">\\n                    <label class="form-check-label">\\n                        <input class="form-check-input" type="radio" ng-model="assignment.pairing_algorithm"\\n                               value="{{PairingAlgorithm.random}}" ng-disabled="assignment.compared">\\n                        &nbsp;Randomly select answers for comparison (no score/rank):\\n                    </label>\\n                    <ul>\\n                        <li>Answers are paired for comparison based on chance alone</li>\\n                        <li>Answers receive no score due to random pairing</li>\\n                        <li>Random pairing makes any scoring meaningless without excessive comparisons per student</li>\\n                        <li>All students <em>theoretically</em> experience similar level of difficulty</li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <hr />\\n\\n        <div class="form-group">\\n            <compair-field-with-feedback form-control="assignmentForm.number_of_comparisons">\\n                <label class="required-star">Comparisons Required from Each Student</label>\\n                <input type="text" id="number_of_comparisons" name="number_of_comparisons" class="form-control" ng-model="assignment.number_of_comparisons" ng-pattern="/^[1-9]\\\\d*$/" required placeholder="number of comparisons required from each student">\\n            </compair-field-with-feedback>\\n        </div>\\n\\n        <hr />\\n\\n        <p><strong>Add-On Comparison Options</strong></p>\\n        <input id="add_practice" type="checkbox" name="add_practice" ng-model="assignment.addPractice" ng-disabled="assignment.compared">\\n        <label class="not-bold" for="add_practice">Start students with an instructor-created answer pair for practice (before peer comparisons)</label>\\n\\n        <div ng-show="assignment.addPractice">\\n            <br />\\n            <div class="row">\\n                <div class="col-md-1"></div>\\n                <div class="col-md-5 form-group">\\n                    <label class="required-star">Answer A</label>\\n                    &nbsp;&mdash;&nbsp;\\n                    <span ng-if="!assignment.compared">\\n                        <a href="" ng-click="changeAnswer(comparison_example.answer1, true)">Edit</a>\\n                    </span>\\n                    <span ng-if="assignment.compared" class="text-muted">(not editable)</span>\\n                    <div ng-if="!comparison_example.answer1.content && !comparison_example.answer1.file">\\n                        <p class="text-muted"><em>Click \\\'Edit\\\' above to add your example answer here.</em></p>\\n                    </div>\\n                    <rich-content content="comparison_example.answer1.content" attachment="comparison_example.answer1.file"></rich-content>\\n                </div>\\n                <div class="col-md-1">\\n                    <label>vs.</label>\\n                </div>\\n                <div class="col-md-5 form-group">\\n                    <label class="required-star">Answer B</label>\\n                    &nbsp;&mdash;&nbsp;\\n                    <span ng-if="!assignment.compared">\\n                        <a href="" ng-click="changeAnswer(comparison_example.answer2, false)">Edit</a>\\n                    </span>\\n                    <span ng-if="assignment.compared" class="text-muted">(not editable)</span>\\n                    <div ng-if="!comparison_example.answer2.content && !comparison_example.answer2.file">\\n                        <p class="text-muted"><em>Click \\\'Edit\\\' above to add your example answer here.</em></p>\\n                    </div>\\n                    <rich-content content="comparison_example.answer2.content" attachment="comparison_example.answer2.file"></rich-content>\\n                </div>\\n            </div>\\n\\n        </div>\\n\\n        <br />\\n\\n        <input id="enable_self_evaluation" type="checkbox" name="enable_self_evaluation" ng-model="assignment.enable_self_evaluation">\\n        <label class="not-bold" for="enable_self_evaluation">Require that students also self-evaluate by leaving feedback on their own answer (after peer comparisons)</label>\\n\\n        <br />\\n\\n        <input id="students_can_reply" type="checkbox" ng-model="assignment.students_can_reply">\\n        <label class="not-bold" for="students_can_reply">Allow students to freely post feedback on one another\\\'s answers, enabling optional additional feedback after peer comparisons</label>\\n\\n        <br />\\n\\n        <input id="educators_can_compare" type="checkbox" name="educators_can_compare" ng-model="assignment.educators_can_compare">\\n        <label class="not-bold" for="educators_can_compare">Allow instructors and teaching assistants to compare <span ng-show="assignment.pairing_algorithm == \\\'{{PairingAlgorithm.adaptive}}\\\' || assignment.pairing_algorithm == \\\'{{PairingAlgorithm.adaptive_min_delta}}\\\'">and affect scores of </span>student answers</label>\\n\\n        <br /><br />\\n\\n        <p class="text-center alert alert-info">With these settings, students will review in total</strong>\\n                <span ng-show="!assignment.enable_self_evaluation">\\n                    <strong ng-show="assignment.number_of_comparisons && !assignment.addPractice">{{assignment.number_of_comparisons*2}} answers</strong><strong ng-show="assignment.number_of_comparisons && assignment.addPractice">{{assignment.number_of_comparisons*2+2}} answers</strong><strong ng-show="!assignment.number_of_comparisons && assignment.addPractice">2 answers</strong><strong ng-show="!assignment.number_of_comparisons && !assignment.addPractice">0 answers</strong></span>\\n                <span ng-show="assignment.enable_self_evaluation">\\n                    <strong ng-show="assignment.number_of_comparisons && !assignment.addPractice">{{assignment.number_of_comparisons*2+1}} answers</strong><strong ng-show="assignment.number_of_comparisons && assignment.addPractice">{{assignment.number_of_comparisons*2+3}} answers</strong><strong ng-show="!assignment.number_of_comparisons && assignment.addPractice">3 answers</strong><strong ng-show="!assignment.number_of_comparisons && !assignment.addPractice">1 answer</strong>,\\n                    including their own,</span>\\n                for this assignment.\\n    </fieldset>\\n\\n    <fieldset>\\n        <legend>Participation Grade</legend>\\n\\n        <div class="instructional-text">\\n            <p>Enter the <strong>relative weight you\\\'d like assigned to each part of the assignment</strong> a student completes, and this will be computed into a percentage, adding up to 100% participation for the whole assignment. Note the comparison percentage is awarded based on how many comparisons a student completes out of the required number (e.g., if a student completes 2/3 comparisons and comparisons are 33% of the grade, a student will receive 22% for comparisons). </p>\\n        </div>\\n\\n        <div class="form-group">\\n            <label class="required-star">Grade Weights</label>\\n            <div class="row">\\n                <div class="col-md-2">\\n                    <span class="text-muted">Answer ({{getGradeWeightAsPercent(assignment.answer_grade_weight)|number:2}}%)</span>\\n                    <input class="form-control" type="number" min="0" required\\n                           id="answer_grade_weight" name="answer_grade_weight" ng-model="assignment.answer_grade_weight">\\n                </div>\\n                <div class="col-md-1 text-center">\\n                    +\\n                </div>\\n                <div class="col-md-2">\\n                    <span class="text-muted">Comparisons ({{getGradeWeightAsPercent(assignment.comparison_grade_weight)|number:2}}%)</span>\\n                    <input class="form-control" type="number" min="0" required\\n                           id="comparison_grade_weight" name="comparison_grade_weight" ng-model="assignment.comparison_grade_weight">\\n                </div>\\n                <div class="col-md-1 text-center" ng-show="assignment.enable_self_evaluation">\\n                    +\\n                </div>\\n                <div class="col-md-3" ng-show="assignment.enable_self_evaluation">\\n                    <span class="text-muted">Self-Evaluation ({{getGradeWeightAsPercent(assignment.self_evaluation_grade_weight)|number:2}}%)</span>\\n                    <input class="form-control" type="number" min="0" required\\n                           id="self_evaluation_grade_weight" name="self_evaluation_grade_weight" ng-model="assignment.self_evaluation_grade_weight">\\n                </div>\\n                <div class="col-md-1 text-center">\\n                    =\\n                </div>\\n                <div class="col-md-2">\\n                    <p class="text-muted">100.00%</p>\\n                </div>\\n            </div>\\n        </div>\\n    </fieldset>\\n\\n    <input ng-if="method == \\\'copy\\\'" type="submit" class="btn btn-success btn-lg center-block" value="Duplicate"\\n        ng-disabled="assignmentForm.$invalid || assignment.criteria.length == 0 || submitted || (uploader.queue.length && !uploader.queue[0].isSuccess) || uploader.waitForKalturaComplete" />\\n    <input ng-if="method != \\\'copy\\\'" type="submit" class="btn btn-success btn-lg center-block" value="Save"\\n        ng-disabled="assignmentForm.$invalid || assignment.criteria.length == 0 || submitted || (uploader.queue.length && !uploader.queue[0].isSuccess) || uploader.waitForKalturaComplete" />\\n\\n</form>\\n\'),e.put("modules/assignment/assignment-view-partial.html",\'<div class="assignment-screen">\\n\\n    <div class="row">\\n        <header class="col-sm-6">\\n            <h1>Assignment &amp; Results</h1>\\n            <br class="hidden-xs" ng-if="!canManageAssignment" />\\n        </header>\\n        <div class="col-sm-6 sub-nav">\\n            <span ng-if="canManageAssignment || assignment.user_id == loggedInUserId">\\n                <a ng-href="#/course/{{courseId}}/assignment/{{assignment.id}}/edit" title="Edit this assignment" class="btn btn-primary">\\n                    <i class="fa fa-edit"></i>\\n                    Edit Assignment\\n                </a>\\n            </span>\\n        </div>\\n    </div>\\n\\n    <div class="standalone-assignment">\\n\\n        \\x3c!-- Assignment --\\x3e\\n        <h2><i class="fa fa-comments"></i> {{assignment.name}}</h2>\\n\\n        \\x3c!-- Assignment Details & Attachment --\\x3e\\n        <rich-content content="assignment.description" attachment="assignment.file" class="assignment-desc"></rich-content>\\n\\n        \\x3c!-- Assignment Metadata Footer --\\x3e\\n        <ul class="list-inline assignment-metadata-list">\\n            <assignment-metadata name="answeringDates"></assignment-metadata>\\n            <assignment-metadata name="comparingDates"></assignment-metadata>\\n            <assignment-metadata name="feedbackCountBelow"></assignment-metadata>\\n            <assignment-metadata name="feedbackCountEmpty"></assignment-metadata>\\n            <assignment-metadata name="completedFeedback"></assignment-metadata>\\n            <assignment-metadata name="missedFeedback"></assignment-metadata>\\n            <assignment-metadata name="answerDue"></assignment-metadata>\\n            <assignment-metadata name="comparisonsDue"></assignment-metadata>\\n            <assignment-metadata name="missingComparisonsFeedback"></assignment-metadata>\\n        </ul>\\n\\n        \\x3c!-- Assignment Actions --\\x3e\\n        <div class="text-right">\\n            <assignment-action-button name="answer"></assignment-action-button>\\n            <assignment-action-button name="finishAnswer"></assignment-action-button>\\n            <assignment-action-button name="compare"></assignment-action-button>\\n            <assignment-action-button name="selfEval"></assignment-action-button>\\n            <assignment-text name="notEnoughAnswers"></assignment-text>\\n            <assignment-text name="noSelfEval"></assignment-text>\\n        </div>\\n\\n    </div>\\x3c!-- closes Assignment box --\\x3e\\n\\n    \\x3c!-- Tabs --\\x3e\\n    <ul class="nav nav-tabs" role="tablist">\\n        <li id="answers" ng-class="{active:showTab(\\\'answers\\\')}">\\n            <a ng-click="setTab(\\\'answers\\\')" href="">All Answers <span class="hidden-xs" ng-show="canManageAssignment || (!assignment.answer_period && see_answers)">({{answers.total}})</span></a>\\n        </li>\\n        <li ng-show="!canManageAssignment" id="your_feedback" ng-class="{active:showTab(\\\'your_feedback\\\')}">\\n            <a ng-click="setTab(\\\'your_feedback\\\')" href="">Your Answer + Its Feedback <span class="hidden-xs">({{assignment.status.answers.feedback}})</span></a>\\n        </li>\\n        <li ng-show="!canManageAssignment" id="your_comparisons" ng-class="{active:showTab(\\\'your_comparisons\\\')}">\\n            <a ng-click="setTab(\\\'your_comparisons\\\')" href="">Your Comparisons <span class="hidden-xs">({{assignment.status.comparisons.count}})</span></a>\\n        </li>\\n        <li ng-show="canManageAssignment" id="comparisons" ng-class="{active:showTab(\\\'comparisons\\\')}">\\n            <a ng-click="setTab(\\\'comparisons\\\')" href="">All Comparisons <span class="hidden-xs">({{totalNumComparisonsShown.count}})</span></a>\\n        </li>\\n        \\x3c!-- <li id="comments" ng-class="{active:showTab(\\\'help\\\')}">\\n            <a ng-click="setTab(\\\'help\\\')" href=""><span class="hidden-xs">Help</span> Comments <span class="hidden-xs">({{assignment.comment_count}})</span></a>\\n        </li> --\\x3e\\n        <li ng-show="canManageAssignment" id="participation" ng-class="{active:showTab(\\\'participation\\\')}">\\n            <a ng-click="setTab(\\\'participation\\\')" href="">Participation</a>\\n        </li>\\n    </ul>\\n\\n    \\x3c!-- Tab Content --\\x3e\\n    <div class="tab-content">\\n\\n        <div class="tab-pane" ng-class="{active: showTab(\\\'answers\\\')}" id="answers-tab">\\n\\n            \\x3c!-- Answers Tab Header --\\x3e\\n            <div class="tab-header">\\n\\n                <div class="row">\\n                    <div class="col-sm-6">\\n                        <h2>All answers\\n                            <span ng-show="canManageAssignment && answerFilters.group && !answerFilters.author">for "{{answerFilters.group}}"</span>\\n                            <span ng-show="answerFilters.author && (!answerFilters.anonymous || answerFilters.top)">for "{{ answerFiltersName }}"</span>\\n                            <span ng-show="answerFilters.author && (answerFilters.anonymous && !answerFilters.top)">for "Student"</span>\\n                        </h2>\\n                        <p ng-if="numPages > 1">(Page {{answerFilters.page}} of {{numPages}})</p>\\n                    </div>\\n\\n                    <div class="col-sm-6 text-right multi-filters">\\n                        <div ng-if="assignment.answer_count && (canManageAssignment || see_answers)">\\n                            <span class="filter">\\n                                <label>Show: &nbsp;</label>\\n                                <select ng-if="groups.length > 0 && canManageAssignment" ng-model="answerFilters.group" class="nullable" chosen\\n                                        ng-options="group as group for group in groups | orderBy: \\\'toString()\\\'">\\n                                    <option value="">All groups</option>\\n                                </select>\\n                                <select id="answers-filter" ng-model="answerFilters.author" class="nullable" chosen\\n                                        ng-options="u.id as u.name for u in users">\\n                                    <option value="">All answers</option>\\n                                </select>\\n                            </span><br />\\n                            <span class="filter" ng-if="(canManageAssignment || rankLimit) && assignment.pairing_algorithm != PairingAlgorithm.random">\\n                                <label>Order by: &nbsp;</label>\\n                                <select ng-model="answerFilters.orderBy" chosen ng-disabled="answerFilters.top == true">\\n                                    <option value="">Date submitted</option>\\n                                    <option value="score" ng-if="canManageAssignment">Answer score</option>\\n                                    <option value="score" ng-if="!canManageAssignment">Answer rank</option>\\n                                </select>\\n                            </span><br />\\n                            <span class="filter hidden-xs" ng-if="canManageAssignment">\\n                                 <a href="" uib-tooltip="Hide student names, scores, and feedback when sharing this screen with students" tooltip-trigger tooltip-animation="false" tooltip-placement="left">\\n                                    <i class="fa fa-question-circle"></i>\\n                                </a>&nbsp;\\n                                <button uib-btn-checkbox ng-model="answerFilters.anonymous" activeClass="\\\'\\\'"\\n                                    class="btn btn-sm" ng-class="{\\\'btn-default\\\': answerFilters.anonymous, \\\'btn-default\\\': !answerFilters.anonymous}">\\n                                   Anonymize<span ng-show="answerFilters.anonymous">d</span> Answers  <i ng-class="{\\\'fa fa-eye-slash\\\': answerFilters.anonymous, \\\'fa fa-eye\\\': !answerFilters.anonymous}"></i>\\n                                </button>\\n                            </span>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                \\x3c!-- Instructors should see before the answer period --\\x3e\\n                <p class="intro-text"\\n                   ng-if="canManageAssignment && !assignment.answer_period && !assignment.available">\\n                    Answering period begins {{assignment.answer_start | amDateFormat: \\\'MMM D @ h:mm a\\\'}}. Would you like to <a ng-href="#/course/{{courseId}}/assignment/{{assignment.id}}/edit" title="Edit the assignment">change the answer date</a> for this assignment?\\n                </p>\\n\\n                \\x3c!-- Instructors should see when assignment becomes active --\\x3e\\n                <p class="intro-text"\\n                   ng-if="canManageAssignment && assignment.available">\\n                     Answers submitted for this assignment are shown below. Only you and your teaching team will see the name that appears in parentheses. You can also add answers to a list of instructor\\\'s "top picks" by clicking the star icon for any answer. Students will then have the option to filter by these when they look at the answers.\\n                </p>\\n\\n                \\x3c!-- Students should see before answering during the answer period --\\x3e\\n                <p class="intro-text"\\n                   ng-if="!canManageAssignment && !assignment.status.answers.answered && assignment.answer_period">\\n                    <span ng-show="!assignment.status.answers.has_draft"><a ng-href="#/course/{{courseId}}/assignment/{{assignment.id}}/answer/create" title="Answer the assignment">Answer</a></span><span ng-show="assignment.status.answers.has_draft"><a ng-href="#/course/{{courseId}}/assignment/{{assignment.id}}/answer/{{assignment.status.answers.draft_ids[0]}}/edit" title="Finish answering the assignment">Finish answering</a></span> and compare answer pairs for the assignment first, then read all answers written by your classmates and instructors here.\\n                </p>\\n\\n                \\x3c!-- Students should see before evaluating before the comparison period --\\x3e\\n                <p class="intro-text"\\n                   ng-if="!canManageAssignment && ((assignment.status.answers.answered && assignment.answer_period) || (!assignment.answer_period)) && !assignment.compare_period && !assignment.after_comparing">\\n                    Comparisons begin <span ng-if="assignment.compare_start">{{assignment.compare_start | amDateFormat: \\\'MMM D @ h:mm a\\\'}}</span> <span ng-if="!assignment.compare_start">after the answer due date passes</span>. After comparing answer pairs, you will be able to read all answers written by your classmates and instructors here.\\n                </p>\\n\\n                \\x3c!-- Students should see before evaluating during the comparison period (regular comparison) --\\x3e\\n                <p class="intro-text" ng-if="!canManageAssignment && assignment.compare_period && comparisons_left > 0 && ((assignment.status.answers.answered && assignment.answer_period) || !assignment.answer_period)">\\n                    <a ng-href="#/course/{{courseId}}/assignment/{{assignment.id}}/compare" title="Compare answers">Compare answers</a> for the assignment first, then read answers written by your classmates and instructors here.\\n                </p>\\n\\n                \\x3c!-- Students should see before evaluating during the comparison period (self-evaluation) --\\x3e\\n                <p class="intro-text" ng-if="!canManageAssignment && assignment.compare_period && comparisons_left == 0 && self_evaluation_needed">\\n                    <a ng-href="#/course/{{courseId}}/assignment/{{assignment.id}}/compare" title="Compare answers">Compare your own answer</a> for the assignment first, then read answers written by your classmates and instructors here.\\n                </p>\\n\\n                \\x3c!-- Students see after evaluating before the comparison period is over --\\x3e\\n                <p class="intro-text" ng-if="!canManageAssignment && comparisons_left == 0 && !self_evaluation_needed && !see_answers">\\n                    You have successfully finished comparisons for this assignment! Answers written by your classmates and instructors will be available here beginning <strong>{{ answerAvail | amDateFormat: \\\'MMM D @ h:mm a\\\'}}</strong>.\\n                </p>\\n                \\n                \\x3c!-- Students see when answers exist and visible --\\x3e\\n                <p class="intro-text" ng-if="!canManageAssignment && see_answers && !answerFilters.author">\\n                    Answers for this assignment submitted by you, your classmates, and instructors are available below. Any public feedback left for other student answers can be found underneath the student answer. Private feedback you receive does not appear to the class.\\n                </p>\\n\\n            </div>\\n\\n            <div class="all-answers">\\n\\n                \\x3c!-- Instructor non-comparable Answers Section --\\x3e\\n                <div class="each-answer clearfix" ng-repeat="answer in answers.objects | filter:adminFilter() as adminResults" ng-if="answerFilters.orderBy!=\\\'score\\\' && instructors[answer.user_id] && (see_answers || canManageAssignment)">\\n\\n                    \\x3c!-- Instructor Answer Metadata Header --\\x3e\\n                    <div class="each-header clearfix">\\n                        <compair-avatar user-id="answer.user_id" avatar="answer.user.avatar" main-identifier="answer.user.displayname" secondary-identifier="answer.user.fullname"></compair-avatar>\\n                        <span class="label label-default" ng-if="instructors[answer.user_id]">{{instructors[answer.user_id]}}</span>\\n                        <strong>said</strong> on {{answer.created | amDateFormat: \\\'MMM D @ h:mm a\\\'}}:\\n                        <div class="manager-actions pull-right" ng-if="canManageAssignment">\\n                            <em>{{instructors[answer.user_id]}} Answer (not compared)</em>\\n                            <span ng-if="canManageAssignment && !answerFilters.anonymous && answer.score && answer.comparable" class="label label-warning score-tooltip" uib-tooltip="Scores are normalized, so the top-ranked answer or&mdash;in the case of a tie&mdash;answers for the assignment receive 100%. All other answers receive a lower percentage based on how well they did compared to the top-ranked answer." tooltip-trigger tooltip-animation="false" tooltip-placement="left">\\n                                Score: {{answer.score.normalized_score}}%\\n                            </span>\\n                            <a title="Delete this answer" href="" confirmation-needed="deleteAnswer(answer)" keyword="instructor answer">\\n                                <i class="fa fa-trash-o"></i>\\n                            </a>\\n                            <a href="" title="Edit this answer" ng-click="editAnswer(answer)">\\n                                Edit\\n                            </a>\\n                        </div>\\n                        <div class="manager-actions pull-right" ng-if="!canManageAssignment">\\n                            <em>{{instructors[answer.user_id]}} Answer (not compared)</em>\\n                            \\x3c!-- Ranking for Instructor Answers --\\x3e\\n                            <span class="students-ranked" ng-if="!canManageAssignment && !answerFilters.anonymous && answerFilters.orderBy==\\\'score\\\' && answer.score">\\n                                <span ng-if="answer.score.rank <= rankLimit">\\n                                    Students Ranked: <strong>#{{answer.score.rank}} <span ng-if="rankCount[answer.score.rank] > 1">(tied)</span></strong>\\n                                </span>\\n                                <span class="score-tooltip" ng-if="answer.score.rank > 0 && answer.score.rank > rankLimit" uib-tooltip="Answers that are ranked outside the top {{rankLimit}} do not receive a rank number for this assignment." tooltip-trigger tooltip-animation="false" tooltip-placement="left">\\n                                    Students Ranked: <strong>N/A</strong>\\n                                </span>\\n                                <i class="fa fa-arrow-down"></i>\\n                            </span>\\n                        </div>\\n                    </div>\\n\\n                    \\x3c!-- Instructor Answer --\\x3e\\n                    <rich-content content="answer.content" attachment="answer.file"></rich-content>\\n\\n                </div>\\x3c!-- closes each-answer (instructor) --\\x3e\\n\\n                \\x3c!-- Comparable Answers Section --\\x3e\\n                <div class="each-answer clearfix" ng-repeat="answer in answers.objects | excludeInstr:instructors as results" ng-if="(see_answers || canManageAssignment)">\\n                \\x3c!-- <div class="each-answer clearfix" ng-repeat="(answerKey, answer) in answers" ng-if="!instructors[answer.user_id] && (see_answers || (answer.user_id == loggedInUserId && assignment.answer_period) || canManageAssignment)"> --\\x3e\\n                    \\x3c!-- Student Answer Metadata Header --\\x3e\\n                    <div class="each-header clearfix">\\n                        <compair-avatar ng-show="!answerFilters.anonymous" user-id="answer.user_id" avatar="answer.user.avatar" main-identifier="answer.user.displayname" secondary-identifier="answer.user.fullname" me="!canManageAssignment && answer.user_id == loggedInUserId"></compair-avatar>\\n                        <span ng-show="answerFilters.anonymous">Student</span>\\n                        <span class="label label-default" ng-show="!answerFilters.anonymous" ng-if="instructors[answer.user_id]">{{instructors[answer.user_id]}}</span>\\n                        <strong>answered</strong> on {{answer.created | amDateFormat: \\\'MMM D @ h:mm a\\\'}}:\\n                        <div class="manager-actions pull-right">\\n                            \\x3c!-- Student Score (not used for instructor answers) --\\x3e\\n                            <span ng-if="canManageAssignment && !answerFilters.anonymous && answer.score" class="label label-warning score-tooltip" uib-tooltip="Scores are normalized, so the top-ranked answer or&mdash;in the case of a tie&mdash;answers for the assignment receive 100%. All other answers receive a lower percentage based on how well they did compared to the top-ranked answer." tooltip-trigger tooltip-animation="false" tooltip-placement="left">\\n                                Score: {{answer.score.normalized_score}}%\\n                            </span>\\n                            \\x3c!-- Student Rank (not used for instructor answers) --\\x3e\\n                            <span class="students-ranked" ng-if="!canManageAssignment && !answerFilters.anonymous && answerFilters.orderBy==\\\'score\\\' && answer.score">\\n                                <span ng-if="answer.score.rank <= rankLimit">\\n                                    Students Ranked: <strong>#{{answer.score.rank}} <span ng-if="rankCount[answer.score.rank] > 1">(tied)</span></strong>\\n                                </span>\\n                                <span class="score-tooltip" ng-if="answer.score.rank > 0 && answer.score.rank > rankLimit" uib-tooltip="Answers that are ranked outside the top {{rankLimit}} do not receive a rank number for this assignment." tooltip-trigger tooltip-animation="false" tooltip-placement="left">\\n                                    Students Ranked: <strong>N/A</strong>\\n                                </span>\\n                                <i class="fa fa-arrow-down"></i>\\n                            </span>\\n                            \\x3c!-- No Student Score/Rank --\\x3e\\n                            <span ng-if="canManageAssignment && !answerFilters.anonymous && !answer.score">\\n                                <em>(not compared)</em>\\n                            </span>\\n                            <span ng-if="!canManageAssignment && !answerFilters.anonymous && answerFilters.orderBy==\\\'score\\\' && !answer.score">\\n                                <em>(not ranked)</em>\\n                            </span>\\n\\n                            \\x3c!--\\n                            <span ng-show="answer.flagged" class="text-warning" title="Answer was flagged by a student as incomplete or inappropriate">\\n                                <i class="fa fa-warning"></i>\\n                                Flagged\\n                                <a href="" title="Unflag this answer" ng-click="unflagAnswer(answer)">\\n                                    Unflag?\\n                                </a>\\n                            </span>\\n                            --\\x3e\\n\\n                            <span ng-if="(canManageAssignment && !answerFilters.anonymous) || (answer.user_id == loggedInUserId && assignment.answer_period && !assignment.compare_period)">\\n                                <a href="" ng-if="canManageAssignment && !answerFilters.anonymous && !answer.top_answer" title="Add to instructor\\\'s top answers" ng-click="setTopAnswer(answer, true)">\\n                                    <i class="fa fa-star-o"></i>\\n                                </a>\\n                                <a href="" ng-if="canManageAssignment && !answerFilters.anonymous && answer.top_answer" title="Remove from instructor\\\'s top answers" ng-click="setTopAnswer(answer, false)">\\n                                    <i class="fa fa-star"></i>\\n                                </a>\\n                                <a href="" title="Delete this answer" confirmation-needed="deleteAnswer(answer)" keyword="answer">\\n                                    <i class="fa fa-trash-o"></i>\\n                                </a>\\n                                <a href="" title="Edit this answer" ng-click="editAnswer(answer)">\\n                                    Edit\\n                                </a>\\n                            </span>\\n                        </div>\\n                    </div>\\n\\n                    \\x3c!-- Student Answer --\\x3e\\n                    <div class="{{answer.id}} comparable" get-height>\\n                        <rich-content content="answer.content" attachment="answer.file" ng-click="revealContent(answer)"></rich-content>\\n                    </div>\\n                    \\x3c!-- Student Answer Read More Button (not used for instructor answers) --\\x3e\\n                    <p ng-show="showReadMore" class="read-more" ng-click="revealContent(answer)"><a href="" class="btn btn-sm btn-info"><i class="fa fa-long-arrow-down"></i> Read More</a></p>\\n                    \\x3c!-- <p ng-show="!showReadMore">No More To Read!!! ({{thisHeight}})</p> --\\x3e\\n\\n                    \\x3c!-- Student Answer Replies Section --\\x3e\\n                    <a href="" ng-click="showReplies = !showReplies; toggleReplies(showReplies, answer)">\\n                        <p class="h3 reply-heading" ng-if="!answerFilters.anonymous && ((answer.comment_count && (answer.user_id == loggedInUserId || canManageAssignment)) || (answer.public_comment_count && see_answers))">\\n                            <i class="fa fa-chevron-down" ng-show="showReplies"></i>\\n                            <i class="fa fa-chevron-right" ng-hide="showReplies"></i>\\n                            <strong>\\n                            <ng-pluralize ng-if="answer.public_comment_count && !canManageAssignment && (see_answers && answer.user_id != loggedInUserId)" count="answer.public_comment_count" when="{\\\'1\\\': \\\'{} public feedback comment\\\', \\\'other\\\': \\\'{} public feedback comments\\\'}"></ng-pluralize>\\n                            <ng-pluralize ng-if="answer.comment_count && (answer.user_id == loggedInUserId || canManageAssignment)" count="answer.comment_count" when="{\\\'1\\\': \\\'{} feedback comment\\\', \\\'other\\\': \\\'{} feedback comments\\\'}"></ng-pluralize>\\n                            for <span ng-if="answer.user_id != loggedInUserId">this</span><span ng-if="answer.user_id == loggedInUserId">your</span> answer\\n                            <span ng-if="canManageAssignment || answer.user_id == loggedInUserId">({{ answer.private_comment_count }} private, {{ answer.public_comment_count }} public)</span>\\n                            </strong>\\n                        </p>\\n                    </a>\\n\\n                    <div class="collapsible-content" ng-show="showReplies" ng-if="!answerFilters.anonymous">\\n\\n                        <div ng-repeat="(commentKey, comment) in answer.comments | filter:commentFilter(answer)" class="each-reply">\\n\\n                            <hr ng-hide="$first" />\\n\\n                            \\x3c!-- Student Reply Metadata Header --\\x3e\\n                            <div class="each-header clearfix">\\n                                <compair-avatar user-id="comment.user_id" avatar="comment.user.avatar" main-identifier="comment.user.displayname" secondary-identifier="comment.user.fullname"></compair-avatar>\\n                                <span class="label label-default" ng-if="instructors[comment.user_id]">{{instructors[comment.user_id]}}</span>\\n                                <strong ng-if="comment.comment_type == AnswerCommentType.private || comment.comment_type == AnswerCommentType.evaluation"> gave private feedback <span class="glyphicon glyphicon-lock"></span></strong>\\n                                <strong ng-if="comment.comment_type == AnswerCommentType.self_evaluation"> self-evaluated <span class="glyphicon glyphicon-lock"></span></strong>\\n                                <strong ng-if="comment.comment_type == AnswerCommentType.public"> gave public feedback <span class="glyphicon glyphicon-eye-open"></span> </strong>\\n                                on {{comment.created | amDateFormat: \\\'MMM D @ h:mm a\\\'}}:\\n                                <div class="manager-actions pull-right"\\n                                     ng-if="canManageAssignment || (comment.user_id == loggedInUserId && (comment.comment_type == AnswerCommentType.public || comment.comment_type == AnswerCommentType.private))">\\n                                    <a href="" title="Delete this feedback" confirmation-needed="deleteReply(answer, commentKey, courseId, assignment.id, answer.id, comment.id)" keyword="feedback">\\n                                        <i class="fa fa-trash-o"></i>\\n                                    </a>\\n                                    <a href="" title="Edit this feedback" ng-click="editAnswerComment(answer, comment)">\\n                                        Edit\\n                                    </a>\\n                                </div>\\n                            </div>\\n\\n                            \\x3c!-- Student Reply --\\x3e\\n                            <div class="content" mathjax hljs ng-bind-html="comment.content"></div>\\n\\n                        </div>\\x3c!-- closes each-reply (student) --\\x3e\\n\\n                    </div>\\x3c!-- closes toggle div --\\x3e\\n\\n                    <p class="pull-right">\\n                        <a ng-if="!answerFilters.anonymous && (assignment.students_can_reply || canManageAssignment)" href="" ng-click="createAnswerComment(answer)" class="btn btn-sm btn-primary btn-reply">\\n                            <i class="fa fa-reply"></i> Give Feedback\\n                        </a>\\n                    </p>\\n\\n                </div>\\x3c!-- closes each-answer (student) --\\x3e\\n\\n                \\x3c!-- Anyone sees when there no answers (and user has permission to view answers) --\\x3e\\n                <div class="each-answer clearfix" ng-if="assignment.answer_count == 0 && (see_answers || canManageAssignment)">\\n                    <p>(No answers submitted yet.)</p>\\n                </div>\\n                \\n                \\x3c!-- Anyone sees when there are answers, a filter is set, but no answers show in results (and user has permission to view answers) --\\x3e\\n                <div class="each-answer clearfix" ng-if="assignment.answer_count > 0 && (answerFilters.group || answerFilters.author || answerFilters.orderBy) && (results.length < 1 && adminResults.length < 1) && (see_answers || canManageAssignment)">\\n                    <p>No answers were found with these filter settings. Try another choice above.</p>\\n                </div>\\n\\n            </div>\\x3c!-- closes answered show-hide div --\\x3e\\n\\n            <div class="text-center" ng-if="see_answers || canManageAssignment">\\n                <ul uib-pagination total-items="totalNumAnswers" ng-model="answerFilters.page" max-size="10"\\n                    class="pagination-sm" boundary-links="true" direction-links="false"\\n                    items-per-page="answerFilters.perPage" num-pages="numPages" ng-hide="numPages == 1"></ul>\\n            </div>\\n\\n        </div>\\x3c!-- closes answers-tab --\\x3e\\n\\n        <div class="tab-pane" ng-class="{active: showTab(\\\'your_feedback\\\')}" id="your_feedback-tab">\\n\\n            \\x3c!-- Your Work Tab Header --\\x3e\\n            <div class="tab-header">\\n                <div>\\n                    <h2>Your answer and its feedback</h2>\\n                    <br />\\n                    <p class="intro-text">The answer you submitted for this assignment appears below. Any peer, instructor, or self-evaluation feedback&mdash;<strong>{{assignment.status.answers.feedback}} feedback comments</strong> currently&mdash;for your answer can be found underneath the answer. Only feedback marked as public can be seen by other students.</p>\\n                </div>\\n            </div>\\n            \\n            <div class="each-evaluation" ng-if="user_answers.objects.length == 0">\\n                <p>(You have not submitted an answer.<span ng-if="assignment.answer_period"> Would you like to <span ng-show="!assignment.status.answers.has_draft"><a ng-href="#/course/{{courseId}}/assignment/{{assignment.id}}/answer/create" title="Answer the assignment">answer</a></span><span ng-show="assignment.status.answers.has_draft"><a ng-href="#/course/{{courseId}}/assignment/{{assignment.id}}/answer/{{assignment.status.answers.draft_ids[0]}}/edit" title="Finish answering the assignment">finish answering</a></span> this assignment?</span>)</p>\\n            </div>\\n\\n            \\x3c!-- Student Answer Metadata Header --\\x3e\\n            <div class="each-evaluation clearfix" ng-repeat="answer in user_answers.objects">\\n                <div class="each-header clearfix">\\n                    <compair-avatar user-id="answer.user_id" avatar="answer.user.avatar" me="true"></compair-avatar>\\n                    <strong>answered</strong> on {{answer.created | amDateFormat: \\\'MMM D @ h:mm a\\\'}}:\\n                    <div class="manager-actions pull-right" ng-if="canManageAssignment || (answer.user_id == loggedInUserId && assignment.answer_period && !assignment.compare_period)">\\n                        \\x3c!--\\n                        <span ng-show="answer.flagged" class="text-warning" title="Answer was flagged by a student as incomplete or inappropriate">\\n                            <i class="fa fa-warning"></i>\\n                            Flagged\\n                            <a href="" title="Unflag this answer" ng-click="unflagAnswer(answer)">\\n                                Unflag?\\n                            </a>\\n                        </span>\\n                        --\\x3e\\n                        <a href="" title="Delete this answer" confirmation-needed="deleteAnswer(answer)" keyword="answer">\\n                            <i class="fa fa-trash-o"></i>\\n                        </a>\\n                        <a href="" title="Edit this answer" ng-click="editAnswer(answer)">\\n                            Edit\\n                        </a>\\n                    </div>\\n                </div>\\n\\n                \\x3c!-- Student Answer --\\x3e\\n                <div class="{{answer.id}}">\\n                    <rich-content content="answer.content" attachment="answer.file" ng-click="revealContent(answer)"></rich-content>\\n                </div>\\n\\n                \\x3c!-- Student Answer Replies Section --\\x3e\\n                <a href="" ng-init="showReplies = true" ng-click="showReplies = !showReplies; toggleReplies(showReplies, answer)">\\n                    <p class="h3 reply-heading" ng-if="answer.comment_count">\\n                        <i class="fa fa-chevron-down" ng-show="showReplies"></i>\\n                        <i class="fa fa-chevron-right" ng-hide="showReplies"></i>\\n                        <strong>\\n                        <ng-pluralize count="answer.comment_count" when="{\\\'1\\\': \\\'{} feedback comment\\\', \\\'other\\\': \\\'{} feedback comments\\\'}"></ng-pluralize>\\n                        for your answer\\n                        <span ng-if="canManageAssignment || answer.user_id == loggedInUserId">({{ answer.private_comment_count }} private, {{ answer.public_comment_count }} public)</span>\\n                        </strong>\\n                    </p>\\n                </a>\\n\\n                <div class="collapsible-content" ng-show="showReplies">\\n                    <div ng-repeat="(commentKey, comment) in answer.comments | filter:commentFilter(answer)" class="each-reply">\\n\\n                        <hr ng-hide="$first" />\\n\\n                        \\x3c!-- Student Reply Metadata Header --\\x3e\\n                        <div class="each-header clearfix">\\n                            <compair-avatar user-id="comment.user_id" avatar="comment.user.avatar" main-identifier="comment.user.displayname" secondary-identifier="comment.user.fullname"></compair-avatar>\\n                            <span class="label label-default" ng-if="instructors[comment.user_id]">{{instructors[comment.user_id]}}</span>\\n                            <strong ng-if="comment.comment_type == AnswerCommentType.private || comment.comment_type == AnswerCommentType.evaluation"> gave private feedback <span class="glyphicon glyphicon-lock"></span></strong>\\n                            <strong ng-if="comment.comment_type == AnswerCommentType.self_evaluation"> self-evaluated <span class="glyphicon glyphicon-lock"></span></strong>\\n                            <strong ng-if="comment.comment_type == AnswerCommentType.public"> gave public feedback <span class="glyphicon glyphicon-eye-open"></span></strong>\\n                            on {{comment.created | amDateFormat: \\\'MMM D @ h:mm a\\\'}}:\\n                            <div class="manager-actions pull-right"\\n                                 ng-if="canManageAssignment || (comment.user_id == loggedInUserId && (comment.comment_type == AnswerCommentType.private || comment.comment_type == AnswerCommentType.public))">\\n                                <a href="" title="Delete this feedback" confirmation-needed="deleteReply(answer, commentKey, courseId, assignment.id, answer.id, comment.id)" keyword="feedback">\\n                                    <i class="fa fa-trash-o"></i>\\n                                </a>\\n                                <a href="" title="Edit this feedback" ng-click="editAnswerComment(answer, comment)">\\n                                    Edit\\n                                </a>\\n                            </div>\\n                        </div>\\n\\n                        \\x3c!-- Student Reply --\\x3e\\n                        <div class="content" mathjax hljs ng-bind-html="comment.content"></div>\\n\\n                    </div>\\x3c!-- closes each-reply (student) --\\x3e\\n\\n                </div>\\x3c!-- closes toggle div --\\x3e\\n\\n            </div>\\n\\n        </div>\\x3c!-- closes your_feedback-tab --\\x3e\\n        \\n        <div class="tab-pane" ng-class="{active: showTab(\\\'your_comparisons\\\')}" id="your_comparisons-tab" ng-if="!canManageAssignment">\\n\\n            \\x3c!-- Your Comparisons Header --\\x3e\\n            <div class="tab-header">\\n                <h2>Your comparisons</h2>\\n                <br />\\n                <p class="intro-text">Comparisons you\\\'ve submitted for this assignment&mdash;<strong>{{comparison_set.comparisons.length}} comparisons</strong> currently&mdash;appear below. Each comparison shows the answers you compared, the feedback you gave for each answer, and which answer in the pair you chose for each criterion.</p>\\n            </div>\\n            \\n            <div class="each-evaluation" ng-if="comparison_set.comparisons.length == 0">\\n                <p>(You have not submitted any comparisons.<span ng-if="assignment.compare_period && comparisons_left > 0 "> Would you like to <a ng-href="#/course/{{courseId}}/assignment/{{assignment.id}}/compare" title="Compare answers">compare answer pairs</a> for this assignment?</span>)</p>\\n            </div>\\n            \\n            \\x3c!-- Comparisons Section --\\x3e\\n            <div class="each-evaluation" ng-repeat="comparison in comparison_set.comparisons">\\n\\n                \\x3c!-- Comparison Header --\\x3e\\n                <div class="each-header">\\n                    <compair-avatar user-id="comparison.user_id" avatar="comparison.user.avatar" me="true"></compair-avatar>\\n                    <strong>compared</strong> on {{ comparison.created | amDateFormat: \\\'MMM D @ h:mm a\\\'}}:\\n                </div>\\n\\n                \\x3c!-- Answers --\\x3e\\n                <h5 class="content">Answer Pair You Saw</h5>\\n                    <p class="show-answers content"><a href="" ng-click="showAnswers = !showAnswers;">\\n                        <i ng-show="showAnswers" class="fa fa-chevron-down"></i>\\n                        <i ng-hide="showAnswers" class="fa fa-chevron-right"></i>\\n                        Show compared answers\\n                    </a></p>\\n                    <div class="collapsible-content row" ng-show="showAnswers">\\n                        <compair-answer-content answer="comparison.answer1" is-chosen="comparison.winner == WinningAnswer.answer1" name="Odd-Numbered Answer" show-score="false"></compair-answer-content>\\n                        <hr class="visible-xs-block" />\\n                        <compair-answer-content answer="comparison.answer2" is-chosen="comparison.winner == WinningAnswer.answer2" name="Even-Numbered Answer" show-score="false"></compair-answer-content>\\n                    </div>\\n\\n                <div class="row">\\n                    <div class="col-md-6">\\n                        <h5 class="content">Feedback You Gave for Odd-Numbered Answer</h5>\\n                        \\x3c!-- feedback for odd-numbered answer --\\x3e\\n                        <div ng-repeat="feedback in comparison.answer1_feedback">\\n                            <div class="content" mathjax hljs ng-bind-html="feedback.content"></div>\\n                        </div>\\n                    </div>\\n\\n                    <div class="col-md-6">\\n                        <h5 class="content">Feedback You Gave for Even-Numbered Answer</h5>\\n                        \\x3c!-- feedback for even-numbered answer --\\x3e\\n                        <div ng-repeat="feedback in comparison.answer2_feedback">\\n                            <div class="content" mathjax hljs ng-bind-html="feedback.content"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <h5 class="content">Answer You Chose by Criterion</h5>\\n                <div ng-repeat="comparison_criterion in comparison.comparison_criteria">\\n                    <div class="content">\\n                        <p>Criterion: "{{ comparison_criterion.criterion.name }}"<br />\\n                            <span class="glyphicon glyphicon-ok-circle"></span>\\n                            <span ng-if="comparison_criterion.winner == WinningAnswer.answer1"><strong>Odd-numbered answer</strong></span>\\n                            <span ng-if="comparison_criterion.winner == WinningAnswer.answer2"><strong>Even-numbered answer</strong></span>\\n                        </p>\\n                    </div>\\n                </div>\\n\\n            </div>\\x3c!-- closes each-evaluation --\\x3e\\n            \\n        </div>\\x3c!-- closes your_comparisons-tab --\\x3e\\n\\n        \\x3c!-- <div class="tab-pane" ng-class="{active: showTab(\\\'help\\\')}" id="comments-tab">--\\x3e\\n\\n            \\x3c!-- Comments Tab Header --\\x3e\\n            \\x3c!-- <div class="tab-header">\\n                <div class="row">\\n                    <div class="col-sm-9">\\n                        <h2>Help comments for this assignment</h2>\\n                        <p class="intro-text less-margin">Ask or answer a question about the assignment by adding a comment here.</p>\\n                    </div>\\n                    <div class="col-sm-3 text-right comment-btn">\\n                        <br />\\n                        <a href="" class="btn btn-primary" ng-click="createAssignmentComment()">\\n                            <i class="fa fa-plus"></i> Add Comment\\n                        </a>\\n                    </div>\\n                </div>\\n            </div> --\\x3e\\n\\n            \\x3c!-- Comments Section --\\x3e\\n            \\x3c!-- <div ng-repeat="(commentKey, comment) in comments.objects" class="each-comment">--\\x3e\\n\\n                \\x3c!-- Comment Metadata Header --\\x3e\\n                \\x3c!-- <div class="each-header clearfix">\\n                    <compair-avatar user-id="comment.user_id" avatar="comment.user.avatar" display-name="comment.user.displayname" full-name="comment.user.fullname" me="comment.user_id == loggedInUserId"></compair-avatar>\\n                    <span class="label label-default" ng-if="instructors[comment.user_id]">{{instructors[comment.user_id]}}</span>\\n                    <strong>commented</strong> on {{comment.created | amDateFormat: \\\'MMM D @ h:mm a\\\'}}:\\n                    <div class="manager-actions pull-right" ng-if="canManageAssignment || comment.user_id == loggedInUserId">\\n                        <a title="Delete this comment" confirmation-needed="deleteComment(commentKey, courseId, assignment.id, comment.id)" keyword="comment" href="">\\n                            <i class="fa fa-trash-o"></i>\\n                        </a>\\n                        <a href="" title="Edit this comment" ng-click="editAssignmentComment(comment)">\\n                            Edit\\n                        </a>\\n                    </div>\\n                </div> --\\x3e\\n\\n                \\x3c!-- Comment --\\x3e\\n                \\x3c!-- Student Answer --\\x3e\\n                \\x3c!-- <div class="content {{comment.id}}" get-height>\\n                    <rich-content content="comment.content" ng-click="revealContent(comment)"></rich-content>\\n                </div> --\\x3e\\n                \\x3c!-- Student Answer Read More Button (not used for instructor answers) --\\x3e\\n                \\x3c!-- <p ng-show="showReadMore" class="read-more" ng-click="revealContent(comment)"><a href="" class="btn btn-sm btn-info"><i class="fa fa-long-arrow-down"></i> Read More</a></p>--\\x3e\\n                \\x3c!-- <p ng-show="!showReadMore">No More To Read!!! ({{thisHeight}})</p> --\\x3e\\n            \\x3c!-- </div> --\\x3e\\x3c!-- closes each-comment --\\x3e\\n\\n        \\x3c!-- </div> --\\x3e\\x3c!-- closes comments-tab --\\x3e\\n\\n        <div ng-controller="ComparisonViewController" ng-if="::canManageAssignment">\\n            <div class="tab-pane" ng-class="{active: showTab(\\\'comparisons\\\')}" id="comparisons-tab" ng-if="canManageAssignment && showTab(\\\'comparisons\\\')">\\n                <ng-include src="\\\'modules/comparison/comparison-view-partial.html\\\'"></ng-include>\\n            </div>\\x3c!-- closes comparisons-tab --\\x3e\\n        </div>\\n\\n        <div ng-controller="GradebookController" ng-if="::canManageAssignment">\\n            <div class="tab-pane" ng-class="{active: showTab(\\\'participation\\\')}" id="participation-tab" ng-if="canManageAssignment && showTab(\\\'participation\\\')">\\n                <ng-include src="\\\'modules/gradebook/gradebook-partial.html\\\'"></ng-include>\\n            </div> \\x3c!-- closes gradebook-tab --\\x3e\\n        </div>\\n    </div>\\x3c!-- closes tab-content --\\x3e\\n\\n</div>\\n\'),e.put("modules/assignment/preview-inline-template.html",\'<p class="text-right">\\n    <a class="btn btn-info btn-xs" href="" ng-click="previewPopup();">See Student View</a>\\n</p>\'),e.put("modules/classlist/classlist-enrol-partial.html",\'<div class="text-right inline-enrol">\\n    <form name="enrolForm" class="form-inline row" ng-submit="$ctrl.enrolSubmit()" novalidate role="form">\\n        <div class="form-group">\\n            <label>Add: </label>\\n            <div class="input-group">\\n                <label class="sr-only" for="user">Name</label>\\n                <input type="text" ng-model="$ctrl.user" name="user" required uib-typeahead="u as u.fullname_sortable+\\\' - \\\'+u.system_role for u in $ctrl.getUsersAhead($viewValue)"\\n                   placeholder="display or first name" class="form-control" autocomplete="off"\\n                   typeahead-editable="false" typeahead-min-length="2" typeahead-wait-ms="300">\\n            </div>\\n            <label>as</label>\\n            <div class="input-group">\\n                <select id="enrol-select-course-role" class="form-control" name="role" ng-model="$ctrl.course_role" required\\n                    ng-options="course_role as course_role for course_role in $ctrl.course_roles">\\n                    <option value="">- Select course role -</option>\\n                </select>\\n            </div>\\n        </div>\\n        <div class="input-group">\\n            <input value="Enrol" type="submit" class="inline-submit btn btn-success" ng-disabled="$ctrl.submitted || enrolForm.$invalid"/>\\n        </div>\\n    </form>\\n    <br />\\n</div>\'),e.put("modules/classlist/classlist-import-partial.html",\'<h1>Import Users</h1>\\n<p class="intro-text"><strong>Create, update, enrol, or drop multiple users</strong> in this course at the same time by importing a CSV (comma-separated values) file with a full list of your course\\\'s users. Any new users in an imported file will be enrolled in the course and any deleted users will be dropped from the course.</p>\\n<h2>For {{course.name}}</h2>\\n<div class="form-group">\\n    <fieldset>\\n        <legend>Import Settings</legend>\\n        <div class="form-group">\\n            <label for="importType" class="required-star">Students Log In With</label>\\n            <select class="form-control" ng-model="importType" name="importType"\\n                    ng-options="type.value as type.name for type in importTypes" required>\\n            </select>\\n            <br />\\n            <p><strong>With this setting:</strong></p>\\n            <ul class="li-spacing" ng-if="importType == null">\\n                <li>Students will log in using a new username and password specific to ComPAIR. You must send the username and password to each student.</li>\\n                <li>User information is expected in this order: <strong><span class="required-star">Username</span>, <span class="required-star">Password</span>, Student Number, First Name, Last Name, Email, Display Name, Group</strong></li>\\n                <li>Usernames and passwords are required. All other information is optional. Usernames and student numbers must also be unique in the application.</li>\\n                <li>To skip non-required information, simply leave a blank space between commas, e.g., to leave out first and last name:<br />\\n                "studentuser1, pass1234, 005678, , ,jane.doe@student.ca, display0001, Group 2</li>\\n            </ul>\\n            <ul class="li-spacing" ng-if="importType == ThirdPartyAuthType.cas">\\n                <li>Students will log in using their CWL. The usernames in your file must match the students\\\' CWLs.</li>\\n                <li>User information is expected in this order: <strong><span class="required-star">Username</span>, Student Number, First Name, Last Name, Email, Display Name, Group</strong></li>\\n                <li>Usernames are required. All other information is optional. Usernames and student numbers must also be unique in the application.</li>\\n                <li>To skip non-required information, simply leave a blank space between commas, e.g., to leave out first and last name:<br />\\n                "studentuser1, 005678, , ,jane.doe@student.ca, display0001, Group 2</li>\\n            </ul>\\n        </div>\\n        <div class="form-group">\\n            <label for="importFile" class="required-star">Choose CSV File</label>\\n            <input type="file" nv-file-select uploader="uploader"\\n                id="importFile" ng-click="uploader.clearQueue()"/>\\n        </div>\\n    </fieldset>\\n</div>\\n<input type="submit" class="btn btn-success btn-lg center-block" value="Import"\\n    ng-click="upload();"\\n    ng-disabled="!uploader.queue[0] || submitted" />\\n<p ng-if="submitted" class="text-center">\\n    <i class="fa fa-spin fa-spinner"></i>\\n    &nbsp; Importing...\\n</p>\'),e.put("modules/classlist/classlist-import-results-partial.html",\'<h1>Results</h1>\\n<p><a href="#/course/{{courseId}}/user">&laquo; Back to Manage Users?</a></p>\\n<div ng-show="results.invalids && results.invalids.length">\\n    <h2>Users not enrolled or created due to errors</h2>\\n    <table class="table table-striped">\\n        <tr>\\n            <th ng-repeat="header in headers">{{header}}</th>\\n        </tr>\\n        <tr ng-repeat="invalid in results.invalids">\\n            <td>{{invalid.user.username}}</td>\\n            <td>{{invalid.user.student_number}}</td>\\n            <td>{{invalid.user.firstname}}</td>\\n            <td>{{invalid.user.lastname}}</td>\\n            <td>{{invalid.user.email}}</td>\\n            <td>{{invalid.message}}</td>\\n        </tr>\\n    </table>\\n</div>\\n\'),e.put("modules/classlist/classlist-view-partial.html",\'<div class="manage-screen">\\n    <div class="row">\\n        <header class="col-md-6">\\n            <h1>Manage Users</h1>\\n        </header>\\n        <div class="col-md-6 sub-nav">\\n            <span ng-show="!lti_membership_enabled">\\n                <a ng-href="#/course/{{courseId}}/user/import" class="btn btn-primary">\\n                    <i class="fa fa-download"></i>\\n                    Import Users\\n                </a>\\n                <a href="" class="btn btn-primary" ng-click="export()">\\n                    <i class="fa fa-upload"></i>\\n                    Export Users\\n                </a>\\n            </span>\\n        </div>\\n    </div>\\n    <p class="intro-text" ng-if="lti_membership_enabled">\\n        Your class list is managed externally. This means users need to enroll themselves by clicking a special link in your existing external course. This link sends registration information from your external course to ComPAIR that confirms the user should be enrolled. To manually update the list below to the latest enrollment numbers, click "Refresh List" below.\\n    </p>\\n    <p class="intro-text" ng-if="!lti_membership_enabled">\\n        <strong>Edit or drop users from the course and manage course groups</strong> below. To make significant changes to the <em>full</em> course user list at once, click "Import Users" above and follow the directions on the next screen. To generate a file with all the currently enrolled users, click "Export Users" above.\\n    </p>\\n    <h2>Enrolled in {{course.name}}</h2>\\n\\n    <div class="row">\\n        <h3 class="col-md-2">{{ classlist.length + lti_membership_pending }} users</h3>\\n        <div class="col-md-10">\\n            <div ng-show="lti_membership_enabled" class="text-right">\\n                <a id="lti_refresh_btn" ng-click="updateLTIMembership()" class="btn btn-primary" ng-disabled="submitted">\\n                    <i class="fa fa-refresh"></i> Refresh List\\n                </a>\\n            </div>\\n            <div ng-show="!lti_membership_enabled && canCreateUsers">\\n                <enrol-component course-id="courseId"></enrol-component>\\n            </div>\\n        </div>\\n    </div>\\n    <p class="alert alert-info" ng-show="lti_membership_pending > 0">\\n        <i class="glyphicon glyphicon-info-sign"></i> Currently, <strong>{{lti_membership_pending}} user<span ng-show="lti_membership_pending != 1">s</span></strong> are pending registration (registered in your external course but not yet in ComPAIR). To register, <strong>each student must follow the link from your external course</strong> the first time they access ComPAIR. Once they have followed this link and registered, they may log in through the link or directly at this site.\\n    </p>\\n    <p class="alert alert-info" ng-show="!lti_membership_enabled && course.lti_linked">\\n        <i class="glyphicon glyphicon-info-sign"></i> There may be users pending registration (registered in your external course but not yet in ComPAIR). To register, <strong>each student must follow the link from your external course</strong> the first time they access ComPAIR. Once they have followed this link and registered, they may log in through the link or directly at this site.\\n    </p>\\n\\n    <hr />\\n\\n    <div class="row" ng-show="classlist.length > 0">\\n        <div class="col-sm-3 form-group">\\n            <select class="form-control" ng-model="bulkActions" ng-init="bulkActions = \\\'none\\\'">\\n                <option value="none">- Select bulk action -</option>\\n                <option value="add">Add selected users to a group</option>\\n                <option value="drop">Drop selected users from course</option>\\n                <option value="update">Update role for selected users</option>\\n            </select>\\n        </div>\\n        <div class="col-sm-9" ng-show="bulkActions == \\\'add\\\'">\\n            <div class="col-sm-3">\\n                <button id="add-new-group" href="" class="btn btn-sm btn-primary" ng-click="addUsersToNewGroup()"><i class="fa fa-plus"></i> Add New Group</button>\\n            </div>\\n            <div class="col-sm-2">\\n                OR\\n            </div>\\n            <div class="form-group col-sm-4">\\n                <select id="select-group" class="form-control" ng-model="selectedGroup"\\n                    ng-options="g as g for g in groups" ng-disabled="!groups.length">\\n                    <option value="">- Select existing group -</option>\\n                </select>\\n            </div>\\n            <div class="col-sm-3">\\n                <button id="add-select-group" class="btn btn-sm btn-success" ng-click="addUsersToGroup(selectedGroup)"\\n                    ng-disabled="!selectedGroup">Apply</button>\\n            </div>\\n        </div>\\n        <div class="col-sm-9" ng-show="bulkActions == \\\'drop\\\'">\\n            <div class="col-sm-2">\\n                <button id="drop-users" href="" class="btn btn-small btn-success" confirmation-needed="updateUsers()" keyword="group of users">Apply</button>\\n            </div>\\n        </div>\\n        <div class="col-sm-9" ng-show="bulkActions == \\\'update\\\'">\\n            <div class="form-group col-sm-6">\\n                <select id="select-group" class="form-control" ng-model="selectedCourseRole"\\n                    ng-options="course_role as course_role for course_role in course_roles">\\n                    <option value="">- Select course role -</option>\\n                </select>\\n            </div>\\n            <div class="col-sm-3">\\n                <button id="add-select-group" class="btn btn-small btn-success" ng-click="updateUsers(selectedCourseRole)"\\n                      ng-disabled="!selectedCourseRole">Apply</button>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <div class="table-responsive">\\n        <table class="table table-striped">\\n            <thead>\\n                <tr>\\n                    <th>Actions</th>\\n                    <th><input type="checkbox" ng-model="selectedAll" ng-click="selectAll()" /></th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'displayname\\\')">Display Name</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'firstname\\\')">First Name</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'lastname\\\')">Last Name</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'student_number\\\')">Student Number</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'course_role\\\')">Course Role</a>\\n                    </th>\\n                    <th ng-if="groups.length > 0">\\n                        <a href="" ng-click="updateTableOrderBy(\\\'group_name\\\')">Course Group</a>\\n                    </th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr ng-class="{\\\'success\\\': user.selected}" ng-repeat="user in classlist | orderBy:[predicate, \\\'lastname\\\', \\\'firstname\\\'] | emptyToEnd:predicate | orderBy:\\\'\\\':reverse">\\n                    <td class="nowrap">\\n                        <a href="#/user/{{user.id}}/edit" target="_blank">Edit</a>\\n                        <span>&nbsp;|&nbsp;</span>\\n                        <a href="" confirmation-needed="unenrol(user.id)" keyword="user" ng-if="loggedInUserId != user.id || canManageUsers">Drop</a>\\n                        <span ng-if="loggedInUserId == user.id && !canManageUsers" class="text-muted">&mdash;  &nbsp; &nbsp;</span>\\n                        <span>&nbsp;|&nbsp;</span>\\n                    </td>\\n                    <td>\\n                        <input ng-click="user.selected = !user.selected; checkIfAllSelected()" type="checkbox" ng-checked="user.selected">\\n                    </td>\\n                    <td><i class="fa fa-user"></i> {{user.displayname}}</td>\\n                    <td>{{user.firstname}}</td>\\n                    <td>{{user.lastname}}</td>\\n                    <td>{{user.student_number}}</td>\\n                    <td>\\n                        <select ng-if="loggedInUserId != user.id || canManageUsers" ng-model="user.course_role"\\n                                ng-options="course_role as course_role for course_role in course_roles"\\n                                ng-change="enrol(user)"></select>\\n                        <span ng-if="loggedInUserId == user.id && !canManageUsers">{{ user.course_role }}</span>\\n                    </td>\\n                    <td ng-if="groups.length > 0">\\n                        <select ng-model="user.group_name" ng-options="g as g for g in groups"\\n                                ng-change="update(user.id, user.group_name)">\\n                            <option value="">- None -</option>\\n                        </select>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\'),e.put("modules/comment/answer-content.html",\'<div class="col-md-6">\\n    <div class="answer-choice clearfix">\\n        <p class="h4"><strong><compair-logo type="\\\'scale\\\'"></compair-logo> {{ name }}</strong>\\n            <span ng-if="answer.score">\\n                <span class="label label-warning pull-right score-display"\\n                    ng-if="answer && showScore">\\n                    Score: {{answer.score.normalized_score|number:0}}%\\n                </span>\\n            </span>\\n        </p>\\n\\n        <rich-content content="answer.content" attachment="answer.file" ng-if="answer"></rich-content>\\n        <div ng-if="!answer"><i>(This answer has been deleted.)</i></div>\\n    </div>\\n</div>\'),e.put("modules/comment/answer.html",\'<div ng-if="answer">\\n    <compair-avatar user-id="answer.user_id" avatar="answer.user.avatar" main-identifier="answer.user.fullname" secondary-identifier="answer.user.student_number"></compair-avatar>\\n    <strong>answered</strong> on {{ answer.created | amDateFormat: \\\'MMM D @ h:mm a\\\'}}:\\n    <rich-content content="answer.content" attachment="answer.file"></rich-content>\\n</div>\\n<div ng-if="!answer"><p><i>(No answer has been submitted by this student.)</i></p></div>\\n\'),e.put("modules/comment/comment-answer-modal-partial.html",\'<modal-cancel-button modal-instance="modalInstance" ng-show="modalInstance !== undefined"></modal-cancel-button>\\n<h1 ng-if="method == \\\'create\\\'">Add <span ng-show="comment.comment_type == \\\'Private\\\'">Private</span><span ng-show="comment.comment_type == \\\'Public\\\'">Public</span> Feedback</h1>\\n<h1 ng-if="method == \\\'edit\\\'">Edit <span ng-show="comment.comment_type == \\\'Public\\\'">Public</span><span ng-show="comment.comment_type != \\\'Public\\\'">Private</span> Feedback</h1>\\n<ng-include src="\\\'modules/comment/comment-form-partial.html\\\'"></ng-include>\'),e.put("modules/comment/comment-assignment-modal-partial.html",\'<modal-cancel-button modal-instance="modalInstance" ng-show="modalInstance !== undefined"></modal-cancel-button>\\n<h1 ng-if="method == \\\'create\\\'">Add Comment</h1>\\n<h1 ng-if="method == \\\'edit\\\'">Edit Comment</h1>\\n<ng-include src="\\\'modules/comment/comment-form-partial.html\\\'"></ng-include>\'),e.put("modules/comment/comment-form-partial.html",\'<p class="assignment-toggle"><a href="" ng-click="showAssignment = !showAssignment">\\n    <i class="fa fa-chevron-down" ng-show="showAssignment "></i>\\n    <i class="fa fa-chevron-right" ng-hide="showAssignment "></i>\\n    Show <span ng-if="answerComment">answer you\\\'re leaving feedback for by {{parent.user.displayname}}</span><span ng-if="!answerComment">description for assignment "{{assignment.name}}"</span>\\n</a></p>\\n\\n<div ng-show="showAssignment" class="standalone-assignment">\\n    <h2 ng-if="parent.name"><i class="fa fa-comments"></i> {{parent.name}}</h2>\\n    <rich-content ng-if="parent.name" content="parent.description" attachment="parent.file"></rich-content>\\n    <h2 ng-if="answerComment"><i class="fa fa-user"></i> {{parent.user.displayname}}\\\'s Answer</h2>\\n    <rich-content ng-if="answerComment" content="parent.content" attachment="parent.file"></rich-content>\\n</div>\\n\\n<form name="commentForm" class="form" ng-submit="commentSubmit()" confirm-form-exit novalidate form-type="comment">\\n    <fieldset>\\n        <legend><span ng-if="answerComment">Feedback</span><span ng-if="!answerComment">Comment</span> Details</legend>\\n        <div class="form-group">\\n            <label>Text</label>\\n            <textarea ng-model="comment.content" id="commentContent" class="form-control" rows="8"\\n                      ckeditor="editorOptions" required>\\n            </textarea>\\n        </div>\\n        <div class="form-group" ng-if="answerComment">\\n            <input id="comment_type" type="checkbox" ng-model="comment.comment_type" ng-disabled="!(comment.comment_type == AnswerCommentType.public || comment.comment_type == AnswerCommentType.private)"\\n                   ng-true-value="\\\'{{AnswerCommentType.public}}\\\'" ng-false-value="\\\'{{AnswerCommentType.private}}\\\'">\\n            <label for="comment_type"><span class="text-muted not-bold" ng-if="!(comment.comment_type == AnswerCommentType.public || comment.comment_type == AnswerCommentType.private)">(cannot show this feedback to the whole class)</span> <span ng-if="comment.comment_type == AnswerCommentType.public || comment.comment_type == AnswerCommentType.private">Show this feedback to the whole class</span></label>\\n            \\n        </div>\\n    </fieldset>\\n\\n    <div class="form-group sub-step text-center" ng-show="comment.draft">\\n        <input type="submit" class="btn btn-default btn-lg" value="Save Draft"\\n            ng-click="comment.draft = true"\\n            ng-disabled="submitted" />\\n        &nbsp;&nbsp;\\n        <input type="submit" class="btn btn-success btn-lg" value="Submit"\\n            ng-click="comment.draft = false"\\n            ng-disabled="commentForm.$invalid || submitted" />\\n    </div>\\n    <div ng-show="!comment.draft">\\n        <input type="submit" class="btn btn-success btn-lg center-block" value="Submit"\\n            ng-disabled="commentForm.$invalid || submitted" />\\n    </div>\\n</form>\\n\'),e.put("modules/common/demo-warning-template.html",\'<div class="row" ng-if="AuthTypesEnabled.demo">\\n    <div class="alert alert-warning col-md-6 col-md-offset-3" role="alert">\\n        <p>\\n            <i class="fa fa-exclamation-triangle"></i> This is a demo installation. Any changes you make will reset at 3:00 a.m. Pacific Time.\\n        </p>\\n    </div>\\n</div>\'),e.put("modules/common/element-button-template.html","<a  ng-show=\\"!button.hide\\"\\n    ng-href=\\"{{ button.hide || button.disabled ? \'\' : button.href }}\\"\\n    ng-class=\\"{\'btn\':true, \'btn-success\':!button.disabled, \'btn-default disabled\':button.disabled, \'hide\':button.hide}\\"\\n    title=\\"{{ button.hide ? \'\' : button.title }}\\"\\n    ng-disabled=\\"{{ button.disabled }}\\">\\n    {{ button.label }}\\n</a>"),e.put("modules/common/element-metadata-template.html",\'<li ng-show="!meta.hide">\\n    <a  ng-if="!meta.hide && meta.confirmationNeeded"\\n        ng-href="{{ meta.href }}" \\n        class="{{ meta.class }}" \\n        title="{{ meta.title }}"\\n        ng-disabled="{{ meta.disabled }}"\\n        confirmation-needed="{{ meta.confirmationNeeded }}"\\n        confirmation-warning="{{ meta.confirmationWarning }}"\\n        keyword="{{ meta.keyword }}"\\n        ng-bind-html="meta.label"></a>\\n    <a  ng-if="!meta.hide && meta.href && !meta.confirmationNeeded"\\n        ng-href="{{ meta.href }}" \\n        class="{{ meta.class }}" \\n        title="{{ meta.title }}"\\n        ng-disabled="{{ meta.disabled }}"\\n        ng-bind-html="meta.label"></a>\\n    <span ng-if="!meta.hide && !meta.href && !meta.confirmationNeeded" \\n        class="{{ meta.class }}" \\n        ng-bind-html="meta.label"></span>\\n</li>\'),e.put("modules/common/element-text-template.html",\'<p ng-if="!dirText.hide" class="below-button-text {{ dirText.class }}">\\n    <em ng-bind-html="dirText.label"></em>\\n</p>\'),e.put("modules/common/form-field-with-feedback-template.html",\'<div class="form-group has-feedback" ng-class="{\\n    \\\'has-error\\\': formControl.$invalid,\\n    \\\'has-success\\\': formControl.$valid && formControl.$dirty}">\\n    <span ng-transclude></span>\\n    <span ng-show="formControl.$valid && formControl.$dirty"\\n        class="glyphicon glyphicon-ok form-control-feedback">\\n        </span>\\n    <span ng-show="formControl.$invalid"\\n        class="glyphicon glyphicon-flag form-control-feedback">\\n        </span>\\n</div>\\n\'),e.put("modules/comparison/comparison-form-partial.html",\'<div class="evaluate-screen">\\n\\n    <h1>Compare Answer Pairs</h1>\\n\\n    <p class="intro-text">\\n        For each round, choose which answer better matches the criteria below, give helpful feedback on both answers in the pair, and submit the comparison.\\n        Please note <strong>comparisons are not automatically saved</strong> as you type.\\n        However, you may manually save a draft of the round below.\\n    </p>\\n\\n    <p class="assignment-toggle"><a href="" ng-click="showAssignment = !showAssignment">\\n        <i class="fa fa-chevron-down" ng-show="showAssignment "></i>\\n        <i class="fa fa-chevron-right" ng-hide="showAssignment "></i>\\n        Show description for assignment "{{assignment.name}}"\\n    </a></p>\\n\\n    <div ng-show="showAssignment " class="standalone-assignment">\\n        <h2><i class="fa fa-comments"></i> {{assignment.name}}</h2>\\n        <rich-content content="assignment.description" attachment="assignment.file"></rich-content>\\n    </div>\\n\\n    <div class="row answer-pair">\\n\\n        <hr />\\n\\n        <div class="h3 text-center" ng-show="showCountDown && !comparisonError">\\n            <timer end-time="assignment.compare_end">\\n                <span ng-show="minutes > 0 || seconds > 0" title="Official time remaining until deadline" class="bg-danger alert text-danger"><i class="glyphicon glyphicon-time"></i> {{minutes}} minutes {{seconds}} seconds left</span>\\n                <span ng-show="minutes == 0 && seconds == 0" class="bg-danger alert text-danger"><i class="glyphicon glyphicon-time"></i> DEADLINE REACHED</span>\\n            </timer>\\n            <br /><br />\\n            <span class="h4">(Comparison must be submitted before deadline to be accepted)</span>\\n        </div>\\n\\n        <h2 class="col-md-6">Answer pair</h2>\\n        <h2 class="col-md-6 text-right rounds"><span ng-hide="comparisonError" class="label label-warning">\\n            Round {{current}} <span ng-if="!canManageAssignment">/ {{total}}</span>\\n        </h2>\\n\\n        <div ng-show="comparisonError" class="alert alert-info" role="alert">\\n            <p><strong>Break time!</strong> You\\\'ve compared the currently available answer pairs. Please check back later to compare new pairs after more answers have been submitted.</p>\\n        </div>\\n\\n        <div class="col-md-6" ng-hide="comparisonError">\\n            <div class="answer-choice clearfix">\\n                <h3 class="text-center"><compair-logo type="\\\'scale\\\'"></compair-logo> Answer {{firstAnsNum}}</h3>\\n                <rich-content content="answer1.content" attachment="answer1.file" download-name="\\\'Answer #\\\'+firstAnsNum"></rich-content>\\n            </div>\\n        </div>\\n\\n        <div class="col-md-6" ng-hide="comparisonError">\\n            <div class="answer-choice clearfix">\\n                <h3 class="text-center"><compair-logo type="\\\'scale\\\'"></compair-logo> Answer {{secondAnsNum}}</h3>\\n                <rich-content content="answer2.content" attachment="answer2.file" download-name="\\\'Answer #\\\'+secondAnsNum"></rich-content>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n    <form name="comparisonForm" ng-submit="comparisonSubmit(comparisonForm)" novalidate ng-hide="comparisonError" confirm-form-exit form-type="compare">\\n\\n        <div>\\n\\n            <hr />\\n\\n            <h3>1) Choose the answer that best meets the criteria below</h3>\\n\\n            <div ng-if="assignment.criteria.length == 0" class="text-center">\\n                <p>No criteria have been set for this assignment yet. Please select one or more criteria.</p>\\n                <br />\\n            </div>\\n\\n            <div class="form-group sub-step" ng-repeat="comparison_criterion in comparison.comparison_criteria">\\n\\n                <div class="each-criterion">\\n                    <fieldset>\\n                        <legend>Criterion #{{$index + 1}}</legend>\\n                        <div class="row">\\n                            <div class="col-sm-8">\\n                                <h4><i class="fa fa-gavel"></i> {{comparison_criterion.criterion.name}}</h4>\\n                                <hr />\\n                                <div class="criteria" mathjax hljs\\n                                     ng-bind-html="comparison_criterion.criterion.description">\\n                                </div>\\n                            </div>\\n                            <div class="col-sm-4 text-center">\\n                                <p class="required-star"><strong>Select Your Choice</strong></p>\\n                                <div class="btn-group">\\n                                    <label class="btn btn-primary" ng-class="{active: comparison_criterion.winner == WinningAnswer.answer1 }">\\n                                        <i class="fa fa-thumbs-up"></i><input type="radio" class="hideRadio"\\n                                            name="answer{{answer1.id}}" required\\n                                            ng-model="comparison_criterion.winner"\\n                                            ng-change="trackComparisonCriterionWinner(comparison_criterion, answer1.id)"\\n                                            ng-value="WinningAnswer.answer1">\\n                                        Answer {{firstAnsNum}}\\n                                    </label>\\n                                    <label class="btn btn-primary" ng-class="{active: comparison_criterion.winner == WinningAnswer.answer2 }">\\n                                        <i class="fa fa-thumbs-up"></i><input type="radio" class="hideRadio"\\n                                            name="answer{{answer2.id}}" required\\n                                            ng-model="comparison_criterion.winner"\\n                                            ng-change="trackComparisonCriterionWinner(comparison_criterion, answer2.id)"\\n                                            ng-value="WinningAnswer.answer2">\\n                                        Answer {{secondAnsNum}}\\n                                    </label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </fieldset>\\n                </div>\\n\\n            </div>\\n\\n            <hr />\\n\\n            <h3>2) Give detailed feedback to the author of each answer</h3>\\n\\n            <div class="row sub-step">\\n\\n                <div class="intro-text" ng-if="assignment.peer_feedback_prompt">\\n                    <div mathjax hljs ng-bind-html="assignment.peer_feedback_prompt"></div>\\n                </div>\\n\\n                <div class="intro-text" ng-if="!assignment.peer_feedback_prompt">\\n                    Use any instructor-provided guidelines or answer general questions, based on the criteria above:\\n                    <strong>What did the author do well? Where might the author improve?</strong>\\n                    Remember to make your comments&mdash;including criticisms&mdash;encouraging, respectful, and specific.\\n                </div>\\n\\n                <p class="assignment-toggle"><a href="" ng-click="showAnswers = !showAnswers">\\n                    <i class="fa fa-chevron-down" ng-show="showAnswers"></i>\\n                    <i class="fa fa-chevron-right" ng-hide="showAnswers"></i>\\n                    Show answer pair again for Round {{current}}\\n                </a></p>\\n\\n                <div class="col-md-6">\\n                    <div ng-show="showAnswers" class="answer-choice clearfix">\\n                        <h3 class="text-center"><compair-logo type="\\\'scale\\\'"></compair-logo> Answer {{firstAnsNum}}</h3>\\n                        <rich-content content="answer1.content" attachment="answer1.file" download-name="\\\'Answer #\\\'+firstAnsNum"></rich-content>\\n                    </div>\\n                </div>\\n\\n                <div class="col-md-6">\\n                    <div ng-show="showAnswers" class="answer-choice clearfix">\\n                        <h3 class="text-center"><compair-logo type="\\\'scale\\\'"></compair-logo> Answer {{secondAnsNum}}</h3>\\n                        <rich-content content="answer2.content" attachment="answer2.file" download-name="\\\'Answer #\\\'+secondAnsNum"></rich-content>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class="row sub-step">\\n                <fieldset>\\n                    <legend>Peer Feedback</legend>\\n                    <div class="col-md-6">\\n                        <label class="cke-label" ng-class="{\\\'required-star\\\': !canManageAssignment}">\\n                            Your private feedback for Answer {{firstAnsNum}}\\\'s author\\n                            <i class="fa fa-arrow-down"></i>\\n                        </label>\\n                        <textarea id="answer1_feedback" ng-if="comparison.id"\\n                            ng-model="answer1_feedback.content" rows="8" ckeditor="editor1Options" ng-required="{{!canManageAssignment}}">\\n                        </textarea>\\n                    </div>\\n\\n                    <div class="col-md-6">\\n                        <label class="cke-label" ng-class="{\\\'required-star\\\': !canManageAssignment}">\\n                            Your private feedback for Answer {{secondAnsNum}}\\\'s author\\n                            <i class="fa fa-arrow-down"></i>\\n                        </label>\\n                        <textarea id="answer2_feedback" ng-if="comparison.id"\\n                            ng-model="answer2_feedback.content" rows="8" ckeditor="editor2Options" ng-required="{{!canManageAssignment}}">\\n                        </textarea>\\n                    </div>\\n                </fieldset>\\n            </div>\\n        </div>\\n\\n        <div class="form-group sub-step text-center">\\n            <input ng-disabled="submitted" type="submit"\\n                ng-click="isDraft = true"\\n                value="Save Draft" class="btn btn-default btn-lg" />\\n            &nbsp; &nbsp;\\n            \\x3c!-- button to submit and refresh page IF evaluations remain for user --\\x3e\\n            <input ng-disabled="comparisonForm.$invalid || submitted" type="submit"\\n                ng-click="isDraft = false"\\n                value="Submit" class="btn btn-success btn-lg" />\\n            <p ng-if="submitted">\\n                <i class="fa fa-spin fa-spinner"></i>\\n                &nbsp; Saving comparison...\\n            </p>\\n        </div>\\n\\n    </form>\\n\\n</div>\\n\\n\'),e.put("modules/comparison/comparison-modal-partial.html",\'<modal-cancel-button modal-instance="modalInstance" ng-show="modalInstance !== undefined"></modal-cancel-button>\\n<ng-include src="\\\'modules/comparison/comparison-form-partial.html\\\'"></ng-include>\'),e.put("modules/comparison/comparison-self_evaluation-partial.html",\'<div>\\n    <h1>Self-Evaluation <span class="label label-warning pull-right">Round {{total}} / {{total}}</h1>\\n    <p class="intro-text">Now reflect on your own answer and <strong>give feedback to yourself</strong>, considering the other answers you\\\'ve seen. What did you do well? Where might you improve?</p>\\n    <ng-include src="\\\'modules/comment/comment-form-partial.html\\\'"></ng-include>\\n</div>\'),e.put("modules/comparison/comparison-view-partial.html",\'<div class="evaluations-screen">\\n    <div class="tab-header">\\n        <div class="row">\\n            <div class="col-sm-6">\\n                <h2>All comparisons\\n                    <span ng-if="comparisonFilters.group && !comparisonFilters.author"> for "{{ comparisonFilters.group }}"</span>\\n                    <span ng-if="comparisonFilters.author"> for "{{ comparisonFiltersName }}"</span>\\n                </h2>\\n                <p ng-if="numPages > 1">(Page {{comparisonFilters.page}} of {{numPages}})</p>\\n            </div>\\n\\n            <div class="col-sm-6 text-right multi-filters">\\n                <span class="filter">\\n                    <label>Show: &nbsp;</label>\\n                    <select ng-if="groups.length > 0" ng-model="comparisonFilters.group" class="nullable" chosen\\n                            ng-options="group as group for group in groups | orderBy: \\\'toString()\\\'">\\n                        <option value="">All groups</option>\\n                    </select>\\n                    <select id="comparison-filter" ng-model="comparisonFilters.author" class="nullable" chosen\\n                            ng-options="u.id as u.name for u in users | orderBy: \\\'name\\\'">\\n                        <option value="">All</option>\\n                    </select>\\n                </span>\\n\\n                <span class="filter">\\n                    <button uib-btn-checkbox ng-model="showAnswers" class="btn btn-sm btn-default">\\n                        Expand All Answer Pairs Below\\n                    </button>\\n                </span>\\n            </div>\\n        </div>\\n\\n        <p class="intro-text">Comparisons submitted for this assignment are shown below, and this tab is only seen by you and your teaching team. Filter by a group (if available) and student evaluator\\\'s name, or select all for these options to see the full list of comparisons. To see all feedback left for each student answer, visit the "All Answers" tab.</p>\\n\\n        <div ng-show="!comparison_sets.length">\\n            <p>No comparisons were found<span ng-if="comparisonFilters.group || comparisonFilters.author"> with these filter settings. Try another choice above</span>.</p>\\n        </div>\\n    </div>\\n\\n    <div ng-show="comparison_sets.length" class="evaluations">\\n\\n        <div ng-repeat="comparison_set in comparison_sets">\\n            <div class="each-evaluation" ng-repeat="comparison in comparison_set.comparisons">\\n                <h4 class="text-center evaluator-heading" ng-if="$first">\\n                    <i class="fa fa-user" aria-hidden="true"></i> {{ comparison_set.user.fullname_sortable }} <br />\\n                    <i class="fa fa-arrow-down"></i>\\n                </h4>\\n\\n                <div class="evaluator-answer" ng-if="$first">\\n                    <p class="content"><a href="" ng-click="loadAnswerByAuthor(comparison.user_id);showMyAnswer = !showMyAnswer;">\\n                        <i ng-show="showMyAnswer" class="fa fa-chevron-down"></i>\\n                        <i ng-hide="showMyAnswer" class="fa fa-chevron-right"></i>\\n                        <span ng-if="isInstructional(comparison.user_id)">Show instructor/TA\\\'s answer</span>\\n                        <span ng-if="!isInstructional(comparison.user_id)">Show student\\\'s answer</span>\\n                    </a></p>\\n                    <compair-student-answer class="answer" answer="(answers | filter:{user_id:comparison.user_id}:true)[0]" ng-show="showMyAnswer"></compair-student-answer>\\n                    <br />\\n                    <div class="" ng-if="comparison_set.self_evaluations.length > 0">\\n                        <div ng-repeat="self_evaluation in comparison_set.self_evaluations">\\n                            <div class="each-header">\\n                                <compair-avatar user-id="self_evaluation.user_id" avatar="self_evaluation.user.avatar" main-identifier="self_evaluation.user.fullname" secondary-identifier="self_evaluation.user.student_number"></compair-avatar>\\n                                <strong>self-evaluated</strong> on {{ self_evaluation.created | amDateFormat: \\\'MMM D @ h:mm a\\\'}}:\\n                            </div>\\n                            <div class="content" mathjax hljs ng-bind-html="self_evaluation.content"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                \\x3c!-- Comparison Header --\\x3e\\n                <div class="each-header">\\n                    <compair-avatar user-id="comparison.user_id" avatar="comparison.user.avatar" main-identifier="comparison.user.fullname" secondary-identifier="comparison.user.student_number"></compair-avatar>\\n                    <strong>compared</strong> on {{ comparison.created | amDateFormat: \\\'MMM D @ h:mm a\\\'}}:\\n                </div>\\n\\n                \\x3c!-- Answers --\\x3e\\n                <h5 class="content">Answer Pair</h5>\\n\\n                <p class="show-answers content"><a href="" ng-click="showAnswers = !showAnswers;">\\n                    <i ng-show="showAnswers" class="fa fa-chevron-down"></i>\\n                    <i ng-hide="showAnswers" class="fa fa-chevron-right"></i>\\n                    Show answer pair\\n                </a></p>\\n\\n                <div class="row collapsible-content" ng-show="showAnswers">\\n                    <compair-answer-content answer="comparison.answer1" is-chosen="comparison.winner == WinningAnswer.answer1" name="Odd-Numbered Answer" show-score="true"></compair-answer-content>\\n                    <hr class="visible-xs-block" />\\n                    <compair-answer-content answer="comparison.answer2" is-chosen="comparison.winner == WinningAnswer.answer2" name="Even-Numbered Answer" show-score="true"></compair-answer-content>\\n                </div>\\n\\n                <div class="row">\\n                    <div class="col-md-6">\\n                        <h5 class="content">Feedback Given for Odd-Numbered Answer</h5>\\n                        \\x3c!-- feedback for odd-numbered answer --\\x3e\\n                        <div ng-repeat="feedback in comparison.answer1_feedback">\\n                            <div class="content" mathjax hljs ng-bind-html="feedback.content"></div>\\n                        </div>\\n                    </div>\\n                    <div class="col-md-6">\\n                        <h5 class="content">Feedback Given for Even-Numbered Answer</h5>\\n                        \\x3c!-- feedback for even-numbered answer --\\x3e\\n                        <div ng-repeat="feedback in comparison.answer2_feedback">\\n                            <div class="content" mathjax hljs ng-bind-html="feedback.content"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <h5 class="content">Answer Chosen by Criterion</h5>\\n\\n                <div ng-repeat="comparison_criterion in comparison.comparison_criteria">\\n\\n                    <p class="content">"{{comparison_criterion.criterion.name}}"<br />\\n                        <span class="glyphicon glyphicon-ok-circle"></span>\\n                        <span ng-if="comparison_criterion.winner == WinningAnswer.answer1"><strong>Odd-numbered answer</strong></span>\\n                        <span ng-if="comparison_criterion.winner == WinningAnswer.answer2"><strong>Even-numbered answer</strong></span>\\n                    </p>\\n\\n                </div>\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n\\n    <div class="text-center">\\n        <ul uib-pagination total-items="totalNumComparisonSets" ng-model="comparisonFilters.page"\\n            max-size="10" class="pagination-sm" boundary-links="true" direction-links="false"\\n            items-per-page="comparisonFilters.perPage" num-pages="numPages" ng-hide="numPages == 1"></ul>\\n    </div>\\n</div>\\n\'),e.put("modules/course/course-assignments-partial.html",\'<div class="course-screen">\\n\\n    <div class="row">\\n        <header ng-class="{\\\'col-sm-6\\\': canManageAssignment, \\\'col-sm-12\\\': !canManageAssignment}">\\n            <h1><i class="fa fa-book"></i> {{course.name}} ({{course.year}} {{course.term}})</h1>\\n        </header>\\n        <div ng-if="canManageAssignment" class="col-sm-6 sub-nav">\\n            <span ng-if="canCreateAssignment">\\n                <a ng-href="#/course/{{course.id}}/assignment/create"\\n                    class="btn btn-primary" id="add-assignment-btn">\\n                    <i class="fa fa-plus"></i>\\n                    Add Assignment\\n                </a>\\n            </span>\\n            <span ng-if="canEditCourse">\\n                <a id="manage-users-btn" ng-href="#/course/{{course.id}}/user" class="btn btn-primary">\\n                    <i class="fa fa-users"></i>\\n                    Manage Users\\n                </a>\\n            </span>\\n            <span ng-if="canEditCourse">\\n                <a id="edit-course-btn" ng-href="#/course/{{course.id}}/edit" class="btn btn-primary">\\n                    <i class="fa fa-edit"></i>\\n                    Edit Course\\n                </a>\\n            </span>\\n        </div>\\n    </div>\\n    \\n    <div class="row">\\n        <div class="col-md-12" ng-if="!canManageAssignment">\\n            <p class="intro-text">For each assignment below, you will first submit your own answer. Then you will compare pairs of anonymous peer answers. Try to make your answer as strong as possible, since your peers will also read and compare it anonymously with other answers.</p>\\n        </div>\\n        <div class="col-md-12" ng-if="canManageAssignment">\\n            <p class="intro-text">For each assignment below, students will first submit their own answer. Then they will compare pairs of anonymous peer answers. Finally, they will read feedback received from peers. The anonymity of this feedback depends on what you instruct students to use as a display name in their profile, but you and your teaching team will always see who wrote what.</p>\\n        </div>\\n    </div>\\n\\n    <div class="row">\\n\\n        <div class="col-sm-8">\\n            <h2>{{filter}} <span ng-if="results.length != assignments.length">({{results.length}})</span></h2>\\n        </div>\\n\\n        <div class="col-sm-4 text-right">\\n            <form class="form-inline searchCourse" role="search" ng-show="assignments.length">\\n                <div class="form-group filter">\\n                    <label>Show: &nbsp;</label>\\n                    <select ng-model="filter" ng-options="f for f in filters"></select>\\n                </div>\\n            </form>\\n        </div>\\n\\n    </div>\\n\\n    <div ng-if="!assignments.length">\\n        <hr />\\n        <p>No assignments currently posted. <span ng-if="canCreateAssignment">Would you like to <a ng-href="#/course/{{course.id}}/assignment/create">add an assignment</a>?</span></p>\\n    </div>\\n\\n    \\x3c!-- Assignments List --\\x3e\\n    <div class="row each-assignment" ng-class="{\\\'first-child\\\': $first}"\\n        ng-repeat="assignment in assignments | filter:assignmentFilter(filter) as results">\\n\\n        \\x3c!-- Assignment Display --\\x3e\\n        <div class="col-sm-9 media">\\n\\n            \\x3c!-- Assignment Info --\\x3e\\n            <div class="media-body">\\n\\n                \\x3c!-- Name --\\x3e\\n                <a ng-href="#/course/{{course.id}}/assignment/{{assignment.id}}">\\n                    <h3 class="media-heading">\\n                        <i class="fa fa-comments"></i>{{assignment.name}} &raquo;\\n                    </h3>\\n                </a>\\n\\n                \\x3c!-- Details --\\x3e\\n                \\x3c!-- <div class="assignment-desc">\\n                    <rich-content content="assignment.description" attachment="assignment.file"></rich-content>\\n                </div> --\\x3e\\n\\n                \\x3c!-- Metadata --\\x3e\\n                <ul class="list-inline assignment-metadata-list">\\n                    <assignment-metadata name="editLink"></assignment-metadata>\\n                    <assignment-metadata name="duplicateLink"></assignment-metadata>\\n                    <assignment-metadata name="answerCount"></assignment-metadata>\\n                    <assignment-metadata name="answerCountEmpty"></assignment-metadata>\\n                    <assignment-metadata name="compareCount"></assignment-metadata>\\n                    <assignment-metadata name="feedbackCount"></assignment-metadata>\\n                    <assignment-metadata name="feedbackCountEmpty"></assignment-metadata>\\n                    <assignment-metadata name="completedFeedback"></assignment-metadata>\\n                    <assignment-metadata name="missedFeedback"></assignment-metadata>\\n                    <assignment-metadata name="missingFeedback"></assignment-metadata>\\n                    <assignment-metadata name="assignmentScheduled"></assignment-metadata>\\n                    <assignment-metadata name="periodLabel"></assignment-metadata>\\n                    <assignment-metadata name="assignmentCompleted"></assignment-metadata>\\n                    <assignment-metadata name="deleteLink"></assignment-metadata>\\n                </ul>\\n\\n            </div>\\n\\n        </div>\\n\\n        \\x3c!-- Assignment Actions --\\x3e\\n        <div class="col-sm-3 text-right action-btns">\\n            <assignment-action-button name="answer"></assignment-action-button>\\n            <assignment-action-button name="finishAnswer"></assignment-action-button>\\n            <assignment-action-button name="compare"></assignment-action-button>\\n            <assignment-action-button name="selfEval"></assignment-action-button>\\n            <assignment-action-button name="viewResults"></assignment-action-button>\\n            <assignment-text name="answerDue"></assignment-text>\\n            <assignment-text name="notEnoughAnswers"></assignment-text>\\n            <assignment-text name="comparisonsDue"></assignment-text>\\n            <assignment-text name="noSelfEval"></assignment-text>\\n        </div>\\n\\n    </div>\\n\\n    <div ng-show="assignments.length && !results.length">\\n        <hr />\\n        <p>No assignments currently listed in this category. Try another filter choice above.</p>\\n    </div>\\n\\n</div>\\n\'),e.put("modules/course/course-duplicate-modal-partial.html",\'<p class="pull-right"><a href="" ng-click="dismissDuplicate()">Cancel</a></p>\\n\\n<ng-include src="\\\'modules/course/course-duplicate-partial.html\\\'"></ng-include>\'),e.put("modules/course/course-duplicate-partial.html",\'<form name="duplicateCourseForm" class="form" ng-submit="duplicate()" novalidate>\\n\\n    <h1>Duplicate: {{originalCourse.name}}</h1>\\n    <br />\\n    <p class="intro-text">Please provide the required fields below to duplicate your course and its assignments. All assignments will be editable after duplication. This process will <em>not</em> copy enrolled students, submitted answers, or comparisons.</p>\\n\\n    <fieldset ng-show="!showAssignments">\\n        <legend>Course Details</legend>\\n        <compair-field-with-feedback form-control="duplicateCourseForm.courseName">\\n            <label for="courseName" class="required-star">Course Name</label>\\n            <input id="courseName" name="courseName" ng-model="duplicateCourse.name"\\n                type="text" class="form-control" required maxlength="255" />\\n        </compair-field-with-feedback>\\n        <div class="row">\\n            <div class="col-md-6 form-group">\\n                <compair-field-with-feedback form-control="duplicateCourseForm.courseYear">\\n                    <label for="courseYear" class="required-star">Year</label>\\n                    <input id="courseYear" name="courseYear" ng-model="duplicateCourse.year"\\n                    type="number" class="form-control" required min="1900" />\\n                </compair-field-with-feedback>\\n            </div>\\n            <div class="col-md-6 form-group">\\n                <compair-field-with-feedback form-control="duplicateCourseForm.courseTerm">\\n                    <label for="courseTerm" class="required-star">Term/Semester</label>\\n                    <input id="courseTerm" name="courseTerm" ng-model="duplicateCourse.term"\\n                    type="text" class="form-control" required maxlength="255" />\\n                </compair-field-with-feedback>\\n            </div>\\n        </div>\\n        <div class="row">\\n            <div class="col-md-12 form-group">\\n                <label for="courseSandbox">\\n                    <input type="checkbox" id="courseSandbox" name="courseSandbox" value="1" ng-model="duplicateCourse.sandbox">&nbsp;\\n                    This course is only for trying out ComPAIR (a "sandbox" course)\\n                </label>\\n            </div>\\n        </div>\\n    </fieldset>\\n\\n    <fieldset ng-show="!showAssignments">\\n        <legend>Schedule</legend>\\n        <div class="row">\\n            <div class="col-md-6 form-group">\\n                <label>Course Begins</label><br />\\n                <div class="assignment-date">\\n                    <span class="input-group">\\n                        <input type="text" class="form-control" uib-datepicker-popup="{{format}}" ng-model="duplicateCourse.date.course_start.date"\\n                            is-open="duplicateCourse.date.course_start.opened"\\n                            datepicker-options="{ maxDate: duplicateCourse.date.course_end.date }" />\\n                        <span class="input-group-btn">\\n                            <button type="button" class="btn btn-default" ng-click="datePickerOpen($event, duplicateCourse.date.course_start)"><i class="glyphicon glyphicon-calendar"></i></button>\\n                        </span>\\n                    </span>\\n                </div>\\n                <div class="assignment-date">\\n                    <div uib-timepicker ng-model="duplicateCourse.date.course_start.time" minute-step="1" mousewheel="false"></div>\\n                </div>\\n            </div>\\n            <div class="col-md-6 form-group">\\n                <label>Course Ends</label><br />\\n                <div class="assignment-date">\\n                    <span class="input-group">\\n                        <input type="text" class="form-control" uib-datepicker-popup="{{format}}" ng-model="duplicateCourse.date.course_end.date"\\n                            is-open="duplicateCourse.date.course_end.opened"\\n                            datepicker-options="{ minDate: duplicateCourse.date.course_start.date }" />\\n                        <span class="input-group-btn">\\n                            <button type="button" class="btn btn-default" ng-click="datePickerOpen($event, duplicateCourse.date.course_end)"><i class="glyphicon glyphicon-calendar"></i></button>\\n                        </span>\\n                    </span>\\n                </div>\\n                <div class="assignment-date">\\n                    <div uib-timepicker ng-model="duplicateCourse.date.course_end.time" minute-step="1" mousewheel="false"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </fieldset>\\n\\n    <fieldset ng-show="showAssignments">\\n        <legend>Assignment Dates</legend>\\n\\n        <div class="instructional-text">\\n            <p>\\n                You are <strong>duplicating {{duplicateAssignments.length}} assignments</strong> with this course. You can update the assignment dates manually in bulk below or update them after duplication by editing each individual assignment.\\n            </p>\\n        </div>\\n\\n        \\x3c!-- Assignments List --\\x3e\\n        <div ng-show="duplicateAssignments.length" class="each-assignment" ng-class="{\\\'first-child\\\': $first}"\\n            ng-repeat="assignment in duplicateAssignments | orderBy:\\\'\\\':true">\\n\\n            <hr ng-hide="$first" />\\n\\n            <h3 class="media-heading">\\n                Assignment: "{{assignment.name}}"\\n            </h3>\\n            <div class="form-group">\\n                <input id="availableCheck-{{assignment.id}}" type="checkbox" ng-model="assignment.availableCheck">\\n                <label for="availableCheck-{{assignment.id}}">Set a comparison period for this assignment below<span ng-show="assignment.availableCheck">:</span></label>\\n            </div>\\n\\n            <div class="row">\\n                <div class="col-md-6 form-group">\\n                    <label class="required-star">\\n                        Answering Begins\\n                        <span ng-if="duplicateCourse.date.course_start.date">\\n                            (in course week #{{(assignment.date.astart.date | amDifference : duplicateCourse.date.course_start.date : \\\'weeks\\\') + 1 }})\\n                        </span>\\n                    </label><br />\\n                    <div class="assignment-date">\\n                        <span class="input-group">\\n                            <input type="text" class="form-control" uib-datepicker-popup="{{format}}" ng-model="assignment.date.astart.date"\\n                                is-open="assignment.date.astart.opened" required\\n                                datepicker-options="{ minDate: datePickerMinDate(duplicateCourse.date.course_start.date), maxDate: datePickerMaxDate(assignment.date.aend.date, duplicateCourse.date.course_end.date) }"\\n                                />\\n                            <span class="input-group-btn">\\n                                <button type="button" class="btn btn-default" ng-click="datePickerOpen($event, assignment.date.astart)"><i class="glyphicon glyphicon-calendar"></i></button>\\n                            </span>\\n                        </span>\\n                    </div>\\n                    <div class="assignment-date">\\n                        <div uib-timepicker ng-model="assignment.date.astart.time" minute-step="1" mousewheel="false"></div>\\n                    </div>\\n                </div>\\n                <div class="col-md-6 form-group">\\n                    <label class="required-star">\\n                        Answering Ends\\n                        \\x3c!-- <span ng-if="duplicateCourse.date.course_start.date">\\n                            (Course week #{{assignment.date.aend.date | amDifference : duplicateCourse.date.course_start.date : \\\'weeks\\\' }})\\n                        </span> --\\x3e\\n                    </label><br />\\n                    <div class="assignment-date">\\n                        <span class="input-group">\\n                            <input type="text" class="form-control" uib-datepicker-popup="{{format}}" ng-model="assignment.date.aend.date"\\n                                is-open="assignment.date.aend.opened" required\\n                                datepicker-options="{ minDate: datePickerMinDate(assignment.date.astart.date, duplicateCourse.date.course_start.date), maxDate: datePickerMaxDate(duplicateCourse.date.course_end.date) }"\\n                                />\\n                            <span class="input-group-btn">\\n                                <button type="button" class="btn btn-default" ng-click="datePickerOpen($event, assignment.date.aend)"><i class="glyphicon glyphicon-calendar"></i></button>\\n                            </span>\\n                        </span>\\n                    </div>\\n                    <div class="assignment-date">\\n                        <div uib-timepicker ng-model="assignment.date.aend.time" minute-step="1" mousewheel="false"></div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class="row" ng-show="assignment.availableCheck">\\n                <div class="col-md-6 form-group">\\n                    <label class="required-star">\\n                        Comparing Begins\\n                        <span ng-if="duplicateCourse.date.course_start.date">\\n                            (in course week #{{(assignment.date.cstart.date | amDifference : duplicateCourse.date.course_start.date : \\\'weeks\\\') + 1 }})\\n                        </span>\\n                    </label><br />\\n                    <div class="assignment-date">\\n                        <span class="input-group">\\n                            <input type="text" class="form-control" uib-datepicker-popup="{{format}}" ng-model="assignment.date.cstart.date"\\n                                is-open="assignment.date.cstart.opened" ng-required="assignment.availableCheck"\\n                                datepicker-options="{ minDate: datePickerMinDate(assignment.date.astart.date, duplicateCourse.date.course_start.date), maxDate: datePickerMaxDate(assignment.date.cend.date, duplicateCourse.date.course_end.date) }"\\n                                />\\n                            <span class="input-group-btn">\\n                                <button type="button" class="btn btn-default" ng-click="datePickerOpen($event, assignment.date.cstart)"><i class="glyphicon glyphicon-calendar"></i></button>\\n                            </span>\\n                        </span>\\n                    </div>\\n                    <div class="assignment-date">\\n                        <div uib-timepicker ng-model="assignment.date.cstart.time" minute-step="1" mousewheel="false"></div>\\n                    </div>\\n                </div>\\n                <div class="col-md-6 form-group">\\n                    <label class="required-star">\\n                        Comparing Ends\\n                        \\x3c!-- <span ng-if="duplicateCourse.date.course_start.date">\\n                            (Course week #{{assignment.date.cend.date | amDifference : duplicateCourse.date.course_start.date : \\\'weeks\\\' }})\\n                        </span> --\\x3e\\n                    </label><br />\\n                    <div class="assignment-date">\\n                        <span class="input-group">\\n                            <input type="text" class="form-control" uib-datepicker-popup="{{format}}" ng-model="assignment.date.cend.date"\\n                                is-open="assignment.date.cend.opened" ng-required="assignment.availableCheck"\\n                                datepicker-options="{ minDate: datePickerMinDate(assignment.date.cstart.date, duplicateCourse.date.course_start.date), maxDate: datePickerMaxDate(duplicateCourse.date.course_end.date) }"\\n                                />\\n                            <span class="input-group-btn">\\n                                <button type="button" class="btn btn-default" ng-click="datePickerOpen($event, assignment.date.cend)"><i class="glyphicon glyphicon-calendar"></i></button>\\n                            </span>\\n                        </span>\\n                    </div>\\n                    <div class="assignment-date">\\n                        <div uib-timepicker ng-model="assignment.date.cend.time" minute-step="1" mousewheel="false"></div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </fieldset>\\n\\n    <div class="form-group text-center">\\n        <a class="btn btn-success btn-lg" value="Next" ng-click="showAssignments=!showAssignments; adjustDuplicateAssignmentDates()"\\n            ng-disabled="duplicateCourseForm.$invalid" ng-show="!showAssignments">Next &raquo;</a>\\n        <a class="btn btn-default btn-lg mirror-submit" value="Back" ng-click="showAssignments= canGoBack(duplicateCourseForm) ? !showAssignments : showAssignments;"\\n            ng-show="showAssignments">&laquo; Back</a>\\n        &nbsp; &nbsp;\\n        <input type="submit" class="btn btn-success btn-lg" value="Duplicate"\\n            ng-disabled="duplicateCourseForm.$invalid || submitted" ng-show="showAssignments" />\\n    </div>\\n    <br />\\n    \\n</form>\'),e.put("modules/course/course-partial.html",\'<h1 ng-if="!course.id">Add Course</h1>\\n<h1 ng-if="course.id">Edit Course</h1>\\n\\n<form name="courseForm" class="form" ng-submit="save()" novalidate>\\n\\n    <fieldset>\\n        <legend>Course Details</legend>\\n        <compair-field-with-feedback form-control="courseForm.courseName">\\n            <label for="courseName" class="required-star">Course Name</label>\\n            <input id="courseName" name="courseName" ng-model="course.name"\\n                    type="text" class="form-control" required maxlength="255" placeholder="e.g. BIOL 112 - Biology of the Cell" ng-model="course.name" auto-focus />\\n        </compair-field-with-feedback>\\n        <div class="row">\\n            <div class="col-md-6 form-group">\\n                <compair-field-with-feedback form-control="courseForm.courseYear">\\n                    <label for="courseYear" class="required-star">Year</label>\\n                    <input id="courseYear" name="courseYear" ng-model="course.year"\\n                    type="number" class="form-control" required min="1900" />\\n                </compair-field-with-feedback>\\n            </div>\\n            <div class="col-md-6 form-group">\\n                <compair-field-with-feedback form-control="courseForm.courseTerm">\\n                    <label for="courseTerm" class="required-star">Term/Semester</label>\\n                    <input id="courseTerm" name="courseTerm" ng-model="course.term"\\n                    type="text" class="form-control" required maxlength="255" placeholder="e.g. W1" />\\n                </compair-field-with-feedback>\\n            </div>\\n        </div>\\n        <div class="row">\\n            <div class="col-md-12 form-group">\\n                <label for="courseSandbox">\\n                    <input type="checkbox" id="courseSandbox" name="courseSandbox" value="1" ng-model="course.sandbox">&nbsp;\\n                    This course is only for trying out ComPAIR (a "sandbox" course)\\n                </label>\\n            </div>\\n        </div>\\n    </fieldset>\\n\\n    <fieldset>\\n        <legend>Schedule</legend>\\n        <div class="instructional-text" ng-hide="status">\\n        <p>\\n            <strong>Optionally set the course dates</strong> during which enrolled students can see and access the course content when they log in. Setting no dates means the course is always accessible to students. (You will be able to set different dates for individual assignments when you create them.)\\n        </p>\\n        </div>\\n        <div class="row">\\n            <div class="col-md-6 form-group">\\n                <label>Course Begins</label><br />\\n                <div class="assignment-date">\\n                    <span class="input-group">\\n                        <input type="text" class="form-control" uib-datepicker-popup="{{format}}" ng-model="date.course_start.date" is-open="date.course_start.opened" datepicker-options="{ maxDate: date.course_end.date }" />\\n                        <span class="input-group-btn">\\n                            <button type="button" class="btn btn-default" ng-click="datePickerOpen($event, date.course_start)"><i class="glyphicon glyphicon-calendar"></i></button>\\n                        </span>\\n                    </span>\\n                </div>\\n                <div class="assignment-date">\\n                    <div uib-timepicker ng-model="date.course_start.time" minute-step="1" mousewheel="false"></div>\\n                </div>\\n            </div>\\n            <div class="col-md-6 form-group">\\n                <label>Course Ends</label><br />\\n                <div class="assignment-date">\\n                    <span class="input-group">\\n                        <input type="text" class="form-control" uib-datepicker-popup="{{format}}" ng-model="date.course_end.date" is-open="date.course_end.opened" datepicker-options="{ minDate: date.course_start.date }" />\\n                        <span class="input-group-btn">\\n                            <button type="button" class="btn btn-default" ng-click="datePickerOpen($event, date.course_end)"><i class="glyphicon glyphicon-calendar"></i></button>\\n                        </span>\\n                    </span>\\n                </div>\\n                <div class="assignment-date">\\n                    <div uib-timepicker ng-model="date.course_end.time" minute-step="1" mousewheel="false"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </fieldset>\\n\\n    <input type="submit" class="btn btn-success btn-lg center-block" value="Save"\\n            ng-disabled="courseForm.$invalid || submitted" />\\n</form>\'),e.put("modules/course/course-select-partial.html",\'<div class="course-select-screen">\\n    <div ng-show="!showDuplicateForm">\\n        <h1>Set ComPAIR Course</h1>\\n        <br />\\n        <p class="intro-text">\\n            You\\\'re almost ready to start using ComPAIR!\\n            Simply <strong>create</strong> a new ComPAIR course or <strong>select</strong> an existing ComPAIR course to begin creating and posting assignments for your students.\\n            \\x3c!--Simply <strong>create</strong> a new ComPAIR course, <strong>select</strong> an existing ComPAIR course, <strong>or duplicate</strong> an existing ComPAIR course to begin creating and posting assignments for your students.--\\x3e\\n        </p>\\n\\n        <div class="row">\\n            <div class="col-md-6">\\n                <ng-include src="\\\'modules/course/course-partial.html\\\'"></ng-include>\\n            </div>\\n            <div class="col-md-6">\\n                <h1>Use Existing ({{totalNumCourses}} Found)</h1>\\n\\n                \\x3c!-- Course listing --\\x3e\\n                <div class="course-select-list">\\n                    <table class="table table-striped" ng-if="courses.length">\\n                        <tr>\\n                            <th ng-repeat="header in headers">{{header}}</th>\\n                        </tr>\\n                        <tr ng-repeat="course in courses">\\n                            <td><strong>{{course.name}}</strong></td>\\n                            <td>\\n                                <div class="text-right action-btns">\\n                                    <a class="btn btn-default" ng-click="selectCourse(course.id)">\\n                                        Use This\\n                                    </a>\\n\\n                                    <a class="btn btn-default" ng-click="selectDuplicateCourse(course)">\\n                                        Duplicate This\\n                                    </a>\\n                                </div>\\n                            </td>\\n                        </tr>\\n                    </table>\\n\\n                    <div class="text-center" ng-if="courses.length">\\n                        <ul uib-pagination total-items="totalNumCourses" ng-model="courseFilters.page"\\n                            max-size="10" class="pagination-sm" boundary-links="true"\\n                            direction-links="false" items-per-page="courseFilters.perPage"\\n                            num-pages="numPages" ng-hide="numPages == 1"></ul>\\n                    </div>\\n\\n                    <div ng-if="!courses.length">\\n                        <p>No courses currently found for you in ComPAIR. Please create a new course using the form on this screen.</p>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div ng-if="showDuplicateForm">\\n        <div ng-controller="CourseDuplicateController">\\n            <ng-include src="\\\'modules/course/course-duplicate-modal-partial.html\\\'"></ng-include>\\n        </div>\\n    </div>\\n</div>\'),e.put("modules/criterion/criterion-assignment-partial.html",\'<label class="required-star">Comparison Criteria</label>\\n\\n<div ng-repeat="(key, criterion) in assignment.criteria" class="row">\\n    <div class="col-sm-2">\\n        <hr class="visible-xs" />\\n        <p>\\n            \\x3c!-- Can edit: Public criteria on new assignments (will create duplicate) or Non public criteria if system admin or owner of criterion --\\x3e\\n            <a href=""\\n                ng-click="changeCriterion(criterion)"\\n                ng-if="(criterion.public == true && !assignment.id) || (criterion.public == false && (canManageAssignment || criterion.user_id==loggedInUserId))">\\n                Edit\\n            </a>\\n            <span ng-if="criterion.public == true && assignment.id" class="text-muted">\\n                (not editable)\\n            </span>\\n        </p>\\n    </div>\\n    <div class="col-sm-2">\\n        <p>\\n            <a href="" confirmation-needed="remove(key)" keyword="criterion" ng-if="!assignment.compared">\\n                Drop <i class="visible-xs fa fa-arrow-down"></i>\\n            </a>\\n            <span ng-if="assignment.compared" class="text-muted">(cannot drop)</span>\\n        </p>\\x3c!-- disable from assignment / add to dropdown --\\x3e\\n    </div>\\n    <div ng-class="{\\n            \\\'col-sm-6\\\': assignment.criteria.length > 1,\\n            \\\'col-sm-8\\\': assignment.criteria.length <= 1\\n        }">\\n        <strong>{{ key + 1 }}. {{ criterion.name }}</strong>\\n        <div mathjax hljs ng-bind-html="criterion.description"></div>\\n    </div>\\n    <div class="col-sm-2" ng-if="assignment.criteria.length > 1">\\n        <div ng-if="assignment.pairing_algorithm == PairingAlgorithm.adaptive || assignment.pairing_algorithm == PairingAlgorithm.adaptive_min_delta">\\n            <span class="text-muted">Score Weight = {{getCriterionWeightAsPercent(criterion.weight)|number:2}}%</span>\\n            <div ng-if="!assignment.compared">\\n                <input class="form-control" type="number" min="0" ng-pattern="onlyNumbers" required\\n                    name="criterion_weight" ng-model="criterion.weight">\\n            </div>\\n        </div>\\n        <div ng-if="assignment.pairing_algorithm == PairingAlgorithm.random">\\n            <span class="text-muted">Score Weight N/A<br / ><em>Scoring not used</em></span>\\n        </div>\\n        <br /><br />\\n    </div>\\n</div>\\n\\n<p class="alert alert-info" ng-if="(assignment.pairing_algorithm == PairingAlgorithm.adaptive || assignment.pairing_algorithm == PairingAlgorithm.adaptive_min_delta) && criteriaCanDraw()">\\n    Note that with these criteria weights, <strong>it is possible for an answer pair to be scored overall as tied</strong>. This may affect the accuracy of answer pair selection and final answer rankings, but it will not change the comparison process for students.\\n</p>\\n\\n<comparison-preview ng-show="assignment.criteria.length > 0"></comparison-preview>\\n\\n<div ng-show="assignment.criteria.length < 1">\\n    <p>No criteria added yet for this assignment. Please select or create a new one below.</p>\\n</div>\\n\\n<div ng-if="!assignment.compared">\\n    <hr/>\\n\\n    \\x3c!-- dropdown with leftover criteria / Add button--\\x3e\\n    <label>Add Criteria</label>\\n\\n    <br /><br />\\n\\n    <div class="row">\\n        <div class="col-sm-2">\\n            <p><a id="add-new-criteria" href="" class="btn btn-primary btn-sm" ng-click="changeCriterion()"><i class="fa fa-plus" aria-hidden="true"></i> Add New</a></p>\\n        </div>\\n        <div class="col-sm-1">\\n            <p>OR</p>\\n        </div>\\n        <div class="form-group col-sm-6">\\n            <select id="select-default-criteria" class="form-control" ng-model="selected"\\n                    ng-options="key as c.name for (key, c) in availableCriteria">\\n                <option value="">- Select a default criterion -</option>\\n            </select>\\n        </div>\\n        <div class="col-sm-3">\\n            \\x3c!-- used length because when list is empty the empty option gets a value of 0 which is valid --\\x3e\\n            <p><a id="add-default-criteria" class="btn btn-sm btn-primary" ng-click="add(selected)" ng-disabled="!selected || !availableCriteria.length"><i class="fa fa-plus" aria-hidden="true"></i> Add Selected</a></p>\\n        </div>\\n    </div>\\n</div>\'),e.put("modules/criterion/criterion-form-partial.html",\'<h1 ng-if="method == \\\'create\\\'">Add Criterion</h1>\\n<h1 ng-if="method == \\\'edit\\\'">Edit Criterion</h1>\\n\\n<p ng-if="criterion.compared" class="intro-text bg-warning text-warning alert">\\n    <i class="fa fa-warning"></i>\\n    This criterion has been used in comparisons by students in a prior assignment. Text updates here will also be reflected in prior assignments.\\n</p>\\n\\n<ng-form name="criterionForm" class="form">\\n\\n    <fieldset>\\n        <legend>Criterion Details</legend>\\n        <compair-field-with-feedback form-control="criterionForm.criterionName">\\n            <label class="required-star" for="criterionName">Criterion Question</label>\\n            <input type="text" maxlength="255" placeholder="e.g. Which answer is better?"\\n                   ng-model="criterion.name" id="criterionName" name="criterionName" class="form-control" required/>\\n        </compair-field-with-feedback>\\n        <div class="form-group">\\n            <label for="criterionDescription">Instructions for Students When Comparing</label>\\n            <textarea ckeditor="editorOptions" rows="4"\\n                ng-model="criterion.description" id="criterionDescription" name="criterionDescription" class="form-control">\\n            </textarea>\\n        </div>\\n        <div class="form-group">\\n            <input type="checkbox" ng-model="criterion.default" name="criterionDefault" id="criterionDefault" />\\n            <label for="criterionDefault">Include this criterion in my list of default criteria (to re-use it in other assignments)</label>\\n        </div>\\n    </fieldset>\\n\\n    <div class="text-center">\\n        <input type="submit" ng-click="criterionSubmit()" class="btn btn-success btn-lg" value="Save" ng-disabled="criterionForm.$invalid || submitted" />\\n    </div>\\n\\n    <br />\\n\\n</ng-form>\'),e.put("modules/criterion/criterion-modal-partial.html",\'<modal-cancel-button modal-instance="modalInstance" ng-show="modalInstance !== undefined"></modal-cancel-button>\\n<ng-include src="\\\'modules/criterion/criterion-form-partial.html\\\'"></ng-include>\\n\'),e.put("modules/gradebook/gradebook-partial.html",\'<div class="tab-header">\\n    <div class="row">\\n        <h2 class="col-sm-6">\\n            Participation\\n            <span ng-show="gradebookFilters.group && !gradebookFilters.student">for "{{gradebookFilters.group}}"</span>\\n            <span ng-show="gradebookFilters.student">for "{{ gradebookFilters.student.name }}"</span>\\n        </h2>\\n        <div class="col-sm-6 text-right multi-filters">\\n            <span class="filter" ng-if="canManageAssignment">\\n                <label>Show: &nbsp;</label>\\n                <select ng-if="groups.length > 0" ng-model="gradebookFilters.group" class="nullable" chosen\\n                        ng-options="g as g for g in groups | orderBy: \\\'toString()\\\'">\\n                    <option value="">All groups</option>\\n                </select>\\n                <select ng-model="gradebookFilters.student" class="nullable" chosen\\n                        ng-options="u as u.name for u in users | orderBy: \\\'name\\\'">\\n                    <option value="">All students</option>\\n                </select>\\n            </span>\\n        </div>\\n    </div>\\n    <p class="intro-text"><span ng-if="canManageAssignment">To export data reports for participation and other application statistics, go to <a ng-href="#/report">Download Reports</a>.</span> <span ng-if="includeScores">Note that <strong>answer scores are normalized</strong> from the scores assigned using ComPAIR\\\'s <a href="http://ubc.github.io/compair/site/best-practices.html#scores" target="_blank">scoring algorithm</a> and are not reflective of a straight win-loss record. The top-ranked answer(s) for the assignment receive 100%. All others receive a lower percentage based on how well they did in comparison.</span></p>\\n    <div ng-if="!gradebook.length">\\n        <hr />\\n        <p>No students found for this course. Would you like to <a ng-href="#/course/{{courseId}}/user">manage users</a>?</p>\\n    </div>\\n</div>\\n<div class="table-responsive" ng-if="gradebook.length">\\n    <table class="table table-striped table-bordered">\\n        <thead>\\n            <tr>\\n                <th>\\n                    <a href="" ng-click="updateTableOrderBy(\\\'user.firstname\\\')">First Name</a>\\n                </th>\\n                <th>\\n                    <a href="" ng-click="updateTableOrderBy(\\\'user.lastname\\\')">Last Name</a>\\n                </th>\\n                <th>\\n                    <a href="" ng-click="updateTableOrderBy(\\\'user.student_number\\\')">Student Number</a>\\n                </th>\\n                <th class="text-center" ng-if="!includeScores">\\n                    <a href="" ng-click="updateTableOrderBy(\\\'num_answers\\\')">Answered</a>\\n                </th>\\n                <th class="text-center" ng-if="includeScores">\\n                    <a href="" ng-click="updateTableOrderBy(\\\'score\\\')">Answer Score</a>\\n                </th>\\n                <th class="text-center" ng-if="showAttachments">\\n                    <a href="" ng-click="updateTableOrderBy(\\\'attachments\\\')">Attachments</a>\\n                </th>\\n                \\x3c!--\\n                <th class="text-center">\\n                    <a href="" ng-click="updateTableOrderBy(\\\'flagged\\\')">Flagged</a>\\n                </th>\\n                --\\x3e\\n                <th class="text-center">\\n                    <a href="" ng-click="updateTableOrderBy(\\\'num_comparisons\\\')">Evaluations</a>\\n                </th>\\n                <th class="text-center" ng-if="includeSelfEval">\\n                    <a href="" ng-click="updateTableOrderBy(\\\'num_self_evaluation\\\')">Self-Evaluation</a>\\n                </th>\\n                <th class="text-center">\\n                    <a href="" ng-click="updateTableOrderBy(\\\'grade\\\')">Participation Grade</a>\\n                </th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr ng-repeat="entry in gradebook | filter:groupFilter() | orderBy:predicate:reverse">\\n                <td>{{entry.user.firstname}}</td>\\n                <td>{{entry.user.lastname}}</td>\\n                <td>{{entry.user.student_number}}</td>\\n                <td class="text-center text-success" ng-if="!includeScores && entry.num_answers > 0"><strong>Yes</strong></td>\\n                <td class="text-center text-danger" ng-if="!includeScores && entry.num_answers == 0"><strong>No</strong></td>\\n                <td class="text-center" ng-if="includeScores">\\n                    <strong>\\n                        <span ng-if="!isNumber(entry.score)">{{entry.score}}</span>\\n                        <span ng-if="isNumber(entry.score)">{{entry.score|number:0}}%</span>\\n                    </strong>\\n                </td>\\n                <td class="text-center" ng-if="showAttachments">\\n                    <span ng-if="!entry.file"> n/a </span>\\n                    <a ng-if="entry.file" target="_blank" ng-href="/app/attachment/{{entry.file.name}}?name={{ entry.download_file_name+\\\'.\\\'+entry.file.extension | encodeURIComponent}}">View &raquo;</a>\\n                </td>\\n                \\x3c!--\\n                <td class="text-center" ng-class="{\\n                    \\\'text-success\\\': entry.flagged == \\\'No\\\',\\n                    \\\'text-danger\\\': entry.flagged == \\\'Yes\\\'\\n                    }">\\n                    <strong ng-if="entry.flagged != \\\'No Answer\\\'">{{ entry.flagged }}</strong>\\n                    <strong ng-if="entry.flagged == \\\'No Answer\\\'">n/a</strong>\\n                </td>\\n                --\\x3e\\n                <td class="text-center" ng-class="{\\n                    \\\'text-danger\\\': entry.num_comparisons == 0,\\n                    \\\'text-warning\\\': entry.num_comparisons > 0 &&\\n                                entry.num_comparisons < totalComparisonsRequired,\\n                    \\\'text-success\\\': entry.num_comparisons >= totalComparisonsRequired\\n                    }">\\n                    <strong>{{entry.num_comparisons}} / {{ totalComparisonsRequired }}</strong>\\n                </td>\\n                <td class="text-center text-success" ng-if="includeSelfEval && entry.num_self_evaluation > 0"><strong>Yes</strong></td>\\n                <td class="text-center text-danger" ng-if="includeSelfEval && entry.num_self_evaluation == 0"><strong>No</strong></td>\\n                <td class="text-center"><strong>{{entry.grade|number:0}}%</strong></td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n\'),e.put("modules/group/group-form-partial.html",\'<h1>Add Group</h1>\\n<p class="intro-text">Add a group and then add any users from your course to it. Groups can be used to <strong>filter completed student answers and comparisons into smaller subsets</strong> to help with grading.</p>\\n<ng-form name="groupForm" class="form">\\n    <fieldset>\\n        <legend>Group Details</legend>\\n        <compair-field-with-feedback form-control="groupForm.groupName">\\n            <label class="required-star" for="criterionName">Group Name</label>\\n            <input type="text" maxlength="255" ng-model="group.name" id="groupName" name="groupName" class="form-control" required/>\\n        </compair-field-with-feedback>\\n    </fieldset>\\n    <div class="text-center">\\n        <input type="submit" ng-click="groupSubmit()" class="btn btn-success btn-lg" value="Save" ng-disabled="groupForm.$invalid" />\\n    </div>\\n    <br />\\n</ng-form>\'),e.put("modules/group/group-modal-partial.html",\'<modal-cancel-button modal-instance="modalInstance" ng-show="modalInstance !== undefined"></modal-cancel-button>\\n<ng-include src="\\\'modules/group/group-form-partial.html\\\'"></ng-include>\'),e.put("modules/home/home-partial.html",\'<div class="home-screen">\\n\\n    <div class="row">\\n\\n        <div class="col-sm-4 col-lg-3">\\n            <compair-logo type="\\\'large\\\'"></compair-logo>\\n        </div>\\n\\n        <div class="col-sm-8 col-lg-9">\\n            <h1>ComPAIR Learning Application</h1>\\n            <p class="intro-text">Welcome to the ComPAIR tool! With this tool,\\n                <span ng-show="!canAddCourse">you will show your understanding of course content by answering the assignments posted by your instructor and then comparing pairs of your peers\\\' answers and offering constructive feedback on how they can improve.</span>\\n                <span ng-show="canAddCourse">you can 1) post assignments for students to answer, 2) see how students compare and offer feedback on pairs of their peers\\\' answers, and 3) give individual feedback to each student or to the class as a whole.</span>\\n            </p>\\n        </div>\\n\\n    </div>\\n\\n    <div class="row">\\n\\n        <h2 class="col-sm-6">Your courses</h2>\\n\\n        <form class="col-sm-6 search-courses text-right" role="search" ng-if="!canManageUsers && canAddCourse && (courses.length || courseFilters.search)">\\n            <input class="form-control" type="text" name="search" placeholder="Filter courses by keyword"\\n                ng-model="courseFilters.search">\\n        </form>\\n\\n        <form class="col-sm-6 search-courses text-right" role="search" ng-if="canManageUsers && canAddCourse && (courses.length || courseFilters.search || courseFilters.includeSandbox!==null)" style="padding-right:0;">\\n            <div class="input-group">\\n                <div class="input-group-btn" uib-dropdown>\\n                    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" uib-dropdown-toggle>\\n                        <span ng-show="courseFilters.includeSandbox===null">All courses</span>\\n                        <span ng-show="courseFilters.includeSandbox===false">Regular courses</span>\\n                        <span ng-show="courseFilters.includeSandbox===true">Sandbox courses</span>\\n                        <span class="caret"></span>\\n                    </button>\\n                    <ul class="dropdown-menu" role="menu">\\n                        <li><a ng-click="courseFilters.includeSandbox=null">All courses</a></li>\\n                        <li><a ng-click="courseFilters.includeSandbox=false">Regular courses</a></li>\\n                        <li><a ng-click="courseFilters.includeSandbox=true">Sandbox courses</a></li>\\n                    </ul>\\n                </div>\\n                <input class="form-control" type="text" name="search" placeholder="Filter courses by keyword"\\n                    ng-model="courseFilters.search">\\n            </div>\\n        </form>\\n    </div>\\n\\n    \\x3c!-- Course listing --\\x3e\\n    <div class="course-list" ng-if="courses.length">\\n\\n        \\x3c!-- Courses List --\\x3e\\n        <div class="row each-course" ng-class="{\\\'first-child\\\': $first}"\\n            ng-repeat="course in courses">\\n\\n            \\x3c!-- Course Display --\\x3e\\n            <div class="col-sm-9 media">\\n\\n                \\x3c!-- Course Info --\\x3e\\n                <div class="media-body">\\n\\n                    \\x3c!-- Name --\\x3e\\n                    <a ng-href="#/course/{{course.id}}/">\\n                        <h3 class="media-heading">\\n                            <i class="fa fa-book"></i>{{course.name}} &raquo;\\n                        </h3>\\n                    </a>\\n\\n                    \\x3c!-- Metadata --\\x3e\\n                    <ul class="list-inline course-metadata-list">\\n                        <course-metadata name="editLink"></course-metadata>\\n                        <course-metadata name="duplicateLink"></course-metadata>\\n                        <course-metadata name="assignmentCount"></course-metadata>\\n                        <course-metadata name="assignmentCountStudent"></course-metadata>\\n                        <course-metadata name="assignmentsToDo"></course-metadata>\\n                        <course-metadata name="noAssignmentsToDo"></course-metadata>\\n                        <course-metadata name="studentCount"></course-metadata>\\n                        <course-metadata name="courseDates"></course-metadata>\\n                        <course-metadata name="sandbox"></course-metadata>\\n                        <course-metadata name="deleteLink"></course-metadata>\\n                    </ul>\\n\\n                </div>\\n\\n            </div>\\n\\n            \\x3c!-- Assignment Actions --\\x3e\\n            <div class="col-sm-3 text-right action-btns">\\n                <course-action-button name="viewCourse"></course-action-button>\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n\\n    <div class="text-center" ng-if="courses.length">\\n        <ul uib-pagination total-items="totalNumCourses" ng-model="courseFilters.page"\\n            max-size="10" class="pagination-sm" boundary-links="true"\\n            direction-links="false" items-per-page="courseFilters.perPage"\\n            num-pages="numPages" ng-hide="numPages == 1"></ul>\\n    </div>\\n\\n    <div ng-if="!courses.length">\\n        <hr />\\n        <p ng-if="!courseFilters.search && courseFilters.includeSandbox===null">No courses currently available. <span ng-if="canAddCourse">Would you like to <a href="#/course/create">add a course</a>?</span></p>\\n        <p ng-if="!courseFilters.search && courseFilters.includeSandbox!==null">No courses found. Please try another filter above.</p>\\n        <p ng-if="courseFilters.search">No courses found for this search. Please try another search term above.</p>\\n    </div>\\n\\n</div>\\n\'),e.put("modules/login/login-partial.html",\'<div class="login-screen">\\n    <div ng-show="!showCreateUserForm">\\n        <h1 class="text-center">Welcome to ComPAIR</h1>\\n        <div class="row">\\n            <form name="loginForm" class="form col-sm-6" ng-submit="submit()" novalidate>\\n                <fieldset>\\n                    <div ng-if="AuthTypesEnabled.cas">\\n                        <h2>Log in with your CWL here:</h2>\\n                        <a id="cwl_login" href="/api/cas/login">\\n                            <img class="center-block" src="https://www.auth.cwl.ubc.ca/CWL_login_button.gif" width="76" height="25" alt="CWL Login" border="0">\\n                        </a>\\n                    </div>\\n\\n                    <hr ng-if="AuthTypesEnabled.app && AuthTypesEnabled.cas" />\\n\\n                    <div ng-show="AuthTypesEnabled.app">\\n                        <h2 ng-if="AuthTypesEnabled.cas">Or use a ComPAIR account:</h2>\\n                        <h2 ng-if="!AuthTypesEnabled.cas && !AuthTypesEnabled.demo">Log in with your ComPAIR account:</h2>\\n                        <h2 ng-if="!AuthTypesEnabled.cas && AuthTypesEnabled.demo">Select the account type you want to demo:</h2>\\n                        <p class="text-center" ng-if="AuthTypesEnabled.demo">\\n                            <a href="" ng-click="createDemoAccount(SystemRole.sys_admin)">Admin</a>\\n                            &nbsp;&nbsp;|&nbsp;&nbsp;\\n                            <a href="" ng-click="createDemoAccount(SystemRole.instructor)">Instructor</a>\\n                            &nbsp;&nbsp;|&nbsp;&nbsp;\\n                            <a href="" ng-click="createDemoAccount(SystemRole.student)">Student</a>\\n                        </p>\\n                        <hr ng-if="AuthTypesEnabled.demo" />\\n                        <p>\\n                            <a href="" ng-click="showAppLogin = !showAppLogin">\\n                                <i class="fa fa-chevron-down" ng-show="showAppLogin"></i>\\n                                <i class="fa fa-chevron-right" ng-hide="showAppLogin"></i>\\n                                <span id="app-login-toggle" ng-if="!AuthTypesEnabled.demo">Log in with existing account</span>\\n                                <span id="app-login-toggle" ng-if="AuthTypesEnabled.demo">Or log in with existing demo account</span>\\n                            </a>\\n                            <span ng-show="allowCreateUser">&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;<a href="" ng-click="showCreateUserForm = true">Create new account</a></span>\\n                        </p>\\n                        <div ng-show="showAppLogin">\\n                            <div class="form-group has-feedback"\\n                                ng-class="{\\\'has-error\\\': loginForm.username.$invalid, \\\'has-success\\\': loginForm.username.$valid}">\\n                                <label for="inputUser" class="required-star">ComPAIR Username</label>\\n                                <input type="text" id="inputUser" name="username"\\n                                    ng-model="username" required placeholder=""\\n                                    class="form-control">\\n                            </div>\\n                            <div class="form-group has-feedback"\\n                                ng-class="{\\\'has-error\\\': loginForm.password.$invalid, \\\'has-success\\\': loginForm.password.$valid}">\\n                                <label for="inputPass" class="required-star">ComPAIR Password</label>\\n                                <span ng-if="AuthTypesEnabled.demo">(Default: <i>demo</i>)</span>\\n                                <input type="password" id="inputPass" name="password" ng-model="password" required\\n                                        placeholder="" class="form-control">\\n                            </div>\\n                            <div class="alert alert-danger text-center" ng-show="login_err">Please double-check your username and password and try again.</div><br />\\n                            <input type="submit" ng-disabled="loginForm.$invalid || submitted" class="btn btn-success center-block" ng-class="" value="Log In">\\n                            <p ng-if="submitted" class="text-center" >\\n                                <i class="fa fa-spin fa-spinner"></i>\\n                                &nbsp; Logging in...\\n                            </p>\\n                        </div>\\n                    </div>\\n                </fieldset>\\n            </form>\\n            <div class="col-sm-6">\\n                <br />\\n                <h3>Trouble logging in?</h3>\\n                <p>Try the following:</p>\\n                <ul>\\n                    <li ng-if="AuthTypesEnabled.cas">If using CWL, make sure your CWL is working (log in somewhere else).</li>\\n                    <li>Confirm your registration in the course that is using this application.</li>\\n                    <li>Clear your browser cache or try a different one (supported browsers include <a href="https://www.mozilla.org/en-US/firefox/new/">Firefox</a>, <a href="http://www.google.com/chrome/">Chrome</a>, <a href="https://www.apple.com/ca/safari/">Safari</a>, and <a href="http://windows.microsoft.com/en-ca/internet-explorer/download-ie">IE9+</a>).</li>\\n                    <li>Enable Javascript and cookies in your browser settings.</li>\\n                    <li>Disable extra plugins and add-ons for your browser.</li>\\n                    <li>Contact your instructor or teaching assistant for help.</li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n    <div ng-if="showCreateUserForm">\\n        <p class="pull-right"><a href="" ng-click="$parent.showCreateUserForm = false;">Cancel</a></p>\\n        <h2 class="text-center">Create ComPAIR account</h2>\\n        <br />\\n        <p class="intro-text">Please provide the required fields below to create your ComPAIR account.</p>\\n        <login-create-user-form uses-compair-login="$parent.showComPAIRAccountFieldsCreateUserForm"></login-create-user-form>\\n    </div>\\n</div>\'),e.put("modules/lti_consumer/lti-consumer-form-partial.html",\'<h1 ng-if="method == \\\'create\\\'">Add LTI Consumer</h1>\\n<h1 ng-if="method == \\\'edit\\\'">Edit LTI Consumer</h1>\\n\\n<form name="consumerForm" class="form" ng-submit="save()" novalidate>\\n    <fieldset>\\n        <legend>Consumer Details</legend>\\n        <compair-field-with-feedback form-control="consumerForm.oauth_consumer_key">\\n            <label for="oauth_consumer_key" class="required-star">Consumer Key</label>\\n            <input class="form-control" id="oauth_consumer_key" type="text"\\n                name="oauth_consumer_key" ng-model="consumer.oauth_consumer_key"\\n                ng-minlength="10" ng-maxlength="255"\\n                required />\\n        </compair-field-with-feedback>\\n        <compair-field-with-feedback form-control="consumerForm.oauth_consumer_secret">\\n            <label for="oauth_consumer_secret" class="required-star">Consumer Secret</label>\\n            <input class="form-control" id="oauth_consumer_secret" type="text"\\n                name="oauth_consumer_secret" ng-model="consumer.oauth_consumer_secret"\\n                ng-minlength="10" ng-maxlength="255"\\n                required />\\n        </compair-field-with-feedback>\\n        <compair-field-with-feedback form-control="consumerForm.user_id_override">\\n            <label for="user_id_override">LTI User ID Override</label>\\n            <input class="form-control" id="user_id_override" type="text"\\n                name="user_id_override" ng-model="consumer.user_id_override"\\n                ng-maxlength="255" />\\n        </compair-field-with-feedback>\\n        <compair-field-with-feedback form-control="consumerForm.student_number_param">\\n            <label for="student_number_param">Student Number Param</label>\\n            <input class="form-control" id="student_number_param" type="text"\\n                name="student_number_param" ng-model="consumer.student_number_param"\\n                ng-maxlength="255" />\\n        </compair-field-with-feedback>\\n        <compair-field-with-feedback form-control="consumerForm.active" ng-if="method == \\\'edit\\\'">\\n            <input id="active" type="checkbox" ng-model="consumer.active">\\n            <label class="not-bold" for="active">Active</label>\\n        </compair-field-with-feedback>\\n    </fieldset>\\n\\n    <input type="submit" class="btn btn-success center-block btn-lg" value="Save"\\n        ng-disabled="consumerForm.$invalid || submitted" />\\n</form>\'),e.put("modules/lti_consumer/lti-consumer-view-partial.html",\'<div>\\n    <div class="pull-right">\\n        <a id="edit-profile-btn" ng-href="#/lti/consumer/{{consumer.id}}/edit" class="btn btn-primary">\\n            <i class="fa fa-edit"></i> Edit Consumer\\n        </a>\\n    </div>\\n    <h1>View LTI Consumer</h1>\\n\\n    <div class="user-details">\\n        <div class="row">\\n            <strong class="col-md-2">Launch Url:</strong>\\n            <div id="consumer_launch_url" class="col-md-10">{{ launchUrl }}</div>\\n        </div>\\n        <div class="row">\\n            <strong class="col-md-2">Consumer Key:</strong>\\n            <div id="consumer_oauth_consumer_key" class="col-md-10">{{ consumer.oauth_consumer_key }}</div>\\n        </div>\\n        <div class="row">\\n            <strong class="col-md-2">Consumer Secret:</strong>\\n            <div id="consumer_oauth_consumer_secret" class="col-md-10">\\n                <span class="spoiler">{{ consumer.oauth_consumer_secret }}</span>\\n            </div>\\n        </div>\\n        <div class="row">\\n            <strong class="col-md-2">LTI User ID Override:</strong>\\n            <div id="consumer_user_id_override" class="col-md-10">\\n                {{consumer.user_id_override}}\\n            </div>\\n        </div>\\n        <div class="row">\\n            <strong class="col-md-2">Student Number Param:</strong>\\n            <div id="student_number_param" class="col-md-10">\\n                {{consumer.student_number_param}}\\n            </div>\\n        </div>\\n        <div class="row">\\n            <strong class="col-md-2">Active:</strong>\\n            <div class="col-md-10">\\n                <input id="consumer_active" type="checkbox" ng-model="consumer.active"\\n                    ng-change="updateConsumerActive()">\\n            </div>\\n        </div>\\n        <div class="row">\\n            <strong class="col-md-2">Created:</strong>\\n            <div id="consumer_created" class="col-md-10">{{ consumer.created | amDateFormat: \\\'MMM Do, YYYY @ h:mm a\\\' }}</div>\\n        </div>\\n        <div class="row">\\n            <strong class="col-md-2">Last Modified:</strong>\\n            <div id="consumer_modified" class="col-md-10">{{ consumer.modified | amDateFormat: \\\'MMM Do, YYYY @ h:mm a\\\' }}</div>\\n        </div>\\n    </div>\\n</div>\'),e.put("modules/lti_consumer/lti-consumers-list-partial.html",\'<div class="lti-consumers-screen">\\n    <div class="row">\\n        <header class="col-md-6">\\n            <h1>Manage LTI</h1>\\n        </header>\\n        <div class="col-md-6 sub-nav">\\n            <a href="#/lti/consumer/create" class="btn btn-primary" id="create-lti-consumer-btn">\\n                <i class="fa fa-plus"></i>\\n                Add LTI Consumer\\n            </a>\\n        </div>\\n    </div>\\n\\n    <div class="row">\\n        <div class="col-md-12">\\n            <h2>LTI consumers</h2>\\n        </div>\\n    </div>\\n    <div class="table-responsive" ng-if="consumers.length">\\n        <table class="table table-striped">\\n            <thead>\\n                <tr>\\n                    <th>Actions</th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'oauth_consumer_key\\\')">Consumer Key</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'oauth_consumer_secret\\\')">LTI User ID Override</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'student_number_param\\\')">Student Number Param</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'active\\\')">Status</a>\\n                    </th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr ng-repeat="consumer in consumers">\\n                    <td class="nowrap">\\n                        <a href="#/lti/consumer/{{consumer.id}}/edit">Edit</a>\\n                    </td>\\n                    <td>\\n                        <a href="#/lti/consumer/{{consumer.id}}">{{consumer.oauth_consumer_key}}</a>\\n                    </td>\\n                    <td>\\n                        <a href="#/lti/consumer/{{consumer.id}}">{{consumer.user_id_override}}</a>\\n                    </td>\\n                    <td>\\n                        <a href="#/lti/consumer/{{consumer.id}}">{{consumer.student_number_param}}</a>\\n                    </td>\\n                    <td>\\n                        <select ng-model="consumer.active" ng-options="key for (key , value) in {\\\'Active\\\': true, \\\'Inactive\\\': false}"\\n                                ng-change="updateConsumer(consumer)">\\n                        </select>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n\\n    <div class="text-center" ng-if="consumers.length">\\n        <ul uib-pagination total-items="totalNumConsumers" ng-model="consumerFilters.page"\\n            max-size="10" class="pagination-sm" boundary-links="true"\\n            direction-links="false" items-per-page="consumerFilters.perPage"\\n            num-pages="numPages" ng-hide="numPages == 1"></ul>\\n    </div>\\n    <div ng-if="!consumers.length">\\n        <hr />\\n        <p>No consumers found. Add a <a href="#/lti/consumer/create">new consumer</a>?</p>\\n    </div>\\n\\n    <div ng-controller="LTIContextListController">\\n        <ng-include src="\\\'modules/lti_context/lti-contexts-list-partial.html\\\'"></ng-include>\\n    </div>\\n</div>\\n\'),e.put("modules/lti_context/lti-contexts-list-partial.html",\'<div class="lti-contexts-screen">\\n    <div class="row">\\n\\n        <h2 class="col-md-6">LTI links</h2>\\n\\n        <form class="col-md-6 search-contexts text-right" role="search">\\n            <input class="form-control" type="text" name="search" placeholder="Filter linked courses by keyword"\\n                ng-model="contextFilters.search">\\n        </form>\\n    </div>\\n\\n    <div class="table-responsive" ng-if="contexts.length">\\n        <table class="table table-striped">\\n            <thead>\\n                <tr>\\n                    <th>Actions</th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'oauth_consumer_key\\\')">Consumer Key</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'context_id\\\')">ID</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'context_title\\\')">Title</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'course.name\\\')">ComPAIR Course Name</a>\\n                    </th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr ng-repeat="context in contexts">\\n                    <td class="nowrap">\\n                        <a title="Unlink this context" href="" confirmation-needed="unlinkContext(context)" keyword="LTI link">\\n                            <i class="glyphicon glyphicon-trash"></i>\\n                        </a>\\n                    </td>\\n                    <td>\\n                        {{context.oauth_consumer_key}}\\n                    </td>\\n                    <td>\\n                        {{context.context_id}}\\n                    </td>\\n                    <td>\\n                        {{context.context_title}}\\n                    </td>\\n                    <td>\\n                        {{context.compair_course_name}}\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n\\n    <div class="text-center" ng-if="contexts.length">\\n        <ul uib-pagination total-items="totalNumContexts" ng-model="contextFilters.page"\\n            max-size="10" class="pagination-sm" boundary-links="true"\\n            direction-links="false" items-per-page="contextFilters.perPage"\\n            num-pages="numPages" ng-hide="numPages == 1"></ul>\\n    </div>\\n    <div ng-if="!contexts.length">\\n        <hr />\\n        <p>No course links found.\\n    </div>\\n</div>\\n\'),e.put("modules/lti/lti-setup-partial.html",""),e.put("modules/navbar/navbar-partial.html",\'<div role="navigation" bs-navbar>\\n    <div class="navbar navbar-default navbar-static-top">\\n        <div class="container-fluid">\\n            <div class="navbar-header">\\n                \\x3c!-- Button to expand menu when navbar is collapsed on small displays --\\x3e\\n                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#compair-navbar-collapse" ng-click="isCollapsed = !isCollapsed">\\n                    <span class="sr-only">Show Navigation Menu</span>\\n                    <i class="fa fa-bars"></i> Menu\\n                </button>\\n                <a class="navbar-brand" href="#/" title="ComPAIR Home"><compair-logo type="\\\'small\\\'"></compair-logo></a>\\n            </div>\\n            \\x3c!-- All elements in this div can be collapsed on small displays --\\x3e\\n            <div class="navbar-collapse" id="compair-navbar-collapse" ng-class="{collapse: isCollapsed}">\\n                <ul id="logged-in-nav-options" class="nav navbar-nav" ng-show="loggedInUser.isLoggedIn()">\\n                    <li ng-if="canManageAssignments">\\n                        <a ng-href="#/report" id="download-report-btn">\\n                            <i class="fa fa-bar-chart-o"></i>\\n                            Download Reports\\n                        </a>\\n                    </li>\\n                    <li ng-if="canCreateCourses">\\n                        <a ng-href="#/course/create" id="create-course-btn">\\n                            <i class="fa fa-plus"></i>\\n                            Add Course\\n                        </a>\\n                    </li>\\n                    <li ng-if="canCreateUsers">\\n                        <a ng-href="#/user/create" id="create-user-btn">\\n                            <i class="fa fa-user-plus"></i>\\n                            Add User\\n                        </a>\\n                    </li>\\n                    <li ng-if="canManageUsers">\\n                        <a ng-href="#/users" id="view-users-btn">\\n                            <i class="fa fa-users"></i>\\n                            Manage Users\\n                        </a>\\n                    </li>\\n                    <li ng-if="canManageUsers && AuthTypesEnabled.lti">\\n                        <a ng-href="#/lti/consumer" id="manage-lti-consumers-btn">\\n                            <i class="fa fa-cogs"></i>\\n                            Manage LTI\\n                        </a>\\n                    </li>\\n                </ul>\\n                \\x3c!-- Not Logged In Options --\\x3e\\n                <ul class="nav navbar-nav navbar-right" ng-hide="loggedInUser.isLoggedIn()">\\n                    <li id="login-btn">\\n                        <a href="" ng-click="showLogin();">Log In</a>\\n                    </li>\\n                </ul>\\n                \\x3c!-- Logged In Options --\\x3e\\n                <ul class="nav navbar-nav navbar-right" ng-if="loggedInUser.isLoggedIn()">\\n                    \\x3c!-- <li class="dropdown" id="notifications">\\n                        <a class="dropdown-toggle" data-toggle="dropdown" href="#notifications">\\n                            <i class="fa fa-envelope-o"></i>\\n                        </a>\\n                        <div notification></div>\\n                    </li> --\\x3e\\n                    <li uib-dropdown>\\n                        <a href="" id="menu-dropdown" uib-dropdown-toggle>\\n                            {{loggedInUser.displayname}} <i class=\\\'fa fa-angle-down\\\'></i>\\n                        </a>\\n                        \\x3c!-- User drop down menu --\\x3e\\n                        <ul class="dropdown-menu" aria-labelledby="menu-dropdown">\\n                            <li>\\n                                <a id="own-profile-link" href="#/user/{{loggedInUser.id}}">\\n                                    <i class="fa fa-user fa-fw"></i> Profile\\n                                </a>\\n                            </li>\\n                            <li ng-controller="LogoutController">\\n                                <a href="" ng-click="logout();" id="logout-link">\\n                                    <i class="fa fa-sign-out fa-fw"></i> Log Out\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n    <ul class="breadcrumb-trail">\\n        <li ng-repeat="breadcrumb in breadcrumbs.get()\\n            track by breadcrumb.path" ng-if="!($first && $last)">\\n            <a ng-class="{\\\'last-crumb\\\': $last}" ng-href="#{{ breadcrumb.path }}">\\n                <span ng-bind="breadcrumb.label"></span>\\n            </a>\\n            <span ng-if="!$last">&nbsp;&raquo; &nbsp;</span>\\n        </li>\\n    </ul>\\n    <ng-include src="\\\'modules/common/demo-warning-template.html\\\'"></ng-include>\\n</div>\\n\\n\'),e.put("modules/oauth/oauth-partial.html",""),e.put("modules/report/report-create-partial.html",\'<h1>Download Reports</h1>\\n\\n<p class="intro-text">Run a report for your course, then download the data as a CSV (comma-separated values) file. You can run reports for the course as a whole or for individual assignments. To run a full course report, select "All Assignments" from the assignment drop-down below.</p>\\n<p class="intro-text"><strong>To see class participation without downloading a report:</strong> Access your course page, click any assignment, and select the "Participation" tab.</p>\\n\\n<form name="reportForm" class="form" ng-submit="reportSubmit()" novalidate>\\n    <fieldset>\\n        <legend>Report Details</legend>\\n        <div class="form-group">\\n            <label for="reportCourseId" class="required-star">Course</label>\\n            <select class="form-control" ng-model="report.course_id" name="reportCourseId" ng-change="getAssignments()"\\n                    ng-options="c.id as c.name for c in courses | orderBy: \\\'name\\\'" required>\\n                <option value="">- Select course -</option>\\n            </select>\\n        </div>\\n        <div class="form-group" ng-if="groups.length > 0">\\n            <label for="reportGroup" class="required-star">Student Group</label>\\n            <select class="form-control" ng-model="report.group_name" name="reportCourseId" ng-change="changeReport()"\\n                    ng-options="g.value as g.name for g in groups" required>\\n                <option value="">- Select group -</option>\\n            </select>\\n        </div>\\n        <div class="form-group">\\n            <label for="reportType" class="required-star">Report Type</label>\\n            <select class="form-control" ng-model="report.type" name="reportType" required\\n                    ng-options="t.id as t.name for t in types" ng-change="changeReport()">\\n                <option value="">- Select report -</option>\\n            </select>\\n        </div>\\n        <div class="form-group">\\n            <label for="reportAssignment" class="required-star">Assignment</label>\\n            <select class="form-control" ng-disabled="assignments.length < 1" ng-model="report.assignment" name="reportAssignment"\\n                    ng-options="a.id as a.name for a in assignments" ng-change="changeReport()" required>\\n                <option value="">- Select assignment -</option>\\n            </select>\\n        </div>\\n    </fieldset>\\n    <div class="alert alert-success text-center" ng-show="reportFile">\\n        <p class="h4">Report Complete</p>\\n        <p>Your report is ready for <strong><a href="{{ reportFile }}">download <i class="fa fa-file-excel-o"></i></a></strong> now.</p>\\n        <p>Run <a href="" ng-click="changeReport()">another report</a>?</p>\\n        <br />\\n    </div>\\n    <input type="submit" class="btn btn-success btn-lg center-block" value="Run" ng-disabled="reportForm.$invalid || submitted" ng-show="!reportFile"/>\\n</form>\'),e.put("modules/rich-content/rich-content-attachment-modal-template.html",\'<modal-cancel-button modal-instance="modalInstance" ng-show="modalInstance !== undefined"></modal-cancel-button>\\n<h1 ng-if="downloadName">{{downloadName}}</h1>\\n<div class="each-attachment-content">\\n    <ng-include src="\\\'modules/rich-content/rich-content-attachment-template.html\\\'"></ng-include>\\n</div>\'),e.put("modules/rich-content/rich-content-attachment-template.html",\'<p ng-if="(content.type == \\\'kaltura_video\\\' || content.type == \\\'kaltura_audio\\\') && content.show_recent_warning === true" class="intro-text bg-warning text-warning alert">\\n    <i class="fa fa-warning"></i>\\n    This <span ng-if="content.type == \\\'kaltura_video\\\'">video</span><span ng-if="content.type == \\\'kaltura_audio\\\'">audio</span> was uploaded recently. It may take a short while for the server to process it.\\n</p>\\n<div ng-if="content.type == \\\'kaltura_video\\\'" class="embed-responsive embed-responsive-16by9">\\n    <kaltura-player id="{{content.id}}_{{modalInstance ? \\\'modal\\\' : \\\'inline\\\'}}" base-url="{{content.service_url}}" video="content.kalturaAttributes" class="content-item embed-responsive-item"></kaltura-player>\\n</div>\\n<div ng-if="content.type == \\\'kaltura_audio\\\'">\\n    <kaltura-player id="{{content.id}}_{{modalInstance ? \\\'modal\\\' : \\\'inline\\\'}}" base-url="{{content.service_url}}" width="100%" height="90px" video="content.kalturaAttributes" class="content-item"></kaltura-player>\\n</div>\\n<div ng-if="content.type == \\\'pdf\\\'" class="embed-responsive embed-responsive-pdf">\\n    <iframe src="{{content.url}}" class="content-item embed-responsive-item"></iframe>\\n</div>\\n<div ng-if="content.type == \\\'image\\\'">\\n    <img ng-src="{{content.url}}" ng-alt="{{content.title}}" class="content-item" />\\n</div>\\n<div ng-if="content.type == \\\'video\\\'" class="embed-responsive embed-responsive-16by9">\\n    <video ng-src="{{content.url}}" controls class="content-item embed-responsive-item"></video>\\n</div>\\n<div ng-if="content.type == \\\'audio\\\'">\\n    <audio ng-src="{{content.url}}" controls class="content-item"></audio>\\n</div>\'),e.put("modules/rich-content/rich-content-embeddable-modal-template.html",\'<modal-cancel-button modal-instance="modalInstance" ng-show="modalInstance !== undefined"></modal-cancel-button>\\n<h1 ng-if="downloadName">{{downloadName}}</h1>\\n<div class="each-embeddable-content">\\n    <ng-include src="\\\'modules/rich-content/rich-content-embeddable-template.html\\\'"></ng-include>\\n</div>\'),e.put("modules/rich-content/rich-content-embeddable-template.html",\'<div ng-if="content.type == \\\'pdf\\\'" class="embed-responsive embed-responsive-pdf">\\n    <div ng-bind-html="content.embed"></div>\\n</div>\\n<div ng-if="content.type == \\\'image\\\'">\\n    <img ng-src="{{content.url}}" ng-alt="{{content.title}}" class="content-item" />\\n</div>\\n<div ng-if="content.type == \\\'video\\\'" class="embed-responsive embed-responsive-16by9">\\n    <video ng-src="{{content.url}}" controls class="content-item embed-responsive-item"></video>\\n</div>\\n<div ng-if="content.type == \\\'audio\\\'">\\n    <audio ng-src="{{content.url}}" controls class="content-item"></audio>\\n</div>\\n<div ng-if="content.type == \\\'youtube\\\'" class="embed-responsive embed-responsive-16by9">\\n    <div ng-bind-html="content.embed"></div>\\n</div>\\n<div ng-if="content.type == \\\'vimeo\\\'" class="embed-responsive embed-responsive-16by9">\\n    <div ng-bind-html="content.embed"></div>\\n</div>\\n<div ng-if="content.type == \\\'soundCloud\\\'">\\n    <div ng-bind-html="content.embed"></div>\\n</div>\\n<div ng-if="content.type == \\\'spotify\\\'">\\n    <div ng-bind-html="content.embed"></div>\\n</div>\\n<div ng-if="content.type == \\\'twitter\\\'">\\n    <div twttr="{{content}}" ng-bind-html="content.embed" class="twttr-content-item"></div>\\n</div>\'),e.put("modules/rich-content/rich-content-template.html",\'<div dynamic-rich-content="richContent" class="rich-content content"></div>\\n\\n<div ng-if="attachmentContent.length > 0" class="rich-content-attachments">\\n    <strong class="h5">{{attachmentContent.length}} Attachment<span ng-if="attachmentContent.length > 1">s</span>:</strong>\\n    <div class="each-attachment-content" ng-repeat="content in attachmentContent">\\n        <p ng-if="content.type != \\\'attachment\\\'">\\n            <a href="" ng-click="showAttachmentContentModal(content)" ng-if="content.type != \\\'attachment\\\'"\\n               class="btn btn-info btn-xs">\\n                Open in Pop-up\\n            </a> or\\n            <br />\\n            <a href="" ng-click="toggleShowContent(content)" ng-if="content.type != \\\'attachment\\\'">\\n                <i class="fa fa-chevron-right" ng-show="!content.displayInline"></i>\\n                <i class="fa fa-chevron-down" ng-show="content.displayInline"></i>\\n                Show below\\n            </a>\\n        </p>\\n        <p ng-if="content.type == \\\'attachment\\\'">\\n            <a ng-href="{{content.url}}" target="_blank" class="btn btn-info">\\n                Download\\n            </a>\\n        </p>\\n\\n        \\x3c!-- This embed content should only load when visible --\\x3e\\n        <div ng-if="content.displayInline">\\n            <ng-include src="\\\'modules/rich-content/rich-content-attachment-template.html\\\'"></ng-include>\\n        </div>\\n        <hr ng-show="!$last && content.displayInline" />\\n    </div>\\n</div>\'),e.put("modules/route/route-error-partial.html",\'<div class="row" ng-if="$root.routeResolveLoadError">\\n    <div class="alert alert-danger col-md-6 col-md-offset-3" role="alert">\\n        <p>\\n            <strong ng-if="$root.routeResolveLoadError.data.title">{{$root.routeResolveLoadError.data.title}}</strong>\\n            <strong ng-if="!$root.routeResolveLoadError.data.title">{{$root.routeResolveLoadError.statusText}}</strong>\\n        </p>\\n        <p ng-if="$root.routeResolveLoadError.data.message">{{$root.routeResolveLoadError.data.message}}</p>\\n    </div>\\n</div>\'),e.put("modules/user/user-create-partial.html",\'<div>\\n    <h1>Add User</h1>\\n    <p class="intro-text">You can create individual users in the application here. To create and enrol multiple users in a course at the same time (for courses with manual management of users), it is faster to use the "Import Users" option found inside an individual course.</p>\\n    <ng-include src="\\\'modules/user/user-form-partial.html\\\'"></ng-include>\\n</div>\\n\'),e.put("modules/user/user-edit-partial.html","<div>\\n    <h1>Edit User</h1>\\n    <ng-include src=\\"\'modules/user/user-form-partial.html\'\\"></ng-include>\\n</div>\\n"),e.put("modules/user/user-form-partial.html",\'<form name="userForm" class="form" ng-submit="save()" novalidate>\\n    <fieldset>\\n        <legend>User Details</legend>\\n        <p class="instructional-text" ng-if="canManageUsers">\\n            This application provides three user roles with increasing levels of permission.\\n            <strong>Students</strong> can manage their own answers, comparisons, comments, and replies.\\n            <strong>Instructors</strong> can additionally manage their own courses and assignments and edit users in their courses.\\n            <strong>System Administrators</strong> can additionally manage users and manage which users can access which courses.</p>\\n        <div class="form-group" ng-if="canManageUsers">\\n            <label for="system_role" class="required-star">Application Role </label>\\n            <select class="form-control" id="system_role" name="system_role"\\n                ng-model="user.system_role" required\\n                ng-options="system_role as system_role for system_role in system_roles"></select>\\n        </div>\\n        <compair-field-with-feedback form-control="userForm.displayName">\\n            <label for="displayName" class="required-star">Display Name</label>\\n            <input class="form-control" id="displayName" type="text"\\n                name="displayName" ng-model="user.displayname"\\n                required placeholder="the name you want others to see"\\n                ng-disabled="loggedInUserIsStudent && !UserSettings.allow_student_change_display_name" />\\n        </compair-field-with-feedback>\\n        <compair-field-with-feedback form-control="userForm.firstName">\\n            <label for="firstName">First Name </label>\\n            <input class="form-control" id="firstName" type="text"\\n                name="firstName" ng-model="user.firstname"\\n                ng-disabled="loggedInUserIsStudent && !UserSettings.allow_student_change_name" />\\n        </compair-field-with-feedback>\\n        <compair-field-with-feedback form-control="userForm.lastName">\\n            <label for="lastName">Last Name </label>\\n            <input class="form-control" id="lastName" type="text"\\n                name="lastName" ng-model="user.lastname"\\n                ng-disabled="loggedInUserIsStudent && !UserSettings.allow_student_change_name" />\\n        </compair-field-with-feedback>\\n        <compair-field-with-feedback form-control="userForm.student_number" ng-if="user.system_role == SystemRole.student">\\n            <label for="student_number">Student Number </label>\\n            <input class="form-control" id="student_number" type="text"\\n                name="student_number" ng-model="user.student_number"\\n                ng-disabled="loggedInUserIsStudent && !UserSettings.allow_student_change_student_number" />\\n        </compair-field-with-feedback>\\n        <compair-field-with-feedback form-control="userForm.email" ng-if="canManageUsers || UserSettings.expose_email_to_instructor || user.id == loggedInUser.id">\\n            <label for="email">Email </label>\\n            <input class="form-control" id="email" type="email"\\n                name="email" ng-model="user.email"\\n                ng-disabled="loggedInUserIsStudent && !UserSettings.allow_student_change_email" />\\n        </compair-field-with-feedback>\\n        <compair-field-with-feedback form-control="userForm.email_notification_method" ng-if="(canManageUsers || UserSettings.expose_email_to_instructor || user.id == loggedInUser.id) && UserSettings.notifications">\\n            <input type="checkbox" ng-show="!user.email" disabled />\\n            <input id="email_notification_method" type="checkbox" ng-model="user.email_notification_method" ng-show="user.email"\\n                ng-true-value="\\\'{{EmailNotificationMethod.enable}}\\\'" ng-false-value="\\\'{{EmailNotificationMethod.disable}}\\\'">\\n            <label class="not-bold" for="email_notification_method" ng-class="{\\\'text-muted\\\': !user.email}">Receive email notifications from ComPAIR about assignments</label>\\n        </compair-field-with-feedback>\\n    </fieldset>\\n\\n    <fieldset ng-if="(canManageUsers || user.uses_compair_login) && AuthTypesEnabled.app">\\n        <legend>ComPAIR Login</legend>\\n        <p class="instructional-text">\\n            This information will set the <strong>ComPAIR username <span ng-if="method == \\\'create\\\'">and password</span></strong> for logging in without an external login (like CWL).\\n            The username you set does not appear anywhere to other users in the application but does need to be unique.\\n        </p>\\n        <compair-field-with-feedback form-control="userForm.username">\\n            <label for="username" class="required-star">ComPAIR Username </label>\\n            <input class="form-control" id="username" type="text"\\n                name="username" ng-model="user.username"\\n                ng-required="user.uses_compair_login" />\\n        </compair-field-with-feedback>\\n        <div ng-if="method == \\\'create\\\'">\\n            <compair-field-with-feedback form-control="userForm.password">\\n                <label for=password" class="required-star">ComPAIR Password </label>\\n                <input class="form-control" id="password" type="password"\\n                    name="password" ng-model="user.password" required />\\n            </compair-field-with-feedback>\\n            <compair-field-with-feedback form-control="userForm.verifyPassword">\\n                <label for=verifyPassword" class="required-star">Verify Password </label>\\n                <input class="form-control" id="verifyPassword" type="password"\\n                    name="verifyPassword" ng-model="user.verifyPassword"\\n                    required pw-match="password" />\\n            </compair-field-with-feedback>\\n        </div>\\n        <div ng-if="method != \\\'create\\\' && ((ownProfile || canManageUsers) && user.uses_compair_login)">\\n            <label>ComPAIR Password </label>\\n            <p><a id="change-password-btn" class="btn btn-sm btn-primary" ng-click="showPasswordModal()"><i class="fa fa-edit" aria-hidden="true"></i> Edit Password</a></p>\\n        </div>\\n\\n    </fieldset>\\n    <input type="submit" class="btn btn-success center-block btn-lg" value="Save"\\n        ng-disabled="userForm.$invalid || submitted" />\\n</form>\'),e.put("modules/user/user-list-partial.html",\'<div class="users-screen">\\n    <div class="row">\\n        <h1 class="col-sm-8">Manage Users</h1>\\n\\n        <form class="col-sm-4 search-users text-right" role="search" ng-show="canManageUsers && (users.length || userFilters.search)">\\n            <div class="form-group">\\n                <input class="form-control" type="text" name="search" placeholder="Filter users by keyword"\\n                       ng-model="userFilters.search">\\n            </div>\\n        </form>\\n    </div>\\n\\n    <div class="table-responsive" ng-if="users.length">\\n        <table class="table table-striped">\\n            <thead>\\n                <tr>\\n                    <th>Actions</th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'displayname\\\')">Display Name</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'firstname\\\')">First Name</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'lastname\\\')">Last Name</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'student_number\\\')">Student Number</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'email\\\')">Email</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'system_role\\\')">System Role</a>\\n                    </th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr ng-repeat="user in users">\\n                    <td class="nowrap">\\n                        <a href="#/user/{{user.id}}/edit" target="_blank">Edit</a>\\n                        <span>&nbsp;|&nbsp;</span>\\n                        <a href="#/users/{{user.id}}/manage">Courses & Accounts</a>\\n                    </td>\\n                    <td><i class="fa fa-user"></i> {{user.displayname}}</td>\\n                    <td>{{user.firstname}}</td>\\n                    <td>{{user.lastname}}</td>\\n                    <td>{{user.student_number}}</td>\\n                    <td>{{user.email}}</td>\\n                    <td>\\n                        {{ user.system_role }}\\n                        \\x3c!--\\n                        <select ng-if="user.system_role != SystemRole.sys_admin" ng-model="user.system_role"\\n                                ng-options="system_role as system_role for system_role in system_roles"\\n                                ng-change="updateUser(user)"></select>\\n                        <span ng-if="user.system_role == SystemRole.sys_admin">{{ user.system_role }}</span>\\n                        --\\x3e\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n\\n    <div class="text-center" ng-if="users.length">\\n        <ul uib-pagination total-items="totalNumUsers" ng-model="userFilters.page"\\n            max-size="10" class="pagination-sm" boundary-links="true"\\n            direction-links="false" items-per-page="userFilters.perPage"\\n            num-pages="numPages" ng-hide="numPages == 1"></ul>\\n    </div>\\n\\n    <div ng-if="!users.length">\\n        <hr />\\n        <p ng-if="!userFilters.search">No users found.</p>\\n        <p ng-if="userFilters.search">No users found for this search. Please try another search term above.</p>\\n    </div>\\n\\n</div>\\n\'),e.put("modules/user/user-manage-partial.html",\'<div class="user-manage-screen">\\n\\n    <h1>{{ user.displayname }}\\\'s Courses & Accounts</h1>\\n\\n    <br><br>\\n\\n    <div class="row">\\n\\n        <h2 class="col-sm-6">Courses</h2>\\n        <form class="col-sm-6 search-courses text-right" role="search" ng-if="courses.length || courseFilters.search || courseFilters.includeSandbox!==null">\\n            <div class="input-group">\\n                <div class="input-group-btn" uib-dropdown>\\n                    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" uib-dropdown-toggle>\\n                        <span ng-show="courseFilters.includeSandbox===null">All courses</span>\\n                        <span ng-show="courseFilters.includeSandbox===false">Regular courses</span>\\n                        <span ng-show="courseFilters.includeSandbox===true">Sandbox courses</span>\\n                        <span class="caret"></span>\\n                    </button>\\n                    <ul class="dropdown-menu" role="menu">\\n                        <li><a ng-click="courseFilters.includeSandbox=null">All courses</a></li>\\n                        <li><a ng-click="courseFilters.includeSandbox=false">Regular courses</a></li>\\n                        <li><a ng-click="courseFilters.includeSandbox=true">Sandbox courses</a></li>\\n                    </ul>\\n                </div>\\n                <input class="form-control" type="text" name="search" placeholder="Filter courses by keyword"\\n                    ng-model="courseFilters.search">\\n            </div>\\n        </form>\\n    </div>\\n\\n    <div class="table-responsive" ng-if="courses.length">\\n        <table class="table table-striped">\\n            <thead>\\n                <tr>\\n                    <th>Actions</th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'name\\\')">Name</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'year\\\')">Year</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'term\\\')">Term</a>\\n                    </th>\\n                    <th>Course Status</th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'course_role\\\')">Course Role</a>\\n                    </th>\\n                    <th>\\n                        <a href="" ng-click="updateTableOrderBy(\\\'group_name\\\')">Group</a>\\n                    </th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr ng-repeat="course in courses">\\n                    <td class="nowrap">\\n                        <a href="" confirmation-needed="dropCourse(course)" keyword="user" ng-if="loggedInUserId != user.id || canManageUsers">Drop</a>\\n                    </td>\\n                    <td><a ng-href="#/course/{{course.id}}"><i class="fa fa-book"></i> {{course.name}}</a></td>\\n                    <td>{{course.year}}</td>\\n                    <td>{{course.term}}</td>\\n                    <td>\\n                        <span ng-if="course.sandbox">Sandbox course</span>\\n                        <span ng-if="course.before_start && !course.sandbox">Not yet started</span>\\n                        <span ng-if="course.completed && !course.sandbox">Completed</span>\\n                        <span ng-if="course.in_progress && !course.sandbox">Currently in progress</span>\\n                    <td>\\n                        <select ng-model="course.course_role"\\n                                ng-options="course_role as course_role for course_role in course_roles"\\n                                ng-change="updateRole(course)"></select>\\n                    </td>\\n                    <td>\\n                        <select ng-model="course.group_name"\\n                                ng-options="g as g for g in course.groups"\\n                                ng-change="updateGroup(course)"\\n                                ng-if="course.groups.length">\\n                            <option value="">- None -</option>\\n                        </select>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n\\n    <div class="text-center" ng-if="courses.length">\\n        <ul uib-pagination total-items="totalNumCourses" ng-model="courseFilters.page"\\n            max-size="10" class="pagination-sm" boundary-links="true"\\n            direction-links="false" items-per-page="courseFilters.perPage"\\n            num-pages="numPages" ng-hide="numPages == 1"></ul>\\n    </div>\\n\\n    <div ng-if="!courses.length">\\n        <hr />\\n        <p ng-if="!courseFilters.search && courseFilters.includeSandbox===null">No courses found. Select <a href="#/users">another user</a>?</p>\\n        <p ng-if="!courseFilters.search && courseFilters.includeSandbox!==null">No courses found. Select <a href="#/users">another user</a> or try another filter above.</p>\\n        <p ng-if="courseFilters.search">No courses found for this search. Please try another search term above.</p>\\n    </div>\\n\\n    <br>\\n\\n    <div ng-if="AuthTypesEnabled.lti">\\n\\n        <div class="row">\\n            <h2 class="col-sm-12">LTI account links</h2>\\n        </div>\\n\\n        <div class="table-responsive" ng-if="lti_users.length">\\n            <table class="table table-striped">\\n                <thead>\\n                    <tr>\\n                        <th>Actions</th>\\n                        <th>Consumer Key</th>\\n                        <th>ID</th>\\n                        <th>Full Name</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr ng-repeat="lti_user in lti_users">\\n                        <td class="nowrap">\\n                            <a title="Unlink this LTI account" href="" confirmation-needed="unlinkLTI(lti_user)" keyword="LTI account link" class="delete-lti-user" ng-if="canManageUsers">\\n                                <i class="glyphicon glyphicon-trash"></i>\\n                            </a>\\n                        </td>\\n                        <td>{{lti_user.oauth_consumer_key}}</td>\\n                        <td>{{lti_user.lti_user_id}}</td>\\n                        <td>{{lti_user.lis_person_name_full}}</td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n\\n        <div ng-if="!lti_users.length">\\n            <p><br>This user does not have any LTI account links</p>\\n        </div>\\n\\n        <br><br>\\n\\n    </div>\\n\\n    <div ng-if="AuthTypesEnabled.cas">\\n\\n        <div class="row">\\n            <h2 class="col-sm-12">CWL account links</h2>\\n        </div>\\n\\n        <div class="table-responsive" ng-if="third_party_users.length">\\n            <table class="table table-striped">\\n                <thead>\\n                    <tr>\\n                        <th>Actions</th>\\n                        <th>Type</th>\\n                        <th>ID</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr ng-repeat="third_party_user in third_party_users">\\n                        <td class="nowrap">\\n                            <a title="unlink this CWL account" href="" confirmation-needed="deleteThirdPartyUser(third_party_user)" keyword="CWL account link" class="delete-third-party-user" ng-if="canManageUsers">\\n                                <i class="glyphicon glyphicon-trash"></i>\\n                            </a>\\n                        </td>\\n                        <td>{{third_party_user.third_party_type}}</a></td>\\n                        <td>{{third_party_user.unique_identifier}}</td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n\\n        <div ng-if="!third_party_users.length">\\n            <p><br>This user does not have any CWL account links</p>\\n        </div>\\n\\n        <br><br>\\n\\n    </div>\\n\\n</div>\\n\'),e.put("modules/user/user-password-modal-partial.html",\'<modal-cancel-button modal-instance="modalInstance" ng-show="modalInstance !== undefined"></modal-cancel-button>\\n<ng-include src="\\\'modules/user/user-password-partial.html\\\'"></ng-include>\\n\'),e.put("modules/user/user-password-partial.html",\'<h1>Edit Password</h1>\\n<form name="changePasswordForm" class="form" ng-submit="changePassword()" novalidate>\\n    <fieldset>\\n        <legend>Password Details</legend>\\n        <compair-field-with-feedback form-control="changePasswordForm.oldpassword" ng-if="ownProfile || !canManageUsers">\\n            <label for="oldpassword" class="required-star">Old Password</label>\\n            <input class="form-control" id="oldpassword" type="password"\\n                name="oldpassword" ng-model="password.oldpassword"\\n                required />\\n        </compair-field-with-feedback>\\n        <compair-field-with-feedback form-control="changePasswordForm.newpassword">\\n            <label for="newpassword" class="required-star">New Password</label>\\n            <input class="form-control" id="newpassword" type="password"\\n                name="newpassword" ng-model="password.newpassword"\\n                required />\\n        </compair-field-with-feedback>\\n        <compair-field-with-feedback form-control="changePasswordForm.verifypassword">\\n            <label for="verifypassword" class="required-star">Verify Password</label>\\n            <input class="form-control" id="verifypassword" type="password"\\n                name="verifypassword" ng-model="password.verifypassword"\\n                required pw-match="newpassword" />\\n        </compair-field-with-feedback>\\n    </fieldset>\\n    <input type="submit" class="btn btn-success center-block btn-lg" value="Save"\\n        ng-disabled="changePasswordForm.$invalid || submitted">\\n</form>\'),e.put("modules/user/user-view-partial.html",\'<div>\\n    <div class="pull-right" ng-if="canManageUsers || showEditButton.available || ownProfile">\\n        <a id="edit-profile-btn" ng-href="#/user/{{user.id}}/edit" class="btn btn-primary">\\n            <i class="fa fa-edit"></i> Edit User\\n        </a>\\n    </div>\\n    <h1><i class="fa fa-user"></i> {{user.displayname}}\\\'s Profile</h1>\\n    <p ng-if="!(canManageUsers || loggedInUserIsInstructor) && ownProfile" class="intro-text">Instructors can always see your complete profile information, if you are enrolled in their ComPAIR course. Students can only see your display name, anonymous icon, and the last time you logged in. To make yourself fully anonymous to other students, click the "Edit" button and change what appears in the "Display Name" field.</p>\\n    <p ng-if="canManageUsers || loggedInUserIsInstructor" class="intro-text">Instructors can always see complete student profile information, if the student is enrolled in their ComPAIR course. Students can only see each other\\\'s display name, anonymous icon, and the last time a student logged in. To ensure student anonymity, have your students check what appears as their display name. (To edit student information in bulk, use the "Manage Users" option found on the course page.)</p>\\n    <p ng-if="(canManageUsers || loggedInUserIsInstructor) && ownProfile" class="intro-text">Instructors may use personalized icons, which can be added and managed through <a href="https://en.gravatar.com/">Gravatar</a>.</p>\\n    <hr>\\n    <div class="col-md-3 gravatar-img">\\n        <a ng-if="canManageUsers || loggedInUserIsInstructor" href="https://en.gravatar.com/" title="Add or edit your user image with Gravatar">\\n           <img id="user_avatar" class="media-object" src="//www.gravatar.com/avatar/{{user.avatar}}?s=200&d=retro">\\n        </a>\\n        <img ng-if="!(canManageUsers || loggedInUserIsInstructor)" id="user_avatar" class="media-object" src="//www.gravatar.com/avatar/{{user.avatar}}?s=200&d=retro">\\n    </div>\\n    <div class="col-md-9 user-details">\\n        <div class="row">\\n            <strong class="col-md-3">Display Name:</strong>\\n            <div id="user_displayname" class="col-md-9">{{ user.displayname }}</div>\\n        </div>\\n\\t    <div class="row" ng-if="canManageUsers || loggedInUserIsInstructor || ownProfile">\\n            <strong class="col-md-3">Name:</strong>\\n            <div id="user_fullname" class="col-md-9">{{ user.fullname }}</div>\\n        </div>\\n\\t    <div class="row" ng-if="(canManageUsers || loggedInUserIsInstructor || ownProfile) && user.system_role == SystemRole.student">\\n            <strong class="col-md-3">Student Number:</strong>\\n            <div id="user_student_number"  class="col-md-9">{{ user.student_number }}</div>\\n        </div>\\n        <div class="row" ng-if="canManageUsers || (UserSettings.expose_email_to_instructor && showEditButton.available) || ownProfile">\\n            <strong class="col-md-3">Email:</strong>\\n            <div id="user_email"  class="col-md-9">{{ user.email }}</div>\\n        </div>\\n        <div class="row" ng-if="UserSettings.notifications && (canManageUsers || (UserSettings.expose_email_to_instructor && showEditButton.available) || ownProfile)">\\n            <strong class="col-md-3">Notifications:</strong>\\n\\t\\t    <div class="col-md-9" ng-show="!user.email">N/A</div>\\n\\t\\t    <div id="user_email_notification_method" class="col-md-9" ng-show="user.email">\\n                <input id="email_notification_method" type="checkbox" ng-model="user.email_notification_method" ng-disabled="!user.email || submitted"\\n                    ng-true-value="\\\'{{EmailNotificationMethod.enable}}\\\'" ng-false-value="\\\'{{EmailNotificationMethod.disable}}\\\'"\\n                    ng-change="updateNotificationSettings()">\\n                Receive email notifications from ComPAIR about assignments\\n            </div>\\n        </div>\\n\\t    <div class="row" ng-if="(canManageUsers || loggedInUserIsInstructor || ownProfile) && user.uses_compair_login">\\n            <strong class="col-md-3">Username:</strong>\\n            <div id="user_username" class="col-md-9">{{ user.username }}</div>\\n        </div>\\n\\t    <div class="row" ng-if="canManageUsers || loggedInUserIsInstructor || ownProfile">\\n            <strong class="col-md-3">Application Role:</strong>\\n            <div id="user_system_role" class="col-md-9">{{ user.system_role }}</div>\\n        </div>\\n        <div class="row">\\n            <strong class="col-md-3">Last Online:</strong>\\n            <div id="user_last_online" ng-show="user.last_online" class="col-md-9">{{ user.last_online | amDateFormat: \\\'MMM Do, YYYY @ h:mm a\\\' }}</div>\\n        </div>\\n        \\x3c!-- <div class="row">\\n            <strong class="col-md-3">Created On:</strong>\\n            <div class="col-md-9">{{user.created}}</div>\\n        </div> --\\x3e\\n    </div>\\n</div>\\n\')}]),CKEDITOR.plugins.add("combinedmath",{requires:"widget",icons:"combinedmath",init:function(e){var a=this.path;CKEDITOR.dialog.add("combinedmath",this.path+"dialogs/combinedmath.js"),e.widgets.add("combinedmath",{button:"Create a math expression",template:\'<span class="combinedmath"></span> \',allowedContent:"span(combinedmath);",requiredContent:"span(combinedmath)",dialog:"combinedmath",parts:{span:"span"},mask:!0,upcast:function(e,n){var t="span"==e.name&&e.hasClass("combinedmath");if(t){var s=e.getHtml();"`"==s.charAt(0)?(n.mode="ascii",s=s.replace(/`/g,"")):(n.mode="tex",s=(s=s.replace(/\\\\\\(/g,"")).replace(/\\\\\\)/g,"")),n.mathexp=s}return t},downcast:function(e){var n=e.getFirst().getHtml();return e.setHtml(n),e},data:function(){if(this.data.mathexp){this.element.setText("");var e=this.data.mathexp;e="ascii"==this.data.mode?"`"+e+"`":"\\\\("+e+"\\\\)";var n=new CKEDITOR.dom.element("iframe"),t=encodeURIComponent(e);n.setAttribute("src",a+"iframe/mathjax.html?mathexp="+t),n.setAttribute("frameborder",0),n.setAttribute("border",0),n.setStyle("height","0"),n.setStyle("width","0"),this.element.setStyle("display","inline-block");var s=new CKEDITOR.dom.element("span");s.setStyle("display","none"),s.setText(e),this.element.append(s),this.element.append(n)}},init:function(){this.setData("mode","ascii")}})}}),CKEDITOR.dialog.add("combinedmath",function(e){var n=function(e){var n=!1,t=!1,s=function(){n?(n=!1,setTimeout(s,1e3)):(t=!1,e.refreshPreview(e.getInputElement().getValue()))};e.getInputElement().on("keyup",function(){t?n=!0:(t=!0,setTimeout(s,1e3))})},t=function(e,n,t){var s=e.getDialog().getContentElement(n,n+"preview").getInputElement();s.setText("`"+t+"`"),MathJax.Hub.Queue(["Typeset",MathJax.Hub,s.$])};return{title:"Edit Math Expression",minWidth:200,minHeight:100,contents:[{id:"asciimath",label:"ASCII Math Entry",elements:[{id:"equation-asciimath",type:"textarea",label:"Enter your math expression:",onLoad:function(){n(this)},refreshPreview:function(e){t(this,"asciimath",e)},setMathexp:function(e){this.setValue(e),this.refreshPreview(e)},setup:function(e){e.data.mathexp&&"ascii"==e.data.mode&&this.setMathexp(e.data.mathexp)},commit:function(e){this.isVisible()&&(e.setData("mode","ascii"),e.setData("mathexp",this.getValue()))}},{type:"button",id:"asciimathExampleBtn",label:"Load Example",onClick:function(){asciimathElem=this.getDialog().getContentElement("asciimath","equation-asciimath"),asciimathElem.setMathexp("a^2+b^2=c^2"),asciimathElem.focus()}},{id:"asciimathpreviewLabel",type:"html",html:"<label>Preview:</label>"},{id:"asciimathpreview",type:"html",html:"<div style=\'text-align:center\'></div>"},{id:"asciimathinstructions",type:"html",html:"<label>ASCII Math Help:</label><p>AsciiMath is an easy-to-write markup language for mathematics.</p><p>The best way to learn is by looking at <a href=\'http://math.chapman.edu/~jipsen/mathml/asciimathjax.html\' target=\'_blank\' style=\'color: blue\'>some examples</a>.</p><p>There is a short description of the <a href=\'http://asciimath.org/#syntax\' target=\'_blank\' style=\'color: blue\'>syntax and list of symbols</a>. </p>"}]},{id:"texmath",label:"LaTeX Math Entry",elements:[{id:"equation-texmath",type:"textarea",label:"Enter your math expression:",onLoad:function(){n(this)},refreshPreview:function(e){t(this,"texmath",e)},setMathexp:function(e){this.setValue(e),this.refreshPreview(e)},setup:function(e){e.data.mathexp&&"tex"==e.data.mode&&(this.setMathexp(e.data.mathexp),this.selectParentTab(),this.focus())},commit:function(e){this.isVisible()&&(e.setData("mode","tex"),e.setData("mathexp",this.getValue()))}},{type:"button",id:"texmathExampleBtn",label:"Load Example",onClick:function(){texmathElem=this.getDialog().getContentElement("texmath","equation-texmath"),texmathElem.setMathexp("\\\\frac{d}{dx} \\\\int_{a}^{x}f(s) ds = f(x)"),texmathElem.focus()}},{id:"texmathpreviewLabel",type:"html",html:"<label>Preview:</label>"},{id:"texmathpreview",type:"html",html:"<div style=\'text-align:center\'></div>"},{id:"texmathinstructions",type:"html",html:"<label>TeX Math Help:</label><p>For advanced users, math expressions can be entered using LaTeX.</p><p>For an introduction to LaTeX math entry, <a style=\'color: blue\' href=\'http://en.wikibooks.org/wiki/LaTeX/Mathematics\' target=\'_blank\'>click here</a>.</p>"}]}]}}),function(){var e=angular.module("ubc.ctlt.compair.answer",["ngResource","timer","ui.bootstrap","localytics.directives","ubc.ctlt.compair.classlist","ubc.ctlt.compair.common.xapi","ubc.ctlt.compair.common.form","ubc.ctlt.compair.common.interceptor","ubc.ctlt.compair.common.timer","ubc.ctlt.compair.rich.content","ubc.ctlt.compair.assignment","ubc.ctlt.compair.attachment","ubc.ctlt.compair.toaster"]);e.factory("AnswerResource",["$resource","$cacheFactory",function(e,n){var t="/api/courses/:courseId/assignments/:assignmentId/answers/:answerId",a=[],s=n.get("$http");function r(n){_.remove(a,function(e){return!(null!=n&&!_.startsWith(e,n))&&(s.remove(e),!0)})}var o={response:function(e){s.remove(e.config.url);var n=e.config.url.replace(/\\/(flagged|top)/g,"");return s.remove(n),r(n=n.replace(/\\/[A-Za-z0-9_-]{22}$/g,"")),e.data}};var i=e(t,{answerId:"@id"},{get:{url:t,cache:!0,interceptor:{response:function(e){var n,t,s=(n=e.config.url,0<(t=e.config.paramSerializer(e.config.params)).length&&(n+=(-1==n.indexOf("?")?"?":"&")+t),n);return s.match(/\\/api\\/courses\\/[A-Za-z0-9_-]{22}\\/assignments\\/[A-Za-z0-9_-]{22}\\/answers\\?.*/)&&a.push(s),e.data}}},save:{method:"POST",url:t,interceptor:o},delete:{method:"DELETE",url:t,interceptor:o},flagged:{method:"POST",url:"/api/courses/:courseId/assignments/:assignmentId/answers/:answerId/flagged",interceptor:o},topAnswer:{method:"POST",url:"/api/courses/:courseId/assignments/:assignmentId/answers/:answerId/top",interceptor:o},user:{url:"/api/courses/:courseId/assignments/:assignmentId/answers/user"},userUnsaved:{url:"/api/courses/:courseId/assignments/:assignmentId/answers/user",params:{draft:!0,unsaved:!0},cache:!1}});return i.MODEL="Answer",i.invalidListCache=r,i}]),e.controller("AnswerWriteController",["$scope","$location","$routeParams","AnswerResource","ClassListResource","$route","AssignmentResource","Toaster","$timeout","UploadValidator","CourseRole","answerAttachService","EditorOptions","xAPI","xAPIStatementHelper","resolvedData",function(t,s,e,a,n,r,o,i,c,l,d,u,m,p,g,h){t.courseId=e.courseId,t.assignmentId=e.assignmentId,t.answerId=e.answerId||void 0,t.course=h.course,t.assignment=h.assignment,t.answer=h.answer||{},t.answer.file&&(t.answer.uploadedFile=!0),t.loggedInUserId=h.loggedInUser.id,t.canManageAssignment=h.canManageAssignment,t.method=t.answer.id?"edit":"create",t.preventExit=!0,t.UploadValidator=l,t.tracking=p.generateTracking(),t.editorOptions=p.ckeditorContentTracking(m.basic,function(e){g.interacted_answer_solution(t.answer,t.tracking.getRegistration(),e)}),t.showAssignment=!0,t.submitAsInstructorOrTA=h.canManageAssignment,"create"==t.method&&(t.answer={draft:!0,course_id:t.courseId,assignment_id:t.assignmentId,comparable:!0},h.answerUnsaved.objects.length?t.answer.id=h.answerUnsaved.objects[0].id:a.save({courseId:t.courseId,assignmentId:t.assignmentId},{draft:!0}).$promise.then(function(e){t.answer.id=e.id})),t.canManageAssignment&&(n.get({courseId:t.courseId}).$promise.then(function(e){t.classlist=e.objects}),t.answer.user_id=t.loggedInUserId),"create"!=t.method&&t.answer.draft?g.resume_assignment_question(t.assignment,t.tracking.getRegistration()):g.initialize_assignment_question(t.assignment,t.tracking.getRegistration());var f=new Date(t.assignment.answer_end);if(!t.canManageAssignment){var b=h.timer.date,w=f.getTime()-b-6e5;w<864e5&&c(function(){t.showCountDown=!0},w)}t.uploader=u.getUploader(),t.resetFileUploader=function(){var e=u.getFile();e&&g.deleted_answer_attachment(e,t.answer,t.tracking.getRegistration()),u.reset()},u.setUploadedCallback(function(e){g.attached_answer_attachment(e,t.answer,t.tracking.getRegistration())}),t.deleteFile=function(e){t.answer.file=null,t.answer.uploadedFile=!1,g.deleted_answer_attachment(e,t.answer,t.tracking.getRegistration())},t.trackExited=function(){g.exited_assignment_question(t.assignment,t.tracking.getRegistration(),t.tracking.getDuration())},t.onSubmitAsChanged=function(n){var e=null!=n&&0<t.classlist.filter(function(e){return e.id==n&&(e.course_role==d.instructor||e.course_role==d.teaching_assistant)}).length;t.submitAsInstructorOrTA=null==n||e,e||(t.answer.comparable=!0)},t.answerSubmit=function(){t.submitted=!0;t.answer.draft;var e=u.getFile();e?(t.answer.file=e,t.answer.file_id=e.id):t.answer.file?t.answer.file_id=t.answer.file.id:t.answer.file_id=null;var n=angular.copy(t.answer);n.draft=t.saveDraft,n.tracking=t.tracking.toParams(),a.save({courseId:t.courseId,assignmentId:t.assignmentId},n).$promise.then(function(e){if(t.answer=e,t.preventExit=!1,e.draft){i.success("Answer Draft Saved","Remember to submit your answer before the deadline.");var n="/course/"+t.courseId+"/assignment/"+t.assignmentId+"/answer/"+t.answer.id+"/edit";s.path()==n?r.reload():(s.path(n),s.replace())}else i.success("Answer Submitted"),s.path("/course/"+t.courseId+"/assignment/"+t.assignmentId)}).finally(function(){t.submitted=!1})}}]),e.controller("AnswerEditModalController",["$scope","AnswerResource","Toaster","xAPI","xAPIStatementHelper","answerAttachService","UploadValidator","EditorOptions","$uibModalInstance",function(n,t,s,e,a,r,o,i,c){n.assignment=void 0!==n.assignment?n.assignment:{},n.answer=void 0!==n.answer?n.answer:{},n.method="edit",n.modalInstance=c,n.UploadValidator=o,n.tracking=e.generateTracking(),n.editorOptions=e.ckeditorContentTracking(i.basic,function(e){a.interacted_answer_solution(n.answer,n.tracking.getRegistration(),e)}),t.get({courseId:n.courseId,assignmentId:n.assignmentId,answerId:n.answer.id}).$promise.then(function(e){(n.answer=e).file&&(n.answer.uploadedFile=!0)}),a.resume_assignment_question(n.assignment,n.tracking.getRegistration()),n.uploader=r.getUploader(),n.resetFileUploader=function(){var e=r.getFile();e&&a.deleted_answer_attachment(e,n.answer,n.tracking.getRegistration()),r.reset()},r.setUploadedCallback(function(e){a.attached_answer_attachment(e,n.answer,n.tracking.getRegistration())}),n.submitAsInstructorOrTA=n.canManageAssignment,n.deleteFile=function(e){n.answer.file=null,n.answer.uploadedFile=!1,a.deleted_answer_attachment(e,n.answer,n.tracking.getRegistration())},n.modalInstance.result.then(function(e){},function(){a.exited_assignment_question(n.assignment,n.tracking.getRegistration(),n.tracking.getDuration())}),n.answerSubmit=function(){n.submitted=!0;var e=r.getFile();e?(n.answer.file=e,n.answer.file_id=e.id):n.answer.file?n.answer.file_id=n.answer.file.id:n.answer.file_id=null,n.answer.tracking=n.tracking.toParams(),t.save({courseId:n.courseId,assignmentId:n.assignmentId},n.answer).$promise.then(function(e){n.answer=e,s.success("Answer Saved"),c.close(n.answer)}).finally(function(){n.submitted=!1})}}]),e.controller("ComparisonExampleModalController",["$scope","AnswerResource","Toaster","UploadValidator","answerAttachService","EditorOptions","$uibModalInstance",function(n,t,s,e,a,r,o){n.answer=void 0!==n.answer?n.answer:{},n.method=n.answer.id?"edit":"create",n.modalInstance=o,n.comparison_example=!0,n.UploadValidator=e,n.editorOptions=r.basic,"create"==n.method?n.answer.file&&(n.answer.uploadedFile=!0):"edit"==n.method&&t.get({courseId:n.courseId,assignmentId:n.assignmentId,answerId:n.answer.id}).$promise.then(function(e){(n.answer=e).file&&(n.answer.uploadedFile=!0)}),n.uploader=a.getUploader(),n.resetFileUploader=a.reset,n.deleteFile=function(e){n.answer.file=null,n.answer.uploadedFile=!1},n.answerSubmit=function(){n.submitted=!0;var e=a.getFile();e?(n.answer.file=e,n.answer.file_id=e.id):n.answer.file?n.answer.file_id=n.answer.file.id:n.answer.file_id=null,"create"==n.method?o.close(n.answer):t.save({courseId:n.courseId,assignmentId:n.assignmentId},n.answer).$promise.then(function(e){n.answer=e,s.success("Practice Answer Saved"),o.close(n.answer)}).finally(function(){n.submitted=!1})}}])}(),function(){function C(e){var n=new Date(e.date),t=new Date(e.time);return n.setHours(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds()),n}var e=angular.module("ubc.ctlt.compair.assignment",["angularFileUpload","ngResource","ngclipboard","ui.bootstrap","localytics.directives","ubc.ctlt.compair.answer","ubc.ctlt.compair.authentication","ubc.ctlt.compair.authorization","ubc.ctlt.compair.attachment","ubc.ctlt.compair.comment","ubc.ctlt.compair.common.xapi","ubc.ctlt.compair.common.form","ubc.ctlt.compair.common.interceptor","ubc.ctlt.compair.rich.content","ubc.ctlt.compair.criterion","ubc.ctlt.compair.group","ubc.ctlt.compair.comparison","ubc.ctlt.compair.toaster","ubc.ctlt.compair.session"]),k=function(e,n){var t=_.sum(e),s=_.sum(n);if(t==s)return[e,n];if(s<t||1==n.length)return!1;for(var a=0;a<n.length;++a){var r=angular.copy(n);newPartition1=e.concat(r.splice(a,1));var o=k(newPartition1,r);if(!1!==o)return o}return!1};e.constant("PairingAlgorithm",{adaptive:"adaptive",random:"random",adaptive_min_delta:"adaptive_min_delta"}),e.directive("confirmationNeeded",function(){return{priority:-100,restrict:"A",link:function(n,e,t){var s=t.keyword?" "+t.keyword:"";s="Do you want to permanently remove this"+s+"?",t.confirmationWarning&&(s+="\\n"+t.confirmationWarning),e.bind("click",function(e){window.confirm(s)?(n.$eval(t.confirmationNeeded),n.$apply()):(e.preventDefault(),e.stopImmediatePropagation())})}}}),e.directive("getHeight",["$timeout",function(t){return{restrict:"A",link:function(e,n){t(function(){e.thisHeight=n.prop("scrollHeight"),200<=e.thisHeight&&(e.showReadMore=!0)},0)}}}]),e.directive("comparisonPreview",function(){return{templateUrl:"modules/assignment/preview-inline-template.html",controller:["$scope","$uibModal","xAPIStatementHelper",function(n,e,t){n.previewPopup=function(){n.current=1,n.firstAnsNum=1,n.secondAnsNum=2,n.total=0,n.forcePreventExit=!0,0<n.assignment.number_of_comparisons&&(n.total=n.assignment.number_of_comparisons),n.assignment.addPractice&&n.total++,n.assignment.enable_self_evaluation&&n.total++,n.answer1={content:"<p>The first student answer in the pair will appear here.</p>",file:null},n.answer2={content:"<p>The second student answer in the pair will appear here.</p>",file:null},n.comparison={comparison_criteria:[]},angular.forEach(n.assignment.criteria,function(e){n.comparison.comparison_criteria.push({criterion_id:e.id,criterion:e,content:""})}),n.modalInstance=e.open({animation:!0,templateUrl:"modules/comparison/comparison-modal-partial.html",scope:n}),n.modalInstance.opened.then(function(){t.opened_modal("Preview Comparison")}),n.modalInstance.result.finally(function(){t.closed_modal("Preview Comparison")})}}]}}),e.directive("assignmentActionButton",function(){return{restrict:"E",scope:!0,templateUrl:"modules/common/element-button-template.html",replace:!0,link:function(e,n,t){e.actionElementName=t.name},controller:["$scope","$filter","AssignmentPermissions",function(o,e,i){o.$watchCollection("[assignment, assignment.status, actionElementName]",function(e){var n=i.getAll(o.assignment,o.canManageAssignment,o.loggedInUserId);if(void 0!==o.assignment.status){var t=o.assignment.id,s=o.assignment.status,a=(o.assignment,o.course.id),r=(o.course,{answer:{label:"Answer",href:"#/course/"+a+"/assignment/"+t+"/answer/create",title:"Answer Assignment",show:{user:n.canAnswer&&n.needsAnswer&&!n.hasDraftAnswer,instructor:!n.hasDraftAnswer}},finishAnswer:{label:"Finish Answer",href:"#/course/"+a+"/assignment/"+t+"/answer/"+s.answers.draft_ids[0]+"/edit",title:"Finish Answering Assignment",show:{user:n.canAnswer&&n.needsAnswer&&n.hasDraftAnswer,instructor:n.hasDraftAnswer}},compare:{label:o.canManageAssignment||!n.hasDraftComparison?"Compare Pairs":"Finish Comparison",href:"#/course/"+a+"/assignment/"+t+"/compare",title:n.hasComparisonsAvailable?o.canManageAssignment||!n.hasDraftComparison?"Compare Pairs":"Finish Comparison":"No comparisons available",disabled:!n.hasComparisonsAvailable,show:{user:n.canCompare&&n.needsCompare,instructor:n.canCompare}},selfEval:{label:n.hasDraftSelfEval?"Finish Comparison":"Compare Pairs",href:"#/course/"+a+"/assignment/"+t+"/self_evaluation",title:n.hasDraftSelfEval?"Finish Comparison":"Compare Pairs",disabled:!n.canSelfEval,show:{user:n.needsSelfEval,instructor:!1}},viewResults:{label:"See Results",href:"#/course/"+a+"/assignment/"+t+"/",title:"View Results",show:{user:n.canViewAnswers,instructor:!1}}});r[o.actionElementName]&&(o.canManageAssignment&&r[o.actionElementName].show.instructor?o.button=r[o.actionElementName]:!o.canManageAssignment&&r[o.actionElementName].show.user?o.button=r[o.actionElementName]:o.button={hide:!0})}else o.button={hide:!0}})}]}}),e.directive("assignmentText",function(){return{restrict:"E",scope:!0,templateUrl:"modules/common/element-text-template.html",replace:!1,link:function(e,n,t){e.textElementName=t.name},controller:["$scope","$filter","AssignmentPermissions",function(a,r,o){a.$watchCollection("[assignment, assignment.status, textElementName]",function(e){var n=o.getAll(a.assignment,a.canManageAssignment,a.loggedInUserId);if(void 0!==a.assignment.status){var t=a.assignment,s={answerDue:{label:t.answer_end?"<em>Answer due </em> "+r("date")(t.answer_end,"MMM d"):"",show:{user:n.canAnswer&&n.needsAnswer,instructor:!1}},comparisonsDue:{label:t.compare_end?"<em>Comparisons due </em> "+r("date")(t.compare_end,"MMM d"):"",show:{user:n.isComparePeriod&&n.needsCompareOrSelfEval,instructor:!1}},notEnoughAnswers:{label:"Not enough answers to compare<br />(Refresh the page to check again)",show:{user:n.canCompare&&n.needsCompareOrSelfEval&&!n.hasComparisonsAvailable,instructor:n.canCompare&&n.needsCompareOrSelfEval&&!n.hasComparisonsAvailable}},noSelfEval:{label:"Self-evaluation comparison unavailable",show:{user:n.needsSelfEval&&!n.canSelfEval,instructor:!1}}};s[a.textElementName]&&(a.canManageAssignment&&s[a.textElementName].show.instructor?a.dirText=s[a.textElementName]:!a.canManageAssignment&&s[a.textElementName].show.user?a.dirText=s[a.textElementName]:a.dirText={hide:!0})}else a.dirText={hide:!0}})}]}}),e.directive("assignmentMetadata",function(){return{restrict:"E",scope:!0,templateUrl:"modules/common/element-metadata-template.html",replace:!0,link:function(e,n,t){e.metadataName=t.name},controller:["$scope","$filter","AssignmentPermissions",function(r,o,i){r.$watchCollection("[assignment, assignment.status, metadataName]",function(e){var n=i.getAll(r.assignment,r.canManageAssignment,r.loggedInUserId);if(void 0!==r.assignment.status){r.assignment.id,r.assignment.status;var t=r.assignment,s=r.course.id,a=(r.course,{editLink:{label:"Edit",href:"#/course/"+s+"/assignment/"+t.id+"/edit",show:{user:n.isOwner,instructor:!0}},duplicateLink:{label:"Duplicate",href:"#/course/"+s+"/assignment/"+t.id+"/duplicate",show:{user:!1,instructor:!0}},answerCount:{label:t.answer_count+" answer"+(1!=t.answer_count?"s":"")+" &raquo;",href:"#/course/"+s+"/assignment/"+t.id+"/?tab=answers#answers",show:{user:n.canViewAnswers,instructor:!0}},answeringDates:{label:"<em>Answering:</em> "+(t.answer_start?o("date")(t.answer_start,"MMM d @ h:mm a")+" - "+o("date")(t.answer_end,"MMM d @ h:mm a"):"NOT SET"),show:{user:!1,instructor:!0}},comparingDates:{label:"<em>Comparing:</em> "+(t.compare_start?o("date")(t.compare_start,"MMM d @ h:mm a")+" - "+o("date")(t.compare_end,"MMM d @ h:mm a"):"NOT SET"),show:{user:!1,instructor:!0}},answerCountEmpty:{label:"Answers not yet available",show:{user:!n.canViewAnswers,instructor:!1}},compareCount:{label:t.evaluation_count+" comparison"+(1!=t.evaluation_count?"s":"")+" &raquo;",href:"#/course/"+s+"/assignment/"+t.id+"/?tab=comparisons#comparisons",show:{user:!1,instructor:!0}},feedbackCount:{label:t.status.answers.feedback+" feedback comment"+(1!=t.status.answers.feedback?"s":"")+" &raquo;",href:"#/course/"+s+"/assignment/"+t.id+"/?tab=your_feedback",show:{user:n.hasFeedback,instructor:!1}},feedbackCountBelow:{label:"<strong>"+t.status.answers.feedback+" feedback comment"+(1!=t.status.answers.feedback?"s":"")+"</strong> below",show:{user:n.hasFeedback,instructor:!1}},feedbackCountEmpty:{label:"No feedback received",show:{user:!n.hasFeedback,instructor:!1}},completedFeedback:{label:"You "+(n.needsAnswer?"":"<strong>answered</strong>"+(n.hasCompared?" and ":""))+(n.hasCompared?"<strong>compared "+t.status.comparisons.count+" pair"+(0!=t.status.comparisons.count?"s":"")+"</strong>":""),show:{user:n.hasCompared||!n.needsAnswer,instructor:!1}},missedFeedback:{label:"You missed "+(n.hasMissedAnswer?"answering "+(n.hasMissedCompare?" and ":""):"")+(n.hasMissedCompare?"comparing "+(n.needsCompare?t.steps_left+" pair"+(0!=t.steps_left?"s":""):""):""),show:{user:n.hasMissedAnswer||n.hasMissedCompare,instructor:!1}},missingFeedback:{label:(n.canAnswer&&n.needsAnswer?"1 answer "+(n.isComparePeriod&&0<n.needsCompareOrSelfEval?", ":""):"")+(n.isComparePeriod&&0<n.needsCompareOrSelfEval?t.steps_left+" comparison"+(0!=t.steps_left?"s":""):"")+" needed",class:"label label-warning",show:{user:n.canAnswer&&n.needsAnswer||n.isComparePeriod&&n.needsCompareOrSelfEval,instructor:!1}},missingComparisonsFeedback:{label:t.steps_left+" comparison"+(1!=t.steps_left?"s":"")+" needed",class:"label label-warning",show:{user:n.isComparePeriod&&n.needsCompareOrSelfEval&&!n.hasCompareDueDate,instructor:!1}},answerDue:{label:t.answer_end?"Answer due: "+o("date")(t.answer_end,"MMM d @ h:mm a"):"",class:"label label-warning",show:{user:n.canAnswer&&n.needsAnswer,instructor:!1}},comparisonsDue:{label:t.compare_end?"Comparisons due: "+o("date")(t.compare_end,"MMM d @ h:mm a"):"",class:"label label-warning",show:{user:n.isComparePeriod&&n.needsCompareOrSelfEval&&n.hasCompareDueDate,instructor:!1}},assignmentScheduled:{label:n.isAfterAnswerDue&&n.hasCompareDueDate?"Comparing scheduled for "+o("date")(t.compare_start,"MMM d"):n.isAfterAnswerDue?"Comparing not scheduled":"Scheduled for "+o("date")(t.answer_start,"MMM d"),show:{user:!1,instructor:!n.isAnswerPeriod&&!n.isComparePeriod&&!n.canViewAnswers}},periodLabel:{label:n.isAnswerPeriod&&!n.isComparePeriod?"Answer period":!n.isAnswerPeriod&&n.isComparePeriod?"Comparison period":n.isAnswerPeriod&&n.isComparePeriod?"Answer/comparison period":void 0,class:"label label-warning",show:{user:!1,instructor:n.isAnswerPeriod||n.isComparePeriod}},assignmentCompleted:{label:"Completed on "+o("date")(t.compare_end,"MMM d"),show:{user:!1,instructor:!n.isAnswerPeriod&&!n.isComparePeriod&&n.canViewAnswers}},deleteLink:{label:\'<i class="fa fa-trash-o"></i>\',title:"Delete",confirmationNeeded:"deleteAssignment(assignment)",confirmationWarning:t.delete_warning,keyword:"assignment",show:{user:n.isOwner,instructor:!0}}});a[r.metadataName]&&(r.canManageAssignment&&a[r.metadataName].show.instructor?r.meta=a[r.metadataName]:!r.canManageAssignment&&a[r.metadataName].show.user?r.meta=a[r.metadataName]:r.meta={hide:!0})}else r.meta={hide:!0}})}]}}),e.factory("AssignmentResource",["$resource","Interceptors",function(e,n){var t="/api/courses/:courseId/assignments/:assignmentId",s=e(t,{assignmentId:"@id"},{get:{url:t},save:{method:"POST",url:t,interceptor:n.cache},delete:{method:"DELETE",url:t,interceptor:n.cache},getCurrentUserStatus:{url:"/api/courses/:courseId/assignments/:assignmentId/status"},getCurrentUserComparisons:{url:"/api/courses/:courseId/assignments/:assignmentId/user/comparisons"},getUserComparisons:{url:"/api/courses/:courseId/assignments/:assignmentId/users/comparisons"}});return s.MODEL="Assignment",s}]),e.factory("ComparisonExampleResource",["$resource",function(e){var n="/api/courses/:courseId/assignments/:assignmentId/comparisons/examples/:comparisonExampleId",t=e(n,{comparisonExampleId:"@id"},{get:{url:n},save:{method:"POST",url:n},delete:{method:"DELETE",url:n}});return t.MODEL="ComparisonExample",t}]),e.factory("AssignmentPermissions",function(){return{getAll:function(e,n,t){var s={};return e.status&&(e.steps_left=e.status.comparisons.left+(e.self_evaluation_needed?1:0),e.answer_end instanceof Date||!e.answer_end||(e.answer_end=new Date(e.answer_end)),e.compare_end instanceof Date||!e.compare_end||(e.compare_end=new Date(e.compare_end)),(s={isAnswerPeriod:e.answer_period,canAnswer:e.answer_period,canViewAnswers:e.see_answers,needsAnswer:!e.status.answers.answered,hasDraftAnswer:e.status.answers.has_draft,hasFeedback:e.status.answers.feedback,isAfterAnswerDue:!e.answer_period&&e.answer_end&&e.answer_end<new Date,isComparePeriod:e.compare_period,canCompare:e.compare_period&&(!n&&(e.answer_period&&e.status.answers.answered||!e.answer_period)||n&&e.educators_can_compare),needsCompare:0<e.status.comparisons.left,hasDraftComparison:e.status.comparisons.has_draft,hasComparisonsAvailable:e.status.comparisons.available,hasCompared:0<e.status.comparisons.count,isAfterCompareDue:!e.compare_period&&e.compare_end&&e.compare_end<new Date,hasCompareDueDate:e.compare_end,canSelfEval:e.status.answers.answered&&0==e.status.comparisons.left,needsSelfEval:0==e.status.comparisons.left&&e.self_evaluation_needed,hasDraftSelfEval:e.status.comparisons.self_evaluation_draft,isOwner:e.user_id==t,isAvailable:e.available,needsCompareOrSelfEval:0<e.steps_left}).needsSelfEval&=s.canCompare,s.hasMissedAnswer=s.isAfterAnswerDue&&s.needsAnswer,s.hasMissedCompare=s.isAfterCompareDue&&s.needsCompare),s}}}),e.filter("excludeInstr",function(){return function(e,n){var t=[];return angular.forEach(e,function(e){n[e.user_id]&&!e.comparable||t.push(e)}),t}}),e.filter("notScoredEnd",function(){return function(e){if(angular.isArray(e)){var n=[],t=[];return angular.forEach(e,function(e){e.score?n.push(e):t.push(e)}),n.concat(t)}}}),e.controller("AssignmentViewController",["$scope","$routeParams","$location","AnswerResource","AssignmentResource","AssignmentCommentResource","ComparisonResource","CourseResource","Toaster","AnswerCommentResource","resolvedData","GroupResource","AnswerCommentType","PairingAlgorithm","$uibModal","xAPIStatementHelper","WinningAnswer",function(a,e,n,s,t,r,o,i,c,l,d,u,m,p,g,h,f){a.courseId=e.courseId,a.assignmentId=e.assignmentId,a.loggedInUserId=d.loggedInUser.id,a.course=d.course,a.assignment=d.assignment,a.canManageAssignment=d.canManageAssignment,a.allStudents=d.students.objects,a.instructors=d.instructorLabels.instructors,a.users=[],a.AnswerCommentType=m,a.PairingAlgorithm=p;var b={courseId:a.courseId,assignmentId:a.assignmentId};a.totalNumAnswers=0,a.answerFilters={page:1,perPage:20,group:null,author:null,top:null,anonymous:null,orderBy:null},a.totalNumComparisonsShown={count:a.assignment.evaluation_count},a.comparisonFilters={page:1,perPage:5,group:null,author:null},a.self_evaluation_needed=!1,a.rankLimit=null,a.WinningAnswer=f;var w=n.search().tab||"answers";a.assignment.answer_start=new Date(a.assignment.answer_start),a.assignment.answer_end=new Date(a.assignment.answer_end),null!=a.assignment.compare_start&&(a.assignment.compare_start=new Date(a.assignment.compare_start)),null!=a.assignment.compare_end&&(a.assignment.compare_end=new Date(a.assignment.compare_end)),a.assignment.rank_display_limit&&(a.rankLimit=a.assignment.rank_display_limit),a.readDate=Date.parse(a.assignment.created),a.assignment.compare_end?a.answerAvail=a.assignment.compare_end:a.answerAvail=a.assignment.answer_end,t.getCurrentUserStatus({courseId:a.courseId,assignmentId:a.assignmentId}).$promise.then(function(e){a.assignment.status=e.status,a.comparisons_left=a.assignment.status.comparisons.left,a.self_evaluation_needed=!!a.assignment.enable_self_evaluation&&!a.assignment.status.comparisons.self_evaluation_completed,a.steps_left=a.comparisons_left+(a.self_evaluation_needed?1:0),a.assignment.compare_end?a.see_answers=a.assignment.after_comparing:a.see_answers=a.assignment.after_comparing&&0==a.comparisons_left;var n=a.assignment.answer_count-a.assignment.status.answers.count,t=n*(n-1)/2;a.warning=a.assignment.status.comparisons.left>t}),a.canManageAssignment&&u.get({courseId:a.courseId},function(e){a.groups=e.objects}),a.getUserIds=function(e){var n={};return angular.forEach(e,function(e){n[e.id]=1}),n},a.adminFilter=function(){return function(e){return a.instructors[e.user_id]&&!e.comparable}},a.commentFilter=function(n){return function(e){return a.canManageAssignment||n.user_id==a.loggedInUserId||e.comment_type==m.public}},a.setTab=function(e){n.search("tab",e),h.closed_page_section(w+" tab")},a.showTab=function(e){return w==e},a.$on("$routeUpdate",function(e){w=n.search().tab||"answers",a.loadTabData()}),a.loadTabData=function(){if("your_feedback"==w){var e=angular.extend({},b,{author:a.loggedInUserId});a.user_answers=s.get(e,function(e){e.objects.forEach(function(e){a.loadComments(e)})})}else"your_comparisons"==w?a.comparison_set=t.getCurrentUserComparisons(b):"help"==w&&r.get({courseId:a.courseId,assignmentId:a.assignmentId}).$promise.then(function(e){a.comments=e});h.opened_page_section(w+" tab")},a.loadTabData(),a.revealContent=function(e){var n="."+e.id+" .content";$(n).css({"max-height":"none"}),this.showReadMore=!1},a.deleteAnswer=function(t){s.delete({courseId:t.course_id,assignmentId:t.assignment_id,answerId:t.id},function(e){c.success("Answer Deleted");var n=t.user_id;a.assignment.answer_count-=1,a.loggedInUserId==n&&(a.assignment.status.answers.count--,a.assignment.status.answers.answered=0<a.assignment.status.answers.count),a.updateAnswerList()})},a.setTopAnswer=function(e,n){var t={top_answer:n};s.topAnswer({courseId:e.course_id,assignmentId:e.assignment_id,answerId:e.id},t).$promise.then(function(){(e.top_answer=n)?c.success("Answer Added To Top Answers","Students will see this in the list of instructor-picked answers."):c.success("Answer Removed From Top Answers","Students will no longer see this in the list of instructor-picked answers."),"top-picks"==a.answerFilters.author&&a.updateAnswerList()})},a.editAnswer=function(e){var n=a.$new();n.courseId=a.courseId,n.assignmentId=a.assignmentId,n.assignment=angular.copy(a.assignment),n.answer=angular.copy(e),a.modalInstance=g.open({animation:!0,backdrop:"static",controller:"AnswerEditModalController",templateUrl:"modules/answer/answer-modal-partial.html",scope:n}),a.modalInstance.opened.then(function(){h.opened_modal("Edit Answer")}),a.modalInstance.result.then(function(t){_.each(a.answers.objects,function(e,n){e.id==t.id&&(t.comments=e.comments,a.answers.objects[n]=t)}),h.closed_modal("Edit Answer")},function(){h.closed_modal("Edit Answer")})},a.createAnswerComment=function(n){var e=a.$new();e.courseId=a.courseId,e.assignmentId=a.assignmentId,e.answerId=n.id,a.modalInstance=g.open({animation:!0,backdrop:"static",controller:"AnswerCommentModalController",templateUrl:"modules/comment/comment-answer-modal-partial.html",scope:e}),a.modalInstance.opened.then(function(){h.opened_modal("Create Answer Comment")}),a.modalInstance.result.then(function(e){n.comments=void 0!==n.comments?n.comments:[],n.comments.unshift(e),e.comment_type==m.public?n.public_comment_count++:n.private_comment_count++,n.comment_count++,h.closed_modal("Create Answer Comment")},function(){h.closed_modal("Create Answer Comment")})},a.editAnswerComment=function(s,e){var n=a.$new();n.courseId=a.courseId,n.assignmentId=a.assignmentId,n.answerId=s.id,n.comment=angular.copy(e),a.modalInstance=g.open({animation:!0,backdrop:"static",controller:"AnswerCommentModalController",templateUrl:"modules/comment/comment-answer-modal-partial.html",scope:n}),a.modalInstance.opened.then(function(){h.opened_modal("Edit Answer Comment")}),a.modalInstance.result.then(function(t){e.comment_type==m.public?s.public_comment_count--:s.private_comment_count--,t.comment_type==m.public?s.public_comment_count++:s.private_comment_count++,_.each(s.comments,function(e,n){e.id==t.id&&(s.comments[n]=t)}),h.closed_modal("Edit Answer Comment")},function(){h.closed_modal("Edit Answer Comment")})},a.createAssignmentComment=function(){var e=a.$new();e.courseId=a.courseId,e.assignmentId=a.assignmentId,a.modalInstance=g.open({animation:!0,backdrop:"static",controller:"AssignmentCommentModalController",templateUrl:"modules/comment/comment-assignment-modal-partial.html",scope:e}),a.modalInstance.opened.then(function(){h.opened_modal("Create Assignment Comment")}),a.modalInstance.result.then(function(e){a.comments.objects.push(e),a.assignment.comment_count++,h.closed_modal("Create Assignment Comment")},function(){h.closed_modal("Create Assignment Comment")})},a.editAssignmentComment=function(e){var n=a.$new();n.courseId=a.courseId,n.assignmentId=a.assignmentId,n.comment=angular.copy(e),a.modalInstance=g.open({animation:!0,backdrop:"static",controller:"AssignmentCommentModalController",templateUrl:"modules/comment/comment-assignment-modal-partial.html",scope:n}),a.modalInstance.opened.then(function(){h.opened_modal("Edit Assignment Comment")}),a.modalInstance.result.then(function(t){_.each(a.comments.objects,function(e,n){e.id==t.id&&(a.comments.objects[n]=t)}),h.closed_modal("Edit Assignment Comment")},function(){h.closed_modal("Edit Assignment Comment")})},a.toggleReplies=function(e,n){e?(a.loadComments(n),h.opened_answer_replies_section(n)):h.closed_answer_replies_section(n)},a.loadComments=function(e){e.comments=l.query({courseId:a.courseId,assignmentId:a.assignmentId,answer_ids:e.id})},a.deleteComment=function(n,e,t,s){r.delete({courseId:e,assignmentId:t,commentId:s},function(e){c.success("Comment Deleted"),a.comments.objects.splice(n,1),a.assignment.comment_count--})},a.deleteReply=function(n,t,e,s,a,r){l.delete({courseId:e,assignmentId:s,answerId:a,commentId:r},function(e){c.success("Reply Deleted"),n.comments.splice(t,1)[0].comment_type==m.public?n.public_comment_count--:n.private_comment_count--,n.comment_count--})},a.resetUsers=function(e,n,t){t=void 0===t||t,e=_.sortBy(e,"name"),n=_.sortBy(n,"name"),a.users=[].concat(e,n),t&&a.users.unshift({id:"top-picks",name:"Instructor\'s top picks"})},a.updateAnswerList=function(){var e=angular.merge({courseId:a.courseId,assignmentId:a.assignmentId},a.answerFilters);a.answerFiltersName=$("#answers-filter option:selected").text(),delete e.anonymous,"top-picks"==e.author&&delete e.author,a.answers=s.get(e,function(e){a.totalNumAnswers=e.total,a.rankCount={},angular.forEach(e.objects,function(e){e.score&&"score"==a.answerFilters.orderBy&&(null==a.rankCount[e.score.rank]?a.rankCount[e.score.rank]=1:++a.rankCount[e.score.rank])})})},a.updateAnswerList(),a.resetUsers(a.allInstructionals,a.allStudents),i.getInstructionals({id:a.courseId}).$promise.then(function(e){a.allInstructionals=e.objects,a.allInstructionals=_(a.allInstructionals).chain().sortBy(function(e){return e.name}).sortBy(function(e){return e.role}).value(),a.resetUsers(a.allInstructionals,a.allStudents)});a.$watchCollection("answerFilters",function(e,n){angular.equals(e,n)||(n.group!=e.group&&("top-picks"!=a.answerFilters.author&&(a.answerFilters.author=null),null==a.answerFilters.group?a.resetUsers(a.allInstructionals,a.allStudents):u.get({courseId:a.courseId,groupName:a.answerFilters.group},function(e){a.resetUsers([],e.students,!1)}),a.answerFilters.page=1),n.author!=e.author&&(a.answerFilters.top=null,"top-picks"==a.answerFilters.author&&(a.answerFilters.top=!0,a.answerFilters.orderBy=null),a.answerFilters.page=1),n.top==e.top&&n.orderBy==e.orderBy||(a.answerFilters.page=1),1==a.answerFilters.anonymous?_.includes(["top-picks","",null],a.answerFilters.author)?$("#answers_filter_chosen .chosen-single span").show():$("#answers_filter_chosen .chosen-single span").hide():$("#answers_filter_chosen .chosen-single span").show(),h.filtered_page_section(w+" tab",a.answerFilters),a.updateAnswerList())})}]),e.controller("AssignmentWriteController",["$scope","$q","$location","$routeParams","$route","AssignmentResource","$uibModal","CriterionResource","required_rounds","Toaster","attachService","UploadValidator","EditorOptions","PairingAlgorithm","ComparisonExampleResource","AnswerResource","xAPIStatementHelper","resolvedData","moment",function(o,i,s,e,n,a,r,c,t,l,d,u,m,p,g,h,f,b,w){o.courseId=e.courseId,o.assignmentId=e.assignmentId||void 0,o.course=b.course,o.assignment=b.assignment||{},o.loggedInUserId=b.loggedInUser.id,o.canManageAssignment=b.canManageAssignment,o.availableCriteria=b.criteria.objects,_.forEach(o.availableCriteria,function(e){e.weight=1}),o.method=o.assignment.id?"edit":"create","copy"==n.current.method&&(o.method="copy"),o.UploadValidator=u,o.editorOptions=m.basic,o.PairingAlgorithm=p,o.uploader=d.getUploader(),o.resetFileUploader=d.reset,o.recommended_comparisons=Math.floor(t/2),o.rankLimitOptions=[{value:10,label:"Answers ranked 10th and higher"},{value:20,label:"Answers ranked 20th and higher"}];new Date;if(o.format="dd-MMMM-yyyy",o.date={astart:{date:new Date,time:(new Date).setHours(0,0,0,0)},aend:{date:new Date,time:(new Date).setHours(23,59,0,0)},cstart:{date:new Date,time:(new Date).setHours(23,59,0,0)},cend:{date:new Date,time:(new Date).setHours(23,59,0,0)}},o.comparison_example={answer1:{},answer2:{}},"create"==o.method)o.assignment={criteria:[_.find(o.availableCriteria,{public:!0})],students_can_reply:!1,educators_can_compare:!1,number_of_comparisons:o.recommended_comparisons,pairing_algorithm:p.adaptive_min_delta,rank_display_limit:null,answer_grade_weight:1,comparison_grade_weight:1,self_evaluation_grade_weight:1},o.date.astart.date=null,o.date.aend.date=null,o.date.cstart.date=null,o.date.cend.date=null;else if("edit"==o.method)o.assignment.file&&(o.assignment.uploadedFile=!0),o.date.astart.date=new Date(o.assignment.answer_start),o.date.astart.time=new Date(o.assignment.answer_start),o.date.aend.date=new Date(o.assignment.answer_end),o.date.aend.time=new Date(o.assignment.answer_end),o.assignment.compare_start&&o.assignment.compare_end?(o.assignment.availableCheck=!0,o.date.cstart.date=new Date(o.assignment.compare_start),o.date.cstart.time=new Date(o.assignment.compare_start),o.date.cend.date=new Date(o.assignment.compare_end),o.date.cend.time=new Date(o.assignment.compare_end)):(o.date.cstart.date=new Date(o.date.aend.date),o.date.cstart.time=new Date(o.date.aend.time),o.date.cend.date=new Date,o.date.cend.date.setDate(o.date.cstart.date.getDate()+7),o.date.cend.time=new Date(o.date.aend.time)),o.assignment.addPractice=0<b.assignmentComparisonExamples.objects.length,o.assignment.addPractice&&(o.comparison_example=b.assignmentComparisonExamples.objects[0]);else if("copy"==o.method){var v=o.assignment;if(o.originalAssignment=v,o.assignment={criteria:v.criteria,name:v.name,description:v.description,number_of_comparisons:v.number_of_comparisons,students_can_reply:v.students_can_reply,enable_self_evaluation:v.enable_self_evaluation,pairing_algorithm:v.pairing_algorithm,educators_can_compare:v.educators_can_compare,answer_grade_weight:v.answer_grade_weight,comparison_grade_weight:v.comparison_grade_weight,self_evaluation_grade_weight:v.self_evaluation_grade_weight,peer_feedback_prompt:v.peer_feedback_prompt,rank_display_limit:v.rank_display_limit,file:v.file,uploadedFile:!!v.file||void 0},o.date.astart.date=new Date(v.answer_start),o.date.astart.time=new Date(v.answer_start),o.date.aend.date=new Date(v.answer_end),o.date.aend.time=new Date(v.answer_end),v.compare_start&&v.compare_end?(o.assignment.availableCheck=!0,o.date.cstart.date=new Date(v.compare_start),o.date.cstart.time=new Date(v.compare_start),o.date.cend.date=new Date(v.compare_end),o.date.cend.time=new Date(v.compare_end)):(o.date.cstart.date=new Date(o.date.aend.date),o.date.cstart.time=new Date(o.date.aend.time),o.date.cend.date=new Date,o.date.cend.date.setDate(o.date.cstart.date.getDate()+7),o.date.cend.time=new Date(o.date.aend.time)),o.assignment.addPractice=0<b.assignmentComparisonExamples.objects.length,o.assignment.addPractice){var y=b.assignmentComparisonExamples.objects[0];o.comparison_example={answer1:{content:y.answer1.content,file:y.answer1.file,file_id:y.answer1.file?y.answer1.file.id:void 0},answer2:{content:y.answer2.content,file:y.answer2.file,file_id:y.answer2.file?y.answer2.file.id:void 0}}}}o.datePickerOpen=function(e,n){e.preventDefault(),e.stopPropagation(),n.opened=!0},o.datePickerMinDate=function(){var e=Array.prototype.slice.call(arguments).filter(function(e){return null!=e});return 0==e.length?null:w(e.reduce(function(e,n){return w(e)>w(n)?e:n},e[0])).toDate()},o.datePickerMaxDate=function(){var e=Array.prototype.slice.call(arguments).filter(function(e){return null!=e});return 0==e.length?null:w(e.reduce(function(e,n){return w(e)<w(n)?e:n},e[0])).toDate()},o.getMinDate=function(e){return minDate=null,o.course.start_date&&(minDate=o.course.start_date),e&&(minDate=e),minDate},o.criteriaCanDraw=function(){var e,n=[];return o.assignment.criteria.forEach(function(e){n.push(e.weight)}),!1!==(!((e=n).length<=1)&&k([],e))},o.deleteFile=function(e){o.assignment.file=null,o.assignment.uploadedFile=!1};o.availableCriteria=_.filter(o.availableCriteria,function(e){return!_.find(o.assignment.criteria,{id:e.id})}),o.add=function(e){null==e||e<0||e>=o.availableCriteria.length||(o.assignment.criteria.push(o.availableCriteria[e]),o.availableCriteria.splice(e,1))},o.remove=function(e){var n=o.assignment.criteria[e];o.assignment.criteria.splice(e,1),n.default&&o.availableCriteria.push(n)},o.changeCriterion=function(t){t=t||{};var e=o.$new();e.criterion=angular.copy(t),t&&t.public&&(e.criterion.default=!1,e.criterion.compared=!1);var s=t.id?"edit":"create",a=t.id?"Edit Criterion":"Create Criterion";o.modalInstance=r.open({animation:!0,backdrop:"static",controller:"CriterionModalController",templateUrl:"modules/criterion/criterion-modal-partial.html",scope:e}),o.modalInstance.opened.then(function(){f.opened_modal(a)}),o.modalInstance.result.then(function(e){if("edit"==s){var n=t.weight;angular.copy(e,t),t.weight=n}else e.weight=1,o.assignment.criteria.push(e);f.closed_modal(a)},function(){f.closed_modal(a)})},o.changeAnswer=function(e,n){var t=o.$new();t.answerName=n?"Answer A":"Answer B",t.courseId=o.courseId,t.assignmentId=o.assignment.id,t.answer=angular.copy(e);var s=t.answer.id?"Edit Comparison Example":"Create Comparison Example";o.modalInstance=r.open({animation:!0,backdrop:"static",controller:"ComparisonExampleModalController",templateUrl:"modules/answer/answer-modal-partial.html",scope:t}),o.modalInstance.opened.then(function(){f.opened_modal(s)}),o.modalInstance.result.then(function(e){n?(o.comparison_example.answer1=e).id&&(o.comparison_example.answer1_id=e.id):(o.comparison_example.answer2=e).id&&(o.comparison_example.answer2_id=e.id),f.closed_modal(s)},function(){f.closed_modal(s)})},o.getCriterionWeightAsPercent=function(e){var n=0;return o.assignment.criteria.forEach(function(e){n+=e.weight}),100*e/n},o.getGradeWeightAsPercent=function(e){var n=o.assignment.answer_grade_weight+o.assignment.comparison_grade_weight;return o.assignment.enable_self_evaluation&&(n+=o.assignment.self_evaluation_grade_weight),100*e/n},o.assignmentSubmit=function(){if(o.submitted=!0,null==o.date.astart.date||null==o.date.astart.time||null==o.date.aend.date||null==o.date.aend.time)return l.warning("Assignment Not Saved","Please specify the start date and end date of answering period."),void(o.submitted=!1);if(o.assignment.answer_start=C(o.date.astart),o.assignment.answer_end=C(o.date.aend),o.assignment.compare_start=C(o.date.cstart),o.assignment.compare_end=C(o.date.cend),o.assignment.answer_start>=o.assignment.answer_end)return l.warning("Assignment Not Saved","Please set answer end time after answer start time and save again."),void(o.submitted=!1);if(o.assignment.availableCheck&&o.assignment.answer_start>o.assignment.compare_start)return l.warning("Assignment Not Saved","Please double-check the answer and comparison start and end times for mismatches and save again."),void(o.submitted=!1);if(o.assignment.availableCheck&&o.assignment.compare_start>=o.assignment.compare_end)return l.warning("Assignment Not Saved","Please set comparison end time after comparison start time and save again."),void(o.submitted=!1);if(o.assignment.addPractice){var e=o.comparison_example.answer1,n=o.comparison_example.answer2;if(!(e.content&&""!=e.content.trim()||e.file||e.file_alias&&""!=e.file_alias||n.content&&""!=n.content.trim()||n.file||n.file_alias&&""!=n.file_alias))return l.warning("Assignment Not Saved","Please add content for answers in your practice pair and save again."),void(o.submitted=!1);if(!(e.content&&""!=e.content.trim()||e.file||e.file_alias&&""!=e.file_alias))return l.warning("Assignment Not Saved","Please add content for the first answer in your practice pair and save again."),void(o.submitted=!1);if(!(n.content&&""!=n.content.trim()||n.file||n.file_alias&&""!=n.file_alias))return l.warning("Assignment Not Saved","Please add content for the second answer in your practice pair and save again."),void(o.submitted=!1)}var t=[];o.assignment.id||_.forEach(o.assignment.criteria,function(s){if(s.public){var a=s.weight,e=angular.copy(s);e.id=null,e.public=!1,e.default=!1,t.push(i(function(n,t){c.save({},e).$promise.then(function(e){angular.copy(e,s),s.weight=a,n()},function(e){t()})}))}}),i.all(t).then(function(){o.assignment.availableCheck||(o.assignment.compare_start=null,o.assignment.compare_end=null);var e=d.getFile();e?(o.assignment.file=e,o.assignment.file_id=e.id):o.assignment.file?o.assignment.file_id=o.assignment.file.id:o.assignment.file_id=null,a.save({courseId:o.courseId},o.assignment).$promise.then(function(e){var n=e.id;o.assignment.id=e.id;var t=[];o.assignment.compared||(o.assignment.addPractice?t.push(x(n,o.comparison_example)):t.push(I(n,o.comparison_example))),i.all(t).then(function(){o.submitted=!1,"copy"==o.method?l.success("Assignment Duplicated"):l.success("Assignment Saved"),s.path("/course/"+o.courseId)},function(){o.submitted=!1})},function(e){o.submitted=!1})})};var I=function(e,s){return i(function(n,t){s.id?g.delete({courseId:o.courseId,assignmentId:e},s).$promise.then(function(e){s.id=null,n()},function(e){t()}):n()})},x=function(s,a){return i(function(n,t){var e=[];e.push(A(s,a,a.answer1,!0)),e.push(A(s,a,a.answer2,!1)),i.all(e).then(function(){g.save({courseId:o.courseId,assignmentId:s},a).$promise.then(function(e){a.id=e.id,n()},function(e){t()})},function(){t()})})},A=function(e,s,a,r){return i(function(n,t){null==a.id?h.save({courseId:o.courseId,assignmentId:e},a).$promise.then(function(e){r?(s.answer1_id=e.id,s.answer1=e):(s.answer2_id=e.id,s.answer2=e),n()},function(e){t()}):n()})}}])}(),function(){var e=angular.module("ubc.ctlt.compair.attachment",["angularFileUpload","ngResource","ubc.ctlt.compair.course","ubc.ctlt.compair.toaster"]);e.constant("UploadSettings",{importExtensions:["csv"],attachmentExtensions:[],attachmentUploadLimit:26214400,kalturaExtensions:null}),e.factory("UploadValidator",["UploadSettings",function(n){return{kalturaEnabled:function(){return n.kalturaExtensions&&0<n.kalturaExtensions.length},getAttachmentUploadLimit:function(){return n.attachmentUploadLimit},validImportExtension:function(e){return this.isAttachmentExtension(e)},validAttachmentExtension:function(e){return this.isKalturaExtension(e)||this.isAttachmentExtension(e)},isImportExtension:function(e){return _.includes(n.importExtensions,e)},isKalturaExtension:function(e){return this.kalturaEnabled()&&_.includes(n.kalturaExtensions,e)},isAttachmentExtension:function(e){return _.includes(n.attachmentExtensions,e)},displayExtensions:function(e){return(e=_.map(e,function(e){return e.toUpperCase()+"s"})).sort(),3<=e.length?(e[e.length-1]="and "+e[e.length-1],e.join(", ")):1==e.length||2==e.length?e.join(" and "):""},getAttachmentExtensionsForDisplay:function(){var e=n.attachmentExtensions;return this.kalturaEnabled()&&(e=_.uniq(_.concat(n.attachmentExtensions,n.kalturaExtensions))),this.displayExtensions(e)},getImportExtensionsForDisplay:function(){return this.displayExtensions(n.importExtensions)}}}]),e.factory("KalturaResource",["$resource",function(e){return e("/api/attachment/kaltura/:id",{id:"@id"})}]),e.service("importService",["FileUploader","$location","$cacheFactory","CourseResource","Toaster","UploadValidator",function(t,s,a,e,r,o){var i={},c=null,l="";return{getUploader:function(e,n){return c=new t({url:"/api/courses/"+e+"/"+n,queueLimit:1,removeAfterUpload:!0,headers:{Accept:"application/json"}}),l=n,c.onErrorItem=function(e,n,t,s){},c.filters.push({name:"importExtensionFilter",fn:function(e){var n=e.name.slice(e.name.lastIndexOf(".")+1).toLowerCase(),t=o.isImportExtension(n);if(!t){var s=o.getImportExtensionsForDisplay();r.error("File Not Uploaded","Please try again with an approved file type, which includes: "+s+".")}return t}}),c},onComplete:function(e,n){"error"in(i=n)||function(e){var n=a.get("classlist");switch(n&&n.remove("/api/courses/"+e+"/users"),l){case"users":var t=i.success;i.invalids&&0<i.invalids.length?(r.success("Some Users Enrolled","Successfully enrolled "+t+" users."),s.path("/course/"+e+"/user/import/results")):(r.success("All Users Enrolled","Successfully enrolled "+t+" users."),s.path("/course/"+e+"/user"));break;case"groups":i.invalids&&0<i.invalids.length?(r.success("Some Groups Added","Successfully added "+i.success+" groups."),s.path("/course/"+e+"/user/group/import/results")):(r.success("All Groups Added","Successfully added "+i.success+" groups."),s.path("/course/"+e+"/user"));break;default:r.success("Success")}}(e)},getResults:function(){return i}}}]),e.service("attachService",["FileUploader","$location","Toaster","UploadValidator","KalturaResource",function(e,n,r,o,a){var i=null,c=function(){i=null};return{getUploader:function(){var s=new e({url:"/api/attachment",queueLimit:1,autoUpload:!1,headers:{Accept:"application/json"}});return i=null,s.onSuccessItem=function(e,n){var t=e.file.name.slice(e.file.name.lastIndexOf(".")+1).toLowerCase();o.kalturaEnabled()&&o.isKalturaExtension(t)?n&&n.id&&(s.waitForKalturaComplete=!0,a.save({id:n.id},function(e){i=e.file,s.waitForKalturaComplete=void 0},function(e){s.waitForKalturaComplete=void 0})):n&&n.file&&(i=n.file)},s.onErrorItem=function(e,n,t,s){if(e.cancel(),e.remove(),c(),413==t){var a=o.getAttachmentUploadLimit()/1048576;r.error("File Not Uploaded","The file is larger than the "+a.toFixed(0)+"MB maximum. Please upload a smaller file instead.")}else n.title&&n.message?Toast.error(n.title,n.message):r.error("File Not Uploaded","Please try again.")},s.onAfterAddingFile=function(n){var e=n.file.name.slice(n.file.name.lastIndexOf(".")+1).toLowerCase();o.kalturaEnabled()&&o.isKalturaExtension(e)?a.get({},function(e){n.url=e.upload_url,n.alias="fileData",s.uploadItem(n)}):s.uploadItem(n)},s.filters.push({name:"attachmentExtensionFilter",fn:function(e){var n=e.name.slice(e.name.lastIndexOf(".")+1).toLowerCase(),t=o.validAttachmentExtension(n);if(!t){var s=o.getAttachmentExtensionsForDisplay();r.error("File Not Uploaded","Please try again with an approved file type, which includes: "+s+".")}return t}}),s.filters.push({name:"sizeFilter",fn:function(e){var n=o.getAttachmentUploadLimit();if(valid=e.size<=n,!valid){var t=e.size/1048576,s=n/1048576;r.error("File Not Uploaded","The file size is "+t.toFixed(2)+"MB, which exceeds the "+s.toFixed(0)+"MB maximum. Please upload a smaller file instead.")}return valid}}),s},getFile:function(){return i},reset:c}}]),e.service("answerAttachService",["FileUploader","$location","Toaster","UploadValidator","KalturaResource",function(n,e,r,o,a){var i=null,c=function(e){},l=function(){i=null};return{getUploader:function(e){var s=new n({url:"/api/attachment",queueLimit:1,autoUpload:!1,headers:{Accept:"application/json"}});return i=null,s.onErrorItem=function(e,n,t,s){if(e.cancel(),e.remove(),l(),413==t){var a=o.getAttachmentUploadLimit()/1048576;r.error("File Not Uploaded","The file is larger than the "+a.toFixed(0)+"MB maximum. Please upload a smaller file instead.")}else n.title&&n.message?Toast.error(n.title,n.message):r.error("File Not Uploaded","Please try again.")},s.onSuccessItem=function(e,n){var t=e.file.name.slice(e.file.name.lastIndexOf(".")+1).toLowerCase();o.kalturaEnabled()&&o.isKalturaExtension(t)?n&&n.id&&(s.waitForKalturaComplete=!0,a.save({id:n.id},function(e){i=e.file,s.waitForKalturaComplete=void 0,c(i)},function(e){s.waitForKalturaComplete=void 0})):n&&n.file&&(i=n.file,c(i))},s.onAfterAddingFile=function(n){var e=n.file.name.slice(n.file.name.lastIndexOf(".")+1).toLowerCase();o.kalturaEnabled()&&o.isKalturaExtension(e)?a.get({},function(e){n.url=e.upload_url,n.alias="fileData",s.uploadItem(n)}):s.uploadItem(n)},s.filters.push({name:"attachmentExtensionFilter",fn:function(e){var n=e.name.slice(e.name.lastIndexOf(".")+1).toLowerCase(),t=o.validAttachmentExtension(n);if(!t){var s=o.getAttachmentExtensionsForDisplay();r.error("File Not Uploaded","Please try again with an approved file type, which includes: "+s+".")}return t}}),s.filters.push({name:"sizeFilter",fn:function(e){var n=o.getAttachmentUploadLimit();if(valid=e.size<=n,!valid){e.size;var t=n/1048576;r.error("File Not Uploaded","The file is larger than the "+t.toFixed(0)+"MB maximum. Please upload a smaller file instead.")}return valid}}),s},getFile:function(){return i},reset:l,setUploadedCallback:function(e){c=e}}}])}(),angular.module("ubc.ctlt.compair.authorization",["ubc.ctlt.compair.session"]).factory("Authorize",["$q","Session",function(l,n){return{MANAGE:"manage",CREATE:"create",READ:"read",EDIT:"edit",DELETE:"delete",can:function(o,i,c){return n.getUser().then(function(e){return null==e?l.when(!1):"System Administrator"==e.system_role?l.when(!0):n.getPermissions().then(function(e){var n,t,s,a,r=c||"global";return l.when((n=o,s=r,(t=i)in(a=e)&&s in a[t]&&-1!=a[t][s].indexOf(n)))})})}}}]),function(){var e=angular.module("ubc.ctlt.compair.classlist",["ngResource","ubc.ctlt.compair.attachment","ubc.ctlt.compair.common.xapi","ubc.ctlt.compair.common.form","ubc.ctlt.compair.common.interceptor","ubc.ctlt.compair.course","ubc.ctlt.compair.group","ubc.ctlt.compair.toaster","ubc.ctlt.compair.user","ubc.ctlt.compair.login","ubc.ctlt.compair.lti","ubc.ctlt.compair.authorization","ubc.ctlt.compair.oauth","ui.bootstrap","fileSaver"]);e.factory("ClassListResource",["$resource","$cacheFactory","Interceptors",function(e,n,t){var s="/api/courses/:courseId/users/:userId",a=e(s,{userId:"@userId"},{get:{cache:n("classlist")},enrol:{method:"POST",url:s,interceptor:t.enrolCache},unenrol:{method:"DELETE",url:s,interceptor:t.enrolCache},updateCourseRoles:{method:"POST",url:"/api/courses/:courseId/users/roles",interceptor:t.enrolCache},export:{method:"GET",url:s,headers:{Accept:"text/csv"},transformResponse:function(e,n){return{content:e}}}});return a.MODEL="UserCourse",a}]),e.controller("ClassViewController",["$scope","$routeParams","$route","ClassListResource","CourseResource","CourseRole","GroupResource","Toaster","SaveAs","LTIResource","UserResource","$uibModal","xAPIStatementHelper","resolvedData",function(t,e,s,a,n,r,o,i,c,l,d,u,m,p){t.courseId=e.courseId,t.course=p.course,t.classlist=p.classlist.objects,t.groups=p.groups.objects,t.loggedInUserId=p.loggedInUser.id,t.canManageUsers=p.canManageUsers,t.canCreateUsers=p.canCreateUsers,t.submitted=!1,t.lti_membership_enabled=!1,t.lti_membership_pending=0,t.course_roles=[r.student,r.teaching_assistant,r.instructor],t.course.lti_linked&&l.getMembershipStatus({id:t.courseId},function(e){t.lti_membership_enabled=e.status.enabled,t.lti_membership_pending=e.status.pending}),t.selectAll=function(){angular.forEach(t.classlist,function(e){e.selected=t.selectedAll})},t.checkIfAllSelected=function(){t.selectedAll=t.classlist.every(function(e){return 1==e.selected})},t.resetSelected=function(){angular.forEach(t.classlist,function(e){e.selected=!1})},t.addUsersToNewGroup=function(){var e=u.open({animation:!0,backdrop:"static",controller:"AddGroupModalController",templateUrl:"modules/group/group-modal-partial.html"});e.opened.then(function(){m.opened_modal("Edit Group")}),e.result.then(function(e){t.addUsersToGroup(e),m.closed_modal("Edit Group")},function(){m.closed_modal("Edit Group")})},t.addUsersToGroup=function(e){var n=t.classlist.filter(function(e){return e.selected}).map(function(e){return e.id});null==e&&(e=null),e?o.updateUsersGroup({courseId:t.courseId,groupName:e},{ids:n},function(e){i.success("User(s) Saved","Successfully added the user(s) into "+e.group_name+"."),s.reload()}):o.removeUsersGroup({courseId:t.courseId},{ids:n},function(e){i.success("User(s) Removed From Group"),s.reload()})},t.updateUsers=function(n){var e=t.classlist.filter(function(e){return e.selected}).map(function(e){return e.id});n?a.updateCourseRoles({courseId:t.courseId},{ids:e,course_role:n},function(e){i.success("User(s) Saved","Successfully changed course role to "+n+"."),s.reload()}):a.updateCourseRoles({courseId:t.courseId},{ids:e},function(e){i.success("User(s) Dropped"),s.reload()})},t.update=function(e,n){n?o.enrol({courseId:t.courseId,userId:e,groupName:n},{},function(e){i.success("User Saved","Successfully added the user to group "+e.group_name+".")}):o.unenrol({courseId:t.courseId,userId:e},function(e){i.success("User Removed From Group")})},t.enrol=function(e){a.enrol({courseId:t.courseId,userId:e.id},e,function(e){i.success("User Saved","Successfully changed "+e.fullname+"\'s course role to "+e.course_role+".")})},t.unenrol=function(e){a.unenrol({courseId:t.courseId,userId:e},function(e){i.success("User Dropped"),s.reload()})},t.updateLTIMembership=function(){t.submitted=!0,l.updateMembership({id:t.courseId},{},function(e){t.submitted=!1,a.get({courseId:t.courseId},function(e){i.success("Enrollment List Refreshed","This page now shows the most up-to-date enrollment for your course."),s.reload()})},function(e){t.submitted=!1})},t.export=function(){a.export({courseId:t.courseId},function(e){c.download(e.content,"classlist_"+t.course.name+".csv",{type:"text/csv;charset=utf-8"})})},t.updateTableOrderBy=function(e){t.reverse=t.predicate==e&&!t.reverse,t.predicate=e;var n=t.predicate+" "+(t.reverse?"desc":"asc");m.sorted_page_section("classlist table",n)},t.resetSelected()}]),e.controller("ClassImportController",["$scope","$location","$routeParams","ClassListResource","CourseResource","Toaster","importService","ThirdPartyAuthType","AuthTypesEnabled","resolvedData",function(a,e,n,t,s,r,o,i,c,l){a.courseId=n.courseId,a.course=l.course,a.ThirdPartyAuthType=i,a.importTypes=[],c.cas&&a.importTypes.push({value:i.cas,name:"CWL username"}),c.app&&a.importTypes.push({value:null,name:"ComPAIR username"}),a.importType=a.importTypes[0].value,a.uploader=o.getUploader(a.courseId,"users"),a.uploader.onCompleteItem=function(e,n,t,s){a.submitted=!1,o.onComplete(a.courseId,n)},a.uploader.onBeforeUploadItem=function(e){a.importType==i.cas&&e.formData.push({import_type:a.importType})},a.upload=function(){a.submitted=!0,a.uploader.uploadAll()}}]),e.controller("ClassImportResultsController",["$scope","$routeParams","ClassListResource","Toaster","importService","resolvedData",function(e,n,t,s,a,r){e.results=a.getResults(),e.courseId=n.courseId,e.headers=["Username","Student Number","First Name","Last Name","Email","Reason"]}]),e.component("enrolComponent",{controller:"EnrolController",templateUrl:"modules/classlist/classlist-enrol-partial.html",bindings:{courseId:"<"}}),e.controller("EnrolController",["$route","ClassListResource","Toaster","UserResource","CourseRole",function(n,e,t,s,a){var r=this;r.course_roles=[a.student,a.teaching_assistant,a.instructor],r.enrolSubmit=function(){r.submitted=!0,r.user.course_role=r.course_role,e.enrol({courseId:r.courseId,userId:r.user.id},r.user).$promise.then(function(e){t.success("User Enrolled","Successfully enrolled "+e.fullname+" as "+e.course_role+" in the course."),n.reload()}).finally(function(){r.submitted=!1})},r.getUsersAhead=function(e){return s.get({search:e}).$promise.then(function(e){return e.objects})}}])}(),function(){var e=angular.module("ubc.ctlt.compair.comment",["ngResource","localytics.directives","ubc.ctlt.compair.answer","ubc.ctlt.compair.classlist","ubc.ctlt.compair.common.xapi","ubc.ctlt.compair.common.form","ubc.ctlt.compair.common.interceptor","ubc.ctlt.compair.rich.content","ubc.ctlt.compair.course","ubc.ctlt.compair.criterion","ubc.ctlt.compair.comparison","ubc.ctlt.compair.assignment","ubc.ctlt.compair.toaster"]);e.factory("AssignmentCommentResource",["$resource",function(e){var n=e("/api/courses/:courseId/assignments/:assignmentId/comments/:commentId",{commentId:"@id"});return n.MODEL="AssignmentComment",n}]),e.factory("AnswerCommentResource",["$resource","Interceptors",function(e,n){var t="/api/courses/:courseId/assignments/:assignmentId/answers/:answerId/comments/:commentId",s=e(t,{commentId:"@id"},{get:{cache:!0},save:{method:"POST",url:t,interceptor:n.answerCommentCache},delete:{method:"DELETE",url:t,interceptor:n.answerCommentCache},query:{url:"/api/courses/:courseId/assignments/:assignmentId/answer_comments",isArray:!0}});return s.MODEL="AnswerComment",s}]),e.constant("AnswerCommentType",{public:"Public",private:"Private",evaluation:"Evaluation",self_evaluation:"Self Evaluation"}),e.filter("author",function(){return function(e,n){return angular.isObject(e)&&(e=_.values(e)),_.find(e,{user_id:n})}}),e.directive("compairStudentAnswer",function(){return{scope:{answer:"="},templateUrl:"modules/comment/answer.html"}}),e.directive("compairAnswerContent",function(){return{scope:{answer:"=",name:"@",isChosen:"=",criterion:"=",showScore:"="},templateUrl:"modules/comment/answer-content.html"}}),e.controller("AssignmentCommentModalController",["$scope","AssignmentCommentResource","AssignmentResource","Toaster","EditorOptions","$uibModalInstance",function(n,e,t,s,a,r){n.comment=void 0!==n.comment?n.comment:{},n.method=n.comment.id?"edit":"create",n.modalInstance=r,n.editorOptions=a.basic,n.parent=t.get({courseId:n.courseId,assignmentId:n.assignmentId}),"edit"==n.method&&e.get({courseId:n.courseId,assignmentId:n.assignmentId,commentId:n.comment.id}).$promise.then(function(e){n.comment=e}),n.commentSubmit=function(){n.submitted=!0,e.save({courseId:n.courseId,assignmentId:n.assignmentId},n.comment).$promise.then(function(e){n.comment=e,s.success("Comment Saved"),r.close(n.comment)}).finally(function(){n.submitted=!1})}}]),e.controller("AnswerCommentModalController",["$scope","AnswerCommentResource","AnswerResource","Toaster","Authorize","AnswerCommentType","AssignmentResource","EditorOptions","$uibModalInstance",function(n,e,t,s,a,r,o,i,c){n.comment=void 0!==n.comment?n.comment:{},n.method=n.comment.id?"edit":"create",n.modalInstance=c,n.editorOptions=i.basic,n.answerComment=!0,n.AnswerCommentType=r,"create"==n.method?(n.comment={comment_type:r.private},n.canManageAssignment=a.can(a.MANAGE,o.MODEL,n.courseId),n.canManageAssignment||o.get({courseId:n.courseId,assignmentId:n.assignmentId}).$promise.then(function(e){e.students_can_reply||(s.error("Reply Not Saved","Sorry, replies are not allowed for answers in this assignment."),c.dismiss())})):"edit"==n.method&&(n.comment=e.get({courseId:n.courseId,assignmentId:n.assignmentId,answerId:n.answerId,commentId:n.comment.id})),n.parent=t.get({courseId:n.courseId,assignmentId:n.assignmentId,answerId:n.answerId}),n.commentSubmit=function(){n.submitted=!0,e.save({courseId:n.courseId,assignmentId:n.assignmentId,answerId:n.answerId,commentId:n.comment.id},n.comment).$promise.then(function(e){n.comment=e,s.success("Reply Saved"),c.close(n.comment)}).finally(function(){n.submitted=!1})}}])}(),function(){var e=angular.module("ubc.ctlt.compair.common",[]);e.filter("emptyToEnd",function(){return function(e,n,t){if(angular.isArray(e)){t=t||!1;var s=e.filter(function(e){return e[n]}),a=e.filter(function(e){return!e[n]});return t?a.concat(s):s.concat(a)}}}),e.filter("filesize",function(){var s=["bytes","KB","MB","GB","TB","PB"];return function(e,n){if(n=n||0,!isNaN(parseFloat(e))&&isFinite(e)){for(var t=0;1024<=e&&t<s.length;)e/=1024,t++;return e.toFixed(n)+s[t]}}}),e.filter("encodeURIComponent",function(){return window.encodeURIComponent})}(),angular.module("ubc.ctlt.compair.common.timer",["ngResource"]).factory("TimerResource",["$resource",function(e){return e("/api/timer")}]),function(){var e=angular.module("ubc.ctlt.compair.common.xapi",["ngResource","angularMoment","angular-uuid","ubc.ctlt.compair.session","ubc.ctlt.compair.comparison"]);e.factory("StatementResource",["$resource",function(e){return e("/api/statements",{},{save:{method:"POST",ignoreLoadingBar:!0,bypassErrorsInterceptor:!0}})}]),e.constant("xAPISettings",{enabled:!1,baseUrl:""}),e.constant("xAPIVerb",{earned:{id:"http://specification.openbadges.org/xapi/verbs/earned",display:{"en-US":"earned"}},viewed:{id:"http://id.tincanapi.com/verb/viewed",display:{"en-US":"viewed"}},commented:{id:"http://adlnet.gov/expapi/verbs/commented",display:{"en-US":"commented"}},"up voted":{id:"http://id.tincanapi.com/verb/voted-up",display:{"en-US":"up voted"}},"down voted":{id:"http://id.tincanapi.com/verb/voted-down",display:{"en-US":"down voted"}},"vote canceled":{id:"http://id.tincanapi.com/verb/voted-cancel",display:{"en-US":"vote canceled"}},favorited:{id:"http://activitystrea.ms/schema/1.0/favorite",display:{"en-US":"favorited"}},unfavorited:{id:"http://activitystrea.ms/schema/1.0/unfavorite",display:{"en-US":"unfavorited"}},authored:{id:"http://activitystrea.ms/schema/1.0/author",display:{"en-US":"authored"}},deleted:{id:"http://activitystrea.ms/schema/1.0/delete",display:{"en-US":"deleted"}},updated:{id:"http://activitystrea.ms/schema/1.0/update",display:{"en-US":"updated"}},retracted:{id:"http://activitystrea.ms/schema/1.0/retract",display:{"en-US":"retracted"}},initialized:{id:"http://adlnet.gov/expapi/verbs/initialized",display:{"en-US":"initialized"}},resumed:{id:"http://adlnet.gov/expapi/verbs/resumed",display:{"en-US":"resumed"}},interacted:{id:"http://adlnet.gov/expapi/verbs/interacted",display:{"en-US":"interacted"}},completed:{id:"http://adlnet.gov/expapi/verbs/completed",display:{"en-US":"completed"}},suspended:{id:"http://adlnet.gov/expapi/verbs/suspended",display:{"en-US":"suspended"}},exited:{id:"http://adlnet.gov/expapi/verbs/exited",display:{"en-US":"exited"}},attached:{id:"http://activitystrea.ms/schema/1.0/attach",display:{"en-US":"attached"}},submitted:{id:"http://activitystrea.ms/schema/1.0/submit",display:{"en-US":"submitted"}},evaluated:{id:"http://www.tincanapi.co.uk/verbs/evaluated",display:{"en-US":"evaluated"}},downloaded:{id:"http://id.tincanapi.com/verb/downloaded",display:{"en-US":"downloaded"}},"logged in":{id:"https://brindlewaye.com/xAPITerms/verbs/loggedin/",display:{"en-US":"logged in"}},"logged out":{id:"https://brindlewaye.com/xAPITerms/verbs/loggedout/",display:{"en-US":"logged out"}},opened:{id:"http://activitystrea.ms/schema/1.0/open",display:{"en-US":"opened"}},closed:{id:"http://activitystrea.ms/schema/1.0/close",display:{"en-US":"closed"}},drafted:{id:"http://xapi.learninganalytics.ubc.ca/verb/draft",display:{"en-US":"drafted"}},flagged:{id:"http://xapi.learninganalytics.ubc.ca/verb/flag",display:{"en-US":"flagged"}},unflagged:{id:"http://xapi.learninganalytics.ubc.ca/verb/unflag",display:{"en-US":"unflagged"}},filtered:{id:"http://xapi.learninganalytics.ubc.ca/verb/filter",display:{"en-US":"filtered"}},sorted:{id:"http://xapi.learninganalytics.ubc.ca/verb/sort",display:{"en-US":"sorted"}}}),e.constant("xAPIActivityType",{badge:"http://activitystrea.ms/schema/1.0/badge",page:"http://activitystrea.ms/schema/1.0/page",comment:"http://activitystrea.ms/schema/1.0/comment",course:"http://adlnet.gov/expapi/activities/course",assessment:"http://adlnet.gov/expapi/activities/assessment",question:"http://adlnet.gov/expapi/activities/question",solution:"http://id.tincanapi.com/activitytype/solution",file:"http://activitystrea.ms/schema/1.0/file",review:"http://activitystrea.ms/schema/1.0/review",section:"http://id.tincanapi.com/activitytype/section",modal:"http://xapi.learninganalytics.ubc.ca/activitytype/modal","user profile":"http://id.tincanapi.com/activitytype/user-profile",service:"http://activitystrea.ms/schema/1.0/service"}),e.constant("xAPIExtensions",{"browser information":"http://id.tincanapi.com/extension/browser-info",referer:"http://nextsoftwaresolutions.com/xapi/extensions/referer",filters:"http://xapi.learninganalytics.ubc.ca/extension/filters","sort order":"http://xapi.learninganalytics.ubc.ca/extension/sort-order","login method":"http://xapi.learninganalytics.ubc.ca/extension/login-method",badgeclass:"http://standard.openbadges.org/xapi/extensions/badgeclass",comparison:"http://xapi.learninganalytics.ubc.ca/extension/comparison","pair algorithm":"http://xapi.learninganalytics.ubc.ca/extension/score-algorithm","fields changed":"http://xapi.learninganalytics.ubc.ca/extension/fields-changed","character count":"http://xapi.learninganalytics.ubc.ca/extension/character-count","word count":"http://xapi.learninganalytics.ubc.ca/extension/word-count","attachment response":"http://xapi.learninganalytics.ubc.ca/extension/attachment-response","score details":"http://xapi.learninganalytics.ubc.ca/extension/score-details"}),e.service("xAPI",["uuid","StatementResource","Session","moment","WinningAnswer","xAPISettings","xAPIVerb","xAPIActivityType","xAPIExtensions",function(t,n,s,a,r,o,e,i,c){var l=this;this.verb=e,this.activityType=i,this.extension=c,this.generateStatement=function(e){var n=angular.copy(e);n.timestamp||(n.timestamp=(new Date).toISOString());var t=new TinCan.Statement(n);l.save_statement(t)},this.save_statement=function(e){o.enabled&&s.isLoggedIn()&&(statement_json=e.asVersion("1.0.1"),n.save(statement_json))},this.generateTracking=function(){var e=t.v4(),n=a();return{getRegistration:function(){return e},getDuration:function(){return a.duration(a().diff(n)).toISOString()},toParams:function(e){return e=e||{},angular.merge({registration:this.getRegistration(),duration:this.getDuration()},e)}}},this.ckeditorContentTracking=function(e,n){var t=null;return angular.merge({},e,{on:{focus:function(){t=a()},blur:function(){var e=a.duration(a().diff(t));n(e.toISOString())}}})},this.relativePathSaveEncode=function(e){return e.replace(/#/g,"%23")},this.urlSaveEncode=function(e){var n=!0;return e.replace(/#/g,function(e){return n?(n=!1,e):"%23"})},this._resourceIRI={_appPageUrl:function(){return o.baseUrl+"app/#"},_appUrl:function(){return o.baseUrl+"app/xapi/"},_attachmentUrl:function(){return o.baseUrl+"app/attachment/"},criterion:function(e){return l._resourceIRI._appUrl()+"criterion/"+e},course:function(e){return l._resourceIRI._appUrl()+"course/"+e},assignment:function(e){return l._resourceIRI._appUrl()+"assignment/"+e},assignment_question:function(e){return l._resourceIRI._appUrl()+"assignment/"+e+"/question"},comparison_question:function(e){return l._resourceIRI._appUrl()+"comparison/"+e+"/question"},self_evaluation_question:function(e){return l._resourceIRI._appUrl()+"assignment/"+e+"/self-evaluation"},answer:function(e){return l._resourceIRI._appUrl()+"answer/"+e},answer_comment:function(e){return l._resourceIRI._appUrl()+"answer/comment/"+e},comparison:function(e){return l._resourceIRI._appUrl()+"comparison/"+e},comparison_criterion:function(e){return l._resourceIRI._appUrl()+"comparison/criterion/"+e},attachment:function(e){return l._resourceIRI._attachmentUrl()+e},page:function(e){return l._resourceIRI._appPageUrl()+l.relativePathSaveEncode(e)},page_section:function(e,n){var t=l.relativePathSaveEncode(e);return l._resourceIRI.page(t)+"?section="+encodeURIComponent(n)},modal:function(e,n){var t=l.relativePathSaveEncode(e);return l._resourceIRI.page(t)+"?modal="+encodeURIComponent(n)}},this._stripHTML=function(e){return e=(e=(e=String(e)||"").replace(/<[^>]+>/g,"")).replace("&nbsp;"," "),_.unescape(e)},this._characterCount=function(e){return e=String(e)||"",(e=(e=l._stripHTML(e)).replace(/(\\r\\n|\\n|\\r)/g," ")).length},this._wordCount=function(e){return e=String(e)||"",e=(e=l._stripHTML(e)).replace(/(\\r\\n|\\n|\\r)/g," "),words=_.filter(e.split(/\\s+/),function(e){return 0<e.length}),words.length},this.object={assignment:function(e){var n={id:l._resourceIRI.assignment(e.id),definition:{type:l.activityType.assessment,name:{"en-US":e.name}}};return e.description&&(n.definition.description={"en-US":e.description}),n},assignment_question:function(e){var n={id:l._resourceIRI.assignment_question(e.id),definition:{type:l.activityType.question,name:{"en-US":e.name}}};return e.description&&(n.definition.description={"en-US":e.description}),n},comparison_question:function(e,n,t){var s={id:l._resourceIRI.comparison_question(e.id),definition:{type:l.activityType.question,name:{"en-US":"Assignment comparison #"+n}}};return s.definition.extensions={},s.definition.extensions[l.extension.comparison]=n,s.definition.extensions[l.extension["pair algorithm"]]=t,s},self_evaluation_question:function(e){return{id:l._resourceIRI.self_evaluation_question(e.assignment_id),definition:{type:l.activityType.question,name:{"en-US":"Assignment self-evaluation"}}}},answer:function(e){return{id:l._resourceIRI.answer(e.id),definition:{type:l.activityType.solution,name:{"en-US":"Assignment answer"}}}},answer_attachment:function(e){return{id:l._resourceIRI.attachment(e.name),definition:{type:l.activityType.file,name:{"en-US":"Assignment answer attachment"}}}},answer_comment:function(e){return{id:l._resourceIRI.answer_comment(e.id),definition:{type:l.activityType.comment,name:{"en-US":"Assignment answer comment"}}}},answer_evaluation_comment:function(e){return{id:l._resourceIRI.answer_comment(e.id),definition:{type:l.activityType.comment,name:{"en-US":"Assignment answer evaluation comment"}}}},comparison:function(e){return{id:l._resourceIRI.comparison(e.id),definition:{type:l.activityType.solution,name:{"en-US":"Assignment comparison"}}}},comparison_criterion:function(e,n){return{id:l._resourceIRI.comparison_criterion(n.id),definition:{type:l.activityType.solution,name:{"en-US":"Assignment criterion comparison"}}}},self_evaluation:function(e){return{id:l._resourceIRI.answer_comment(e.id),definition:{type:l.activityType.review,name:{"en-US":"Assignment self-evaluation review"}}}},page:function(e){return{id:l._resourceIRI.page(e),definition:{type:l.activityType.page}}},page_section:function(e,n){return{id:l._resourceIRI.page_section(e,n),definition:{type:l.activityType.section,name:{"en-US":n}}}},modal:function(e,n){return{id:l._resourceIRI.modal(e,n),definition:{type:l.activityType.modal,name:{"en-US":n}}}}},this.context={basic:function(e){var n={};return(e=e||{}).registration&&(n.registration=e.registration),e.filters&&(n.extensions||(n.extensions={}),n.extensions[l.extension.filters]=e.filters),e.sortOrder&&(n.extensions||(n.extensions={}),n.extensions[l.extension["sort order"]]=e.sortOrder),n},assignment:function(e,n){return n=n||{},angular.merge({contextActivities:{parent:[{id:l._resourceIRI.course(e.course_id)}]}},l.context.basic(n))},assignment_question:function(e,n){return n=n||{},angular.merge({contextActivities:{parent:[{id:l._resourceIRI.assignment(e.id)}],grouping:[{id:l._resourceIRI.course(e.course_id)}]}},l.context.basic(n))},comparison_question:function(e,n){n=n||{};var t=angular.merge({contextActivities:{parent:[{id:l._resourceIRI.assignment(e.assignment_id)},{id:l._resourceIRI.answer(e.answer1.id)},{id:l._resourceIRI.answer(e.answer2.id)}],grouping:[{id:l._resourceIRI.course(e.course_id)}]}},l.context.basic(n));return _.forEach(e.comparison_criteria,function(e){t.contextActivities.grouping.push({id:l._resourceIRI.criterion(e.criterion_id)})}),t},self_evaluation_question:function(e,n){return n=n||{},angular.merge({contextActivities:{parent:[{id:l._resourceIRI.assignment(e.assignment_id)},{id:l._resourceIRI.answer(e.answer_id)}],grouping:[{id:l._resourceIRI.course(e.course_id)}]}},l.context.basic(n))},answer:function(e,n){return n=n||{},angular.merge({contextActivities:{parent:[{id:l._resourceIRI.assignment_question(e.assignment_id)}],grouping:[{id:l._resourceIRI.course(e.course_id)},{id:l._resourceIRI.assignment(e.assignment_id)}]}},l.context.basic(n))},comparison:function(e,n){return n=n||{},angular.merge({contextActivities:{parent:[{id:l._resourceIRI.comparison_question(e.id)}],grouping:[{id:l._resourceIRI.course(e.course_id)},{id:l._resourceIRI.assignment(e.assignment_id)},{id:l._resourceIRI.answer(e.answer1.id)},{id:l._resourceIRI.answer(e.answer2.id)}]}},l.context.basic(n))},comparison_criterion:function(e,n,t){return t=t||{},angular.merge({contextActivities:{parent:[{id:l._resourceIRI.comparison(e.id)},{id:l._resourceIRI.criterion(n.criterion_id)}],grouping:[{id:l._resourceIRI.course(e.course_id)},{id:l._resourceIRI.assignment(e.assignment_id)},{id:l._resourceIRI.answer(e.answer1.id)},{id:l._resourceIRI.answer(e.answer2.id)},{id:l._resourceIRI.comparison_question(e.id)}]}},l.context.basic(t))},self_evaluation:function(e,n){return n=n||{},angular.merge({contextActivities:{parent:[{id:l._resourceIRI.self_evaluation_question(e.assignment_id)}],grouping:[{id:l._resourceIRI.course(e.course_id)},{id:l._resourceIRI.assignment(e.assignment_id)},{id:l._resourceIRI.answer(e.answer_id)}]}},l.context.basic(n))},answer_comment:function(e,n){return n=n||{},angular.merge({contextActivities:{parent:[{id:l._resourceIRI.answer(e.answer_id)}],grouping:[{id:l._resourceIRI.course(e.course_id)},{id:l._resourceIRI.assignment(e.assignment_id)},{id:l._resourceIRI.assignment_question(e.assignment_id)}]}},l.context.basic(n))},answer_attachment:function(e,n){return n=n||{},angular.merge({contextActivities:{parent:[{id:l._resourceIRI.answer(e.id)}],grouping:[{id:l._resourceIRI.course(e.course_id)},{id:l._resourceIRI.assignment(e.assignment_id)},{id:l._resourceIRI.assignment_question(e.assignment_id)}]}},l.context.basic(n))},page:function(e,n){return n=n||{},angular.merge({contextActivities:{other:[{id:l.urlSaveEncode(e)}]}},l.context.basic(n))},page_section:function(e,n,t){return t=t||{},angular.merge({contextActivities:{parent:[{id:l._resourceIRI.page(e)}],other:[{id:l.urlSaveEncode(n)}]}},l.context.basic(t))},modal:function(e,n,t){return t=t||{},angular.merge({contextActivities:{parent:[{id:l._resourceIRI.page(e)}],other:[{id:l.urlSaveEncode(n)}]}},l.context.basic(t))},inline_pdf:function(e,n,t,s){var a=l.context.page_section(n,t,s);return a.contextActivities.other.push({id:l._resourceIRI.attachment(e)}),a},answer_page_section:function(e,n,t,s){var a=l.context.page_section(n,t,s);return a.contextActivities.other.push({id:l._resourceIRI.answer(e.id)}),a},attachment_modal:function(e,n,t,s){var a=l.context.modal(n,t,s);return a.contextActivities.other.push({id:l._resourceIRI.attachment(e)}),a},embeddable_content_modal:function(e,n,t,s){var a=l.context.modal(n,t,s);return/^https?:\\/\\//i.test(e)||(e="http://"+e),a.contextActivities.other.push({id:e}),a}},this.result={basic:function(e){var n={};return(e=e||{}).duration&&(n.duration=e.duration),null!=e.success&&(n.success=e.success),null!=e.completion&&(n.completion=e.completion),n},answer:function(e,n){n=n||{};var t=angular.merge({response:e.content,extensions:{}},l.result.basic(n));if(characterCount=e.content?l._characterCount(e.content):0,t.extensions[l.extension["character count"]]=characterCount,wordCount=e.content?l._wordCount(e.content):0,t.extensions[l.extension["word count"]]=wordCount,n.includeAttachment&&e.file){var s=l._resourceIRI.attachment(e.file.name);t.extensions[l.extension["attachment response"]]=s}return t},answer_comment:function(e,n){n=n||{};var t=angular.merge({response:e.content,extensions:{}},l.result.basic(n));return characterCount=e.content?l._characterCount(e.content):0,t.extensions[l.extension["character count"]]=characterCount,wordCount=e.content?l._wordCount(e.content):0,t.extensions[l.extension["word count"]]=wordCount,t},comparison:function(e,n){n=n||{};var t="Undecided";return e.winner==r.draw?t="Draw":e.winner==r.answer1?t=l._resourceIRI.answer(e.answer1_id):e.winner==r.answer2&&(t=l._resourceIRI.answer(e.answer2_id)),angular.merge({response:t},l.result.basic(n))},comparison_criterion:function(e,n,t){t=t||{};var s="Undecided";return n.winner==r.answer1?s=l._resourceIRI.answer(e.answer1_id):n.winner==r.answer2&&(s=l._resourceIRI.answer(e.answer2_id)),angular.merge({response:s},l.result.basic(t))},self_evaluation:function(e,n){n=n||{};var t=angular.merge({response:e.content,extensions:{}},l.result.basic(n));return characterCount=e.content?l._characterCount(e.content):0,t.extensions[l.extension["character count"]]=characterCount,wordCount=e.content?l._wordCount(e.content):0,t.extensions[l.extension["word count"]]=wordCount,t}}}]),e.service("xAPIStatementHelper",["$location","xAPI",function(a,r){this.interacted_answer_solution=function(e,n,t){e.id&&r.generateStatement({verb:r.verb.interacted,object:r.object.answer(e),context:r.context.answer(e,{registration:n}),result:r.result.answer(e,{duration:t})})},this.attached_answer_attachment=function(e,n,t){e.id&&n.id&&r.generateStatement({verb:r.verb.attached,object:r.object.answer_attachment(e),context:r.context.answer_attachment(n,{registration:t})})},this.deleted_answer_attachment=function(e,n,t){e.id&&n.id&&r.generateStatement({verb:r.verb.deleted,object:r.object.answer_attachment(e),context:r.context.answer_attachment(n,{registration:t})})},this.initialize_assignment_question=function(e,n){e.id&&r.generateStatement({verb:r.verb.initialized,object:r.object.assignment_question(e),context:r.context.assignment_question(e,{registration:n})})},this.resume_assignment_question=function(e,n){e.id&&r.generateStatement({verb:r.verb.resumed,object:r.object.assignment_question(e),context:r.context.assignment_question(e,{registration:n})})},this.exited_assignment_question=function(e,n,t){e.id&&r.generateStatement({verb:r.verb.exited,object:r.object.assignment_question(e),context:r.context.assignment_question(e,{registration:n}),result:r.result.basic({duration:t,success:!1})})},this.viewed_page=function(){var e=a.path(),n=a.absUrl();r.generateStatement({verb:r.verb.viewed,object:r.object.page(e),context:r.context.page(n)})},this.filtered_page=function(e){var n=a.path(),t=a.absUrl();r.generateStatement({verb:r.verb.filtered,object:r.object.page(n),context:r.context.page(t,{filters:e})})},this.sorted_page=function(e){var n=a.path(),t=a.absUrl();r.generateStatement({verb:r.verb.sorted,object:r.object.page(n),context:r.context.page(t,{sortOrder:e})})},this.opened_page_section=function(e){var n=a.path(),t=a.absUrl();r.generateStatement({verb:r.verb.opened,object:r.object.page_section(n,e),context:r.context.page_section(n,t)})},this.closed_page_section=function(e){var n=a.path(),t=a.absUrl();r.generateStatement({verb:r.verb.closed,object:r.object.page_section(n,e),context:r.context.page_section(n,t)})},this.filtered_page_section=function(e,n){var t=a.path(),s=a.absUrl();r.generateStatement({verb:r.verb.filtered,object:r.object.page_section(t,e),context:r.context.page_section(t,s,{filters:n})})},this.sorted_page_section=function(e,n){var t=a.path(),s=a.absUrl();r.generateStatement({verb:r.verb.sorted,object:r.object.page_section(t,e),context:r.context.page_section(t,s,{sortOrder:n})})},this.opened_modal=function(e){var n=a.path(),t=a.absUrl();r.generateStatement({verb:r.verb.opened,object:r.object.modal(n,e),context:r.context.modal(n,t)})},this.closed_modal=function(e){var n=a.path(),t=a.absUrl();r.generateStatement({verb:r.verb.closed,object:r.object.modal(n,e),context:r.context.modal(n,t)})},this.filtered_modal=function(e,n){var t=a.path(),s=a.absUrl();r.generateStatement({verb:r.verb.filtered,object:r.object.modal(t,e),context:r.context.modal(t,s,{filters:n})})},this.sorted_modal=function(e,n){var t=a.path(),s=a.absUrl();r.generateStatement({verb:r.verb.sorted,object:r.object.modal(t,e),context:r.context.modal(t,s,{sortOrder:n})})},this.opened_inline_kaltura_media=function(e){var n=a.path(),t=a.absUrl();r.generateStatement({verb:r.verb.opened,object:r.object.page_section(n,"Inline Kaltura Media Attachment"),context:r.context.inline_pdf(e,n,t)})},this.closed_inline_kaltura_media=function(e){var n=a.path(),t=a.absUrl();r.generateStatement({verb:r.verb.closed,object:r.object.page_section(n,"Inline Kaltura Media Attachment"),context:r.context.inline_pdf(e,n,t)})},this.opened_attachment_modal=function(e){var n=a.path(),t=a.absUrl();r.generateStatement({verb:r.verb.opened,object:r.object.modal(n,"View Attachment"),context:r.context.attachment_modal(e,n,t)})},this.closed_attachment_modal=function(e){var n=a.path(),t=a.absUrl();r.generateStatement({verb:r.verb.closed,object:r.object.modal(n,"View Attachment"),context:r.context.attachment_modal(e,n,t)})},this.opened_embeddable_content_modal=function(e){var n=a.path(),t=a.absUrl();r.generateStatement({verb:r.verb.opened,object:r.object.modal(n,"View Embeddable Content"),context:r.context.embeddable_content_modal(e,n,t)})},this.closed_embeddable_content_modal=function(e){var n=a.path(),t=a.absUrl();r.generateStatement({verb:r.verb.closed,object:r.object.modal(n,"View Embeddable Content"),context:r.context.embeddable_content_modal(e,n,t)})},this.opened_answer_replies_section=function(e){if(e.id){var n=a.path(),t=a.absUrl();r.generateStatement({verb:r.verb.opened,object:r.object.page_section(n,"Answer replies"),context:r.context.answer_page_section(e,n,t)})}},this.closed_answer_replies_section=function(e){if(e.id){var n=a.path(),t=a.absUrl();r.generateStatement({verb:r.verb.closed,object:r.object.page_section(n,"Answer replies"),context:r.context.answer_page_section(e,n,t)})}},this.initialize_comparison_question=function(e,n,t,s){e.id&&r.generateStatement({verb:r.verb.initialized,object:r.object.comparison_question(e,n,t),context:r.context.comparison_question(e,{registration:s})})},this.resume_comparison_question=function(e,n,t,s){e.id&&r.generateStatement({verb:r.verb.resumed,object:r.object.comparison_question(e,n,t),context:r.context.comparison_question(e,{registration:s})})},this.exited_comparison_question=function(e,n,t,s,a){e.id&&r.generateStatement({verb:r.verb.exited,object:r.object.comparison_question(e,n,t),context:r.context.comparison_question(e,{registration:s}),result:r.result.basic({duration:a,success:!1})})},this.interacted_comparison_criterion_solution=function(e,n,t){e.id&&n.id&&r.generateStatement({verb:r.verb.interacted,object:r.object.comparison_criterion(e,n),context:r.context.comparison_criterion(e,n,{registration:t}),result:r.result.comparison_criterion(e,n)})},this.interacted_answer_comment=function(e,n,t){e.id&&r.generateStatement({verb:r.verb.interacted,object:r.object.answer_evaluation_comment(e),context:r.context.answer_comment(e,{registration:n}),result:r.result.answer_comment(e,{duration:t})})},this.initialize_self_evaluation_question=function(e,n){e.id&&r.generateStatement({verb:r.verb.initialized,object:r.object.self_evaluation_question(e),context:r.context.self_evaluation_question(e,{registration:n})})},this.resume_self_evaluation_question=function(e,n){e.id&&r.generateStatement({verb:r.verb.resumed,object:r.object.self_evaluation_question(e),context:r.context.self_evaluation_question(e,{registration:n})})},this.exited_self_evaluation_question=function(e,n,t){e.id&&r.generateStatement({verb:r.verb.exited,object:r.object.self_evaluation_question(e),context:r.context.self_evaluation_question(e,{registration:n}),result:r.result.basic({duration:t,success:!1})})},this.interacted_self_evaluation_review=function(e,n,t){e.id&&r.generateStatement({verb:r.verb.interacted,object:r.object.self_evaluation(e),context:r.context.self_evaluation(e,{registration:n}),result:r.result.self_evaluation(e,{duration:t})})}}]),e.run(["$rootScope","$location","xAPIStatementHelper",function(e,n,t){e.$on("$routeChangeSuccess",function(){t.viewed_page()})}])}(),function(){var e=angular.module("ubc.ctlt.compair.comparison",["localytics.directives","ubc.ctlt.compair.answer","ubc.ctlt.compair.authentication","ubc.ctlt.compair.comment","ubc.ctlt.compair.criterion","ubc.ctlt.compair.assignment","ubc.ctlt.compair.toaster","ubc.ctlt.compair.common.xapi","ubc.ctlt.compair.common.form","ubc.ctlt.compair.rich.content","ubc.ctlt.compair.session"]);e.factory("ComparisonResource",["$resource",function(e){return e("/api/courses/:courseId/assignments/:assignmentId/comparisons",{})}]),e.constant("WinningAnswer",{answer1:"answer1",answer2:"answer2",draw:"draw"}),e.constant("required_rounds",6),e.controller("ComparisonController",["$location","$route","$scope","$timeout","$routeParams","$anchorScroll","AssignmentResource","AnswerResource","ComparisonResource","AnswerCommentResource","Toaster","AnswerCommentType","EditorOptions","xAPI","xAPIStatementHelper","WinningAnswer","resolvedData",function(s,a,r,e,n,t,o,i,c,l,d,u,m,p,g,h,f){r.courseId=n.courseId,r.assignmentId=n.assignmentId,r.course=f.course,r.assignment=f.assignment,r.canManageAssignment=f.canManageAssignment,r.loggedInUserId=f.loggedInUser.id,r.submitted=!1,r.isDraft=!1,r.preventExit=!0,r.tracking=p.generateTracking(),r.WinningAnswer=h,r.editor1Options=p.ckeditorContentTracking(m.basic,function(e){g.interacted_answer_comment(r.answer1_feedback,r.tracking.getRegistration(),e)}),r.editor2Options=p.ckeditorContentTracking(m.basic,function(e){g.interacted_answer_comment(r.answer2_feedback,r.tracking.getRegistration(),e)}),r.total=r.assignment.total_steps_required;var b=new Date(r.assignment.compare_end);if(b&&null!=r.assignment.compare_end){var w=f.timer.date,v=b.getTime()-w-6e5;v<864e5&&e(function(){r.showCountDown=!0},v)}r.comparisonError=!1,r.answer1={},r.answer1_feedback={},r.answer2={},r.answer2_feedback={},r.comparison={},c.get({courseId:r.courseId,assignmentId:r.assignmentId},function(e){var n=e.new_pair;r.comparison=e.comparison,r.answer1=angular.copy(r.comparison.answer1),r.answer2=angular.copy(r.comparison.answer2),_.forEach(["answer1","answer2"],function(n){if(0<r.comparison[n+"_feedback"].length)r[n+"_feedback"]=angular.copy(r.comparison[n+"_feedback"][0]);else{var e={courseId:r.courseId,assignmentId:r.assignmentId,answerId:r[n].id};r[n+"_feedback"]={answer_id:e.answerId,comment_type:u.evaluation,draft:!0},l.save(e,r[n+"_feedback"],function(e){r[n+"_feedback"]=e})}}),r.current=e.current,r.firstAnsNum=2*r.current-1,r.secondAnsNum=2*r.current,n?g.initialize_comparison_question(r.comparison,r.current,r.assignment.pairing_algorithm,r.tracking.getRegistration()):g.resume_comparison_question(r.comparison,r.current,r.assignment.pairing_algorithm,r.tracking.getRegistration())},function(e){r.comparisonError=!0,403==e.status&&e.data&&e.data.message?d.warning(e.data.message):400==e.status&&e.data&&e.data.title&&e.data.message&&d.warning(e.data.title,e.data.message),r.preventExit=!1}),r.trackExited=function(){g.exited_comparison_question(r.comparison,r.current,r.assignment.pairing_algorithm,r.tracking.getRegistration(),r.tracking.getDuration())},r.trackComparisonCriterionWinner=function(e){g.interacted_comparison_criterion_solution(r.comparison,e,r.tracking.getRegistration())},r.comparisonSubmit=function(n){r.submitted=!0,_.forEach(["answer1_feedback","answer2_feedback"],function(n){if(!r.canManageAssignment||r[n].content.length){var e={courseId:r.courseId,assignmentId:r.assignmentId,answerId:r[n].answer_id,commentId:r[n].id};r[n].comment_type=u.evaluation,r[n].draft=r.isDraft,r[n].tracking=r.tracking.toParams(),l.save(e,r[n],function(e){r[n]=e})}});var t=[];angular.forEach(r.comparison.comparison_criteria,function(e){t.push({criterion_id:e.criterion_id,content:e.content,winner:e.winner})}),$data={draft:r.isDraft,comparison_criteria:t,tracking:r.tracking.toParams()},c.save({courseId:r.courseId,assignmentId:r.assignmentId},$data).$promise.then(function(e){r.submitted=!1,r.isDraft?(n&&n.$setPristine(),r.tracking=p.generateTracking(),g.resume_comparison_question(r.comparison,r.current,r.assignment.pairing_algorithm,r.tracking.getRegistration()),d.success("Comparison Draft Saved","Remember to submit your comparison before the deadline.")):r.canManageAssignment?(d.success("Comparison Submitted","The next answer pair is now being loaded. Good luck with the next round!"),r.preventExit=!1,a.reload(),window.scrollTo(0,0)):o.getCurrentUserStatus({courseId:r.courseId,assignmentId:r.assignmentId},function(e){var n=e.status.comparisons.count;r.assignment.total_comparisons_required>n?(d.success("Comparison Submitted","The next answer pair is now being loaded. Good luck with the next round!"),r.preventExit=!1,a.reload(),window.scrollTo(0,0)):r.assignment.enable_self_evaluation&&e.status.answers.answered?(d.success("Comparison Submitted","Write a self-evaluation now, and your assignment will be complete."),r.preventExit=!1,s.path("/course/"+r.courseId+"/assignment/"+r.assignmentId+"/self_evaluation")):(d.success("Comparison Submitted","Your assignment is now complete. Way to go!"),r.preventExit=!1,s.path("/course/"+r.courseId))},function(e){d.success("Comparison Submitted"),r.preventExit=!1,s.path("/course/"+r.courseId)})},function(e){r.submitted=!1})}}]),e.controller("ComparisonSelfEvalController",["$location","$scope","$routeParams","AnswerResource","AssignmentResource","AnswerCommentResource","Toaster","AnswerCommentType","EditorOptions","xAPI","xAPIStatementHelper","resolvedData",function(n,t,e,s,a,r,o,i,c,l,d,u){if(t.courseId=e.courseId,t.assignmentId=e.assignmentId,t.course=u.course,t.assignment=u.assignment,t.assignmentStatus=u.assignmentStatus,t.loggedInUserId=u.loggedInUser.id,t.comment={draft:!0},t.tracking=l.generateTracking(),t.editorOptions=l.ckeditorContentTracking(c.basic,function(e){d.interacted_self_evaluation_review(t.comment,t.tracking.getRegistration(),e)}),t.preventExit=!0,t.total=t.assignmentStatus.status.comparisons.count+1,t.answerId=void 0,u.userAnswers.objects.length){var m=u.userAnswers.objects[0];t.answerId=m.id,t.parent=m}else o.warning("No Answer Submitted","Your answer for this assignment was not submitted, so a self-evaluation is unavailable."),n.path("/course/"+t.courseId);r.query({courseId:t.courseId,assignmentId:t.assignmentId,answer_ids:t.answerId,user_ids:t.loggedInUserId,self_evaluation:"only",draft:"only"},function(e){if(0<e.length)t.comment=e[0],d.resume_self_evaluation_question(t.comment,t.tracking.getRegistration());else{var n={courseId:t.courseId,assignmentId:t.assignmentId,answerId:t.answerId};t.comment.comment_type=i.evaluation,t.comment.draft=!0,r.save(n,t.comment).$promise.then(function(e){t.comment=e,d.initialize_self_evaluation_question(t.comment,t.tracking.getRegistration())})}}),t.trackExited=function(){d.exited_self_evaluation_question(t.comment,t.tracking.getRegistration(),t.tracking.getDuration())},t.commentSubmit=function(){t.submitted=!0,t.comment.comment_type=i.self_evaluation;var e={courseId:t.courseId,assignmentId:t.assignmentId,answerId:t.answerId,commentId:_.get(t.comment,"id")};t.comment.tracking=t.tracking.toParams(),r.save(e,t.comment).$promise.then(function(e){t.preventExit=!1,e.draft?(o.success("Self-Evaluation Draft Saved","Remember to submit your self-evaluation before the deadline."),n.path("/course/"+t.courseId+"/assignment/"+t.assignmentId+"/self_evaluation")):(o.success("Self-Evaluation Submitted","Your assignment is now complete. Way to go!"),n.path("/course/"+t.courseId))}).finally(function(){t.submitted=!1})}}]),e.controller("ComparisonViewController",["$scope","$routeParams","breadcrumbs","CourseResource","AssignmentResource","WinningAnswer","AnswerResource","AnswerCommentResource","GroupResource","Toaster","xAPIStatementHelper",function(t,e,n,s,a,r,o,i,c,l,d){t.courseId=e.courseId,t.assignmentId=e.assignmentId,t.totalNumComparisonSets=0,t.totalNumComparisonsShown.count=null,t.comparisonFilters=t.comparisonFilters||{page:1,perPage:5,group:null,author:null},t.users=[],t.answers=[],t.WinningAnswer=r,n.options={"Course assignments":t.course.name},s.getStudents({id:t.courseId}).$promise.then(function(e){t.allStudents=e.objects,userIds=t.getUserIds(e.objects),t.resetUsers(t.allInstructionals,t.allStudents)}),s.getInstructionals({id:t.courseId}).$promise.then(function(e){t.allInstructionals=e.objects,instructionalIds=t.getUserIds(e.objects),t.resetUsers(t.allInstructionals,t.allStudents)}),t.isInstructional=function(e){return e in instructionalIds},t.resetUsers=function(e,n){e=_.sortBy(e,"name"),n=_.sortBy(n,"name"),t.users=[].concat(e,n)},t.loadAnswerByAuthor=function(e){_.find(t.answers,{user_id:e})||o.get({courseId:t.courseId,assignmentId:t.assignmentId,author:e},function(e){var n=e.objects[0];t.answers.push(n)})},t.$watchCollection("comparisonFilters",function(e,n){angular.equals(e,n)||(n.group!=e.group&&(t.comparisonFilters.author=null,t.comparisonFilters.page=1,null==t.comparisonFilters.group?t.resetUsers(t.allInstructionals,t.allStudents):c.get({courseId:t.courseId,groupName:t.comparisonFilters.group}).$promise.then(function(e){t.resetUsers([],e.students)})),n.author!=e.author&&(t.comparisonFilters.page=1),d.filtered_page(t.comparisonFilters),t.updateList())}),t.updateList=function(){var e=angular.merge({courseId:t.courseId,assignmentId:t.assignmentId},t.comparisonFilters);t.comparisonFiltersName=$("#comparison-filter option:selected").text(),a.getUserComparisons(e,function(e){t.comparison_sets=e.objects,t.totalNumComparisonSets=e.total,t.totalNumComparisonsShown.count=e.comparison_total+e.self_evaluation_total})},t.updateList(),t.resetUsers(t.allInstructionals,t.allStudents)}])}(),function(){function u(e){var n=new Date(e.date),t=new Date(e.time);return n.setHours(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds()),n}function m(e,n){return e=null==e?moment():moment(e),n=null==n?moment():moment(n),Math.floor(e.startOf("day").diff(n.startOf("day"),"weeks",!0))}function p(e,n){return n=n||0,(e=null==e?moment():moment(e)).add(n,"weeks")}var e=angular.module("ubc.ctlt.compair.course",["angularMoment","ngResource","ngRoute","ui.bootstrap","ubc.ctlt.compair.comment","ubc.ctlt.compair.common.xapi","ubc.ctlt.compair.common.form","ubc.ctlt.compair.common.interceptor","ubc.ctlt.compair.comparison","ubc.ctlt.compair.assignment","ubc.ctlt.compair.rich.content","ubc.ctlt.compair.toaster"]);e.directive("courseMetadata",function(){return{restrict:"E",scope:!0,templateUrl:"modules/common/element-metadata-template.html",replace:!0,link:function(e,n,t){e.metadataName=t.name},controller:["$scope","$filter","CoursePermissions",function(r,e,o){r.$watchCollection("[course, course.status, metadataName]",function(e){var n=o.getAll(r.course);if(void 0!==r.course.status){var t=r.course.id,s=r.course,a={editLink:{label:"Edit",href:"#/course/"+t+"/edit",show:{user:!1,instructor:n.canEdit}},duplicateLink:{label:"Duplicate",href:"#/course/"+t+"/duplicate",show:{user:!1,instructor:n.canEdit}},assignmentCount:{label:s.assignment_count+" assignment"+(1!=s.assignment_count?"s":""),title:s.assignment_count+" assignment"+(1!=s.assignment_count?"s":""),show:{user:!1,instructor:!0}},assignmentCountStudent:{label:s.student_assignment_count+" assignment"+(1!=s.student_assignment_count?"s":"")+" total",title:s.student_assignment_count+" assignment"+(1!=s.student_assignment_count?"s":""),show:{user:!0,instructor:!1}},assignmentsToDo:{label:s.status.incomplete_assignments+" assignment"+(1!=s.status.incomplete_assignments?"s":"")+" to do",title:s.status.incomplete_assignments+" unfinished",class:"label label-warning",show:{user:n.hasAssignmentsLeft,instructor:!1}},noAssignmentsToDo:{label:"No assignments to do",title:s.status.incomplete_assignments+" unfinished",show:{user:!n.hasAssignmentsLeft,instructor:!1}},studentCount:{label:s.student_count+" student"+(1!=s.student_count?"s":""),show:{user:!1,instructor:n.canEdit}},courseDates:{label:s.year+" "+s.term,show:{user:!0,instructor:!0}},sandbox:{label:"Sandbox Course",show:{user:!1,instructor:n.canEdit&&s.isSandbox}},deleteLink:{label:\'<i class="fa fa-trash-o"></i>\',title:"Delete",confirmationNeeded:"deleteCourse(course)",confirmationWarning:s.delete_warning,keyword:"course and its assignments",show:{user:!1,instructor:n.canDelete}}};a[r.metadataName]&&(s.canManageAssignment&&a[r.metadataName].show.instructor?r.meta=a[r.metadataName]:!s.canManageAssignment&&a[r.metadataName].show.user?r.meta=a[r.metadataName]:r.meta={hide:!0})}else r.meta={hide:!0}})}]}}),e.directive("courseActionButton",function(){return{restrict:"E",scope:!1,templateUrl:"modules/common/element-button-template.html",replace:!0,link:function(e,n,t){e.actionElementName=t.name},controller:["$scope","$filter","CoursePermissions",function(a,e,r){a.$watchCollection("[course, course.status, actionElementName]",function(e){r.getAll(a.course);if(void 0!==a.course.status){var n=a.course.id,t=a.course,s={viewCourse:{label:"See Assignments",href:"#/course/"+n+"/",class:"btn-success",title:"See Assignments",show:{user:!0,instructor:!0}}};s[a.actionElementName]&&(t.canManageAssignment&&s[a.actionElementName].show.instructor?a.button=s[a.actionElementName]:!t.canManageAssignment&&s[a.actionElementName].show.user?a.button=s[a.actionElementName]:a.button={hide:!0})}else a.button={hide:!0}})}]}}),e.factory("CourseResource",["$q","$routeParams","$resource","Interceptors",function(e,n,t,s){var a="/api/courses/:id",r=t("/api/courses/:courseId",{id:"@id"},{get:{url:a,cache:!0},save:{method:"POST",url:a,interceptor:s.cache},delete:{method:"DELETE",url:a,interceptor:s.cache},createDuplicate:{method:"POST",url:"/api/courses/:id/duplicate"},getCurrentUserStatus:{url:"/api/courses/:id/assignments/status"},getInstructorsLabels:{url:"/api/courses/:id/users/instructors/labels"},getStudents:{url:"/api/courses/:id/users/students"},getInstructionals:{url:"/api/courses/:id/users/instructionals"}});return r.MODEL="Course",r}]),e.factory("CoursePermissions",function(){return{getAll:function(e){return{canEdit:!!e.canEditCourse,canDelete:!!e.canDeleteCourse,isSandbox:!!e.sandbox,hasAssignmentsLeft:!!e.status&&0<e.status.incomplete_assignments}}}}),e.controller("CourseAssignmentsController",["$scope","$routeParams","CourseResource","AssignmentResource","resolvedData","Toaster","xAPIStatementHelper",function(t,e,n,s,a,r,o){t.courseId=e.courseId,t.course=a.course,t.loggedInUserId=a.loggedInUser.id,t.assignments=a.courseAssignments.objects,t.count={},t.canEditCourse=a.canEditCourse,t.canCreateAssignment=a.canCreateAssignment,t.canManageAssignment=a.canManageAssignment,t.canManageUsers=a.canManageUsers,t.assignments.forEach(function(e){e.lti_linked&&(e.delete_warning="This will also unlink all LTI direct links to this assignment.")}),n.getCurrentUserStatus({id:t.courseId}).$promise.then(function(e){var n=e.statuses;t.assignments.forEach(function(e){e.status=n[e.id],e.comparisons_left=e.status.comparisons.left,e.self_evaluation_needed=!!e.enable_self_evaluation&&!e.status.comparisons.self_evaluation_completed,e.steps_left=e.comparisons_left+(e.self_evaluation_needed?1:0),e.compare_end?e.see_answers=e.after_comparing:e.see_answers=e.after_comparing&&0==e.comparisons_left})}),t.filters=["All course assignments"],t.canManageAssignment?t.filters.push("Assignments being answered","Assignments being compared","Upcoming assignments"):t.filters.push("My unfinished assignments"),t.filter=t.filters[0],t.deleteAssignment=function(n){s.delete({courseId:n.course_id,assignmentId:n.id}).$promise.then(function(e){r.success("Assignment Deleted"),t.assignments=_.filter(t.assignments,function(e){return e.id!=n.id})})},t.assignmentFilter=function(n){return function(e){switch(n){case"All course assignments":return!0;case"Assignments being answered":return e.answer_period;case"Assignments being compared":return e.compare_period;case"Upcoming assignments":return!e.available;case"My unfinished assignments":return e.answer_period&&!e.status.answers.answered||e.compare_period&&0<e.steps_left;default:return!1}}};t.$watchCollection("filter",function(e,n){angular.equals(e,n)||o.filtered_page({display:t.filter})})}]),e.controller("CourseSelectModalController",["$rootScope","$scope","$uibModalInstance","AssignmentResource","Session","CourseResource","Toaster","UserResource","LTI","xAPIStatementHelper",function(e,t,n,s,a,r,o,i,c,l){t.submitted=!1,t.totalNumCourses=0,t.courseFilters={page:1,perPage:10},t.courses=[],t.originalCourse={},t.selectCourse=function(e){n.close(e)},t.showDuplicateForm=!1,t.course={year:(new Date).getFullYear(),name:c.getCourseName()},t.format="dd-MMMM-yyyy",t.date={course_start:{date:null,time:(new Date).setHours(0,0,0,0)},course_end:{date:null,time:(new Date).setHours(23,59,0,0)}},t.selectDuplicateCourse=function(e){t.showDuplicateForm=!0,t.originalCourse=angular.copy(e)},t.datePickerOpen=function(e,n){e.preventDefault(),e.stopPropagation(),n.opened=!0},t.save=function(){if(t.submitted=!0,null!=t.date.course_start.date?t.course.start_date=u(t.date.course_start):t.course.start_date=null,null!=t.date.course_end.date?t.course.end_date=u(t.date.course_end):t.course.end_date=null,null!=t.course.start_date&&null!=t.course.end_date&&t.course.start_date>t.course.end_date)return o.warning("Course Not Saved","Please set course end time after course start time and save again."),void(t.submitted=!1);r.save({},t.course,function(e){o.success("Course Saved"),a.expirePermissions(),t.selectCourse(e.id)}).$promise.finally(function(){t.submitted=!1})},t.closeDuplicate=function(e){t.selectCourse(e)},t.dismissDuplicate=function(){t.showDuplicateForm=!1},t.updateCourseList=function(){i.getUserCourses(t.courseFilters).$promise.then(function(e){t.courses=e.objects,t.totalNumCourses=e.total})};t.$watchCollection("courseFilters",function(e,n){angular.equals(e,n)||(t.updateCourseList(),l.filtered_modal("Select Course",t.courseFilters))}),t.updateCourseList()}]),e.controller("CourseDuplicateController",["$rootScope","$scope","AssignmentResource","moment","$routeParams","$location","Session","CourseResource","Toaster","UserResource",function(e,a,n,r,t,s,o,i,c,l){a.showAssignments=!1,a.submitted=!1,a.format="dd-MMMM-yyyy",a.setupDuplicateCourse=function(){if(a.duplicateCourse={name:a.originalCourse.name,year:(new Date).getFullYear(),term:a.originalCourse.term,sandbox:a.originalCourse.sandbox,date:{course_start:{date:null,time:(new Date).setHours(0,0,0,0)},course_end:{date:null,time:(new Date).setHours(23,59,0,0)}}},a.originalCourse.id){if(a.originalCourse.start_date){var e=m(r(),a.originalCourse.start_date);a.duplicateCourse.date.course_start.date=p(a.originalCourse.start_date,e).toDate(),a.originalCourse.end_date&&(a.duplicateCourse.date.course_end.date=p(a.originalCourse.end_date,e).toDate())}a.originalAssignments=[],a.duplicateAssignments=[],n.get({courseId:a.originalCourse.id}).$promise.then(function(e){a.originalAssignments=e.objects,a.adjustDuplicateAssignmentDates()})}},a.canGoBack=function(e){return e.$pristine||confirm("Are you sure you want to leave this page? Any dates you\'ve manually changed for assignments here will be lost.")},a.adjustDuplicateAssignmentDates=function(){var t=null;a.originalCourse.start_date?t=r(a.originalCourse.start_date).startOf("isoWeek"):0<a.originalAssignments.length&&(t=r(a.originalAssignments[0].answer_start).startOf("isoWeek"),angular.forEach(a.originalAssignments,function(e){var n=r(e.answer_start).startOf("isoWeek");n<t&&(t=n)}));var s=m(a.duplicateCourse.date.course_start.date,t);a.duplicateAssignments=[],angular.forEach(a.originalAssignments,function(e){var n={id:e.id,name:e.name,date:{astart:{date:null,time:(new Date).setHours(0,0,0,0)},aend:{date:null,time:(new Date).setHours(23,59,0,0)},cstart:{date:null,time:(new Date).setHours(0,0,0,0)},cend:{date:null,time:(new Date).setHours(23,59,0,0)}}};n.date.astart.date=p(e.answer_start,s).toDate(),n.date.astart.time=r(e.answer_start).toDate(),n.date.aend.date=p(e.answer_end,s).toDate(),n.date.aend.time=r(e.answer_end).toDate(),e.compare_start&&(n.date.cstart.date=p(e.compare_start,s).toDate(),n.date.cstart.time=r(e.compare_start).toDate()),e.compare_end&&(n.date.cend.date=p(e.compare_end,s).toDate(),n.date.cend.time=r(e.compare_end).toDate()),e.compare_start&&e.compare_end&&(n.availableCheck=!0),a.duplicateAssignments.push(n)})},a.datePickerOpen=function(e,n){e.preventDefault(),e.stopPropagation(),n.opened=!0},a.datePickerMinDate=function(){var e=Array.prototype.slice.call(arguments).filter(function(e){return null!=e});return 0==e.length?null:r(e.reduce(function(e,n){return r(e)>r(n)?e:n},e[0])).toDate()},a.datePickerMaxDate=function(){var e=Array.prototype.slice.call(arguments).filter(function(e){return null!=e});return 0==e.length?null:r(e.reduce(function(e,n){return r(e)<r(n)?e:n},e[0])).toDate()},a.duplicate=function(){if(a.submitted=!0,a.duplicateCourse.assignments=[],null!=a.duplicateCourse.date.course_start.date?a.duplicateCourse.start_date=u(a.duplicateCourse.date.course_start):a.duplicateCourse.start_date=null,null!=a.duplicateCourse.date.course_end.date?a.duplicateCourse.end_date=u(a.duplicateCourse.date.course_end):a.duplicateCourse.end_date=null,null!=a.duplicateCourse.start_date&&null!=a.duplicateCourse.end_date&&a.duplicateCourse.start_date>a.duplicateCourse.end_date)return c.warning("Course Not Duplicated","Please set course end time after course start time and try again."),void(a.submitted=!1);for(var e=0;e<a.duplicateAssignments.length;e++){var n=a.duplicateAssignments[e],t={id:n.id,name:n.name,answer_start:u(n.date.astart),answer_end:u(n.date.aend),compare_start:u(n.date.cstart),compare_end:u(n.date.cend)};if(t.answer_start>=t.answer_end)return c.warning("Assignment Not Duplicated","Please set answer end time after answer start time and try again."),void(a.submitted=!1);if(n.availableCheck&&t.answer_start>t.compare_start)return c.warning("Assignment Not Duplicated","Please double-check the answer and comparison start and end times for mismatches and try again."),void(a.submitted=!1);if(n.availableCheck&&t.compare_start>=t.compare_end)return c.warning("Assignment Not Duplicated","Please set comparison end time after comparison start time and try again."),void(a.submitted=!1);n.availableCheck||(t.compare_start=null,t.compare_end=null),a.duplicateCourse.assignments.push(t)}i.createDuplicate({id:a.originalCourse.id},a.duplicateCourse,function(e){c.success("Course Duplicated"),o.expirePermissions();var n=e;submitted=!1,a.closeDuplicate?a.closeDuplicate(n.id):s.path("/course/"+e.id)}).$promise.finally(function(){a.submitted=!1})};var d=function(e,n){angular.equals(e,n)||a.setupDuplicateCourse()};void 0===a.originalCourse?i.get({id:t.courseId}).$promise.then(function(e){a.originalCourse=e,a.$watchCollection("originalCourse",d),a.setupDuplicateCourse()}):(a.$watchCollection("originalCourse",d),a.setupDuplicateCourse())}]),e.controller("CourseController",["$scope","$route","$routeParams","$location","Session","CourseResource","Toaster","EditorOptions","resolvedData",function(e,n,t,s,a,r,o,i,c){e.courseId=t.courseId,e.course=c.course||{},e.loggedInUserId=c.loggedInUser.id,e.editorOptions=i.basic,e.method=e.course.id?"edit":"create",e.format="dd-MMMM-yyyy",e.date={course_start:{date:null,time:(new Date).setHours(0,0,0,0)},course_end:{date:null,time:(new Date).setHours(23,59,0,0)}},"create"==e.method?e.course.year=(new Date).getFullYear():"edit"==e.method&&(e.date.course_start.date=null!=e.course.start_date?new Date(e.course.start_date):null,e.date.course_end.date=null!=e.course.end_date?new Date(e.course.end_date):null,e.date.course_start.time=new Date(e.course.start_date),e.date.course_end.time=new Date(e.course.end_date)),e.datePickerOpen=function(e,n){e.preventDefault(),e.stopPropagation(),n.opened=!0},e.save=function(){if(e.submitted=!0,null!=e.date.course_start.date?e.course.start_date=u(e.date.course_start):e.course.start_date=null,null!=e.date.course_end.date?e.course.end_date=u(e.date.course_end):e.course.end_date=null,null!=e.course.start_date&&null!=e.course.end_date&&e.course.start_date>e.course.end_date)return o.warning("Course Not Saved","Please set course end time after course start time and save again."),void(e.submitted=!1);r.save({id:e.course.id},e.course,function(e){o.success("Course Saved"),a.expirePermissions(),s.path("/course/"+e.id)}).$promise.finally(function(){e.submitted=!1})}}])}(),function(){var e=angular.module("ubc.ctlt.compair.criterion",["ngResource","ui.bootstrap","ubc.ctlt.compair.common.form","ubc.ctlt.compair.rich.content","ubc.ctlt.compair.toaster"]);e.factory("CriterionResource",["$resource",function(e){return e("/api/criteria/:criterionId",{criterionId:"@id"})}]),e.controller("CriterionModalController",["$scope","CriterionResource","Toaster","EditorOptions","$uibModalInstance",function(n,t,s,e,a){n.criterion=n.criterion||{},n.method=n.criterion.id?"edit":"create",n.modalInstance=a,n.editorOptions=e.basic,n.submitted=!1,"edit"==n.method&&(n.criterion=t.get({criterionId:n.criterion.id})),n.criterionSubmit=function(){n.submitted=!0;var e=angular.copy(n.criterion);e.public&&(e.id=null,e.public=!1),t.save({},e).$promise.then(function(e){n.criterion=e,s.success("Criterion Saved"),a.close(n.criterion)}).finally(function(){n.submitted=!1})}}])}(),function(){var e=angular.module("ubc.ctlt.compair.gradebook",["ngResource","ngRoute","localytics.directives","ubc.ctlt.compair.common.xapi","ubc.ctlt.compair.course","ubc.ctlt.compair.group","ubc.ctlt.compair.toaster"]);e.factory("GradebookResource",["$resource",function(e){return e("/api/courses/:courseId/assignments/:assignmentId/gradebook")}]),e.controller("GradebookController",["$scope","$window","$routeParams","CourseResource","GradebookResource","GroupResource","AssignmentResource","Authorize","Toaster","xAPIStatementHelper","$filter",function(t,e,n,s,a,r,o,i,c,l,d){t.users=[],t.gradebookFilters={student:null,group:null};var u={};t.isNumber=angular.isNumber,t.gradebook=[],s.getStudents({id:t.courseId}).$promise.then(function(e){t.allStudents=e.objects,t.users=e.objects,u=t.getUserIds(e.objects)}),a.get({courseId:t.courseId,assignmentId:t.assignmentId}).$promise.then(function(e){t.gradebook=e.gradebook,t.showAttachments=!1,t.gradebook.forEach(function(e){e.file&&(t.showAttachments=!0),e.download_file_name="",e.user.student_number&&(e.download_file_name=e.user.student_number+" "),e.download_file_name+=e.user.fullname}),t.totalComparisonsRequired=e.total_comparisons_required,t.includeScores=e.include_scores,t.includeSelfEval=e.include_self_evaluation},function(e){t.gradebook=[]}),i.can(i.MANAGE,o.MODEL,t.courseId).then(function(e){t.canManageAssignment=e,t.canManageAssignment&&r.get({courseId:t.courseId}).$promise.then(function(e){t.groups=e.objects})}),t.groupFilter=function(){return function(e){return e.user&&e.user.id in u}};t.$watchCollection("gradebookFilters",function(e,n){angular.equals(e,n)||(n.group!=e.group&&((t.gradebookFilters.student=null)==t.gradebookFilters.group?(u=t.getUserIds(t.allStudents),t.users=t.allStudents):r.get({courseId:t.courseId,groupName:t.gradebookFilters.group}).$promise.then(function(e){t.users=e.students,u=t.getUserIds(e.students)})),n.student!=e.student&&(u={},null==t.gradebookFilters.student?u=t.getUserIds(t.users):u[t.gradebookFilters.student.id]=1),l.filtered_page_section("participation tab",t.gradebookFilters),t.updateAnswerList())}),t.updateTableOrderBy=function(e){t.reverse=t.predicate==e&&!t.reverse,t.predicate=e;var n=t.predicate+" "+(t.reverse?"desc":"asc");l.sorted_page_section("participation tab",n)}}])}(),function(){var e=angular.module("ubc.ctlt.compair.group",["ngResource","ubc.ctlt.compair.attachment","ubc.ctlt.compair.common.form","ubc.ctlt.compair.common.interceptor","ubc.ctlt.compair.login","ubc.ctlt.compair.toaster","ubc.ctlt.compair.oauth","ui.bootstrap"]);e.factory("GroupResource",["$resource","Interceptors",function(e,n){var t="/api/courses/:courseId/groups/:groupName",s="/api/courses/:courseId/users/:userId/groups",a=e(t,{groupName:"@groupName"},{get:{cache:!0,url:t},getAllFromSession:{url:t,interceptor:n.groupSessionInterceptor},updateUsersGroup:{method:"POST",url:"/api/courses/:courseId/users/groups/:groupName",interceptor:n.enrolCache},removeUsersGroup:{method:"POST",url:"/api/courses/:courseId/users/groups",interceptor:n.enrolCache},enrol:{method:"POST",url:s+"/:groupName",interceptor:n.enrolCache},unenrol:{method:"DELETE",url:s,interceptor:n.enrolCache}});return a.MODEL="Group",a}]),e.controller("AddGroupModalController",["$rootScope","$scope","$uibModalInstance",function(e,n,t){n.group={},n.modalInstance=t,n.groupSubmit=function(){t.close(n.group.name)}}])}(),angular.module("ubc.ctlt.compair.home",["ngSanitize","ubc.ctlt.compair.common.xapi","ubc.ctlt.compair.authentication","ubc.ctlt.compair.authorization","ubc.ctlt.compair.course","ubc.ctlt.compair.toaster","ubc.ctlt.compair.user","ui.bootstrap"]).controller("HomeController",["$rootScope","$scope","$location","AssignmentResource","Authorize","CourseResource","Toaster","UserResource","$uibModal","xAPIStatementHelper","resolvedData",function(e,t,n,s,a,r,o,i,c,l,d){t.totalNumCourses=0,t.courseFilters={page:1,perPage:10,search:null,includeSandbox:null},t.canAddCourse=d.canAddCourse,t.loggedInUserId=d.loggedInUser.id,t.canManageUsers=d.canManageUsers,t.updateCourseList=function(){i.getUserCourses(t.courseFilters).$promise.then(function(e){t.courses=e.objects,t.totalNumCourses=e.total,_.forEach(t.courses,function(n){a.can(a.MANAGE,s.MODEL,n.id).then(function(e){n.canManageAssignment=e}),a.can(a.EDIT,r.MODEL,n.id).then(function(e){n.canEditCourse=e}),a.can(a.DELETE,r.MODEL,n.id).then(function(e){n.canDeleteCourse=e}),n.lti_linked&&(n.delete_warning="This will also unlink all LTI links from this course.")});var n=t.courses.map(function(e){return e.id});0<n.length&&i.getUserCoursesStatus({ids:n.join(",")}).$promise.then(function(e){var n=e.statuses;_.forEach(t.courses,function(e){e.status=n[e.id]})})})},t.deleteCourse=function(e){r.delete({id:e.id},function(e){o.success("Course Deleted"),t.updateCourseList()})},t.updateCourseList(),t.$watchCollection("courseFilters",function(e,n){angular.equals(e,n)||(n.search!=e.search&&(t.courseFilters.page=1),""===e.search&&(t.courseFilters.search=null),l.filtered_page(t.courseFilters),t.updateCourseList())})}]),function(){var e=angular.module("ubc.ctlt.compair.login",["ngAnimate","ngResource","ngRoute","ui.bootstrap","ubc.ctlt.compair.authentication","ubc.ctlt.compair.authorization","ubc.ctlt.compair.user","ubc.ctlt.compair.lti"]);e.factory("LoginResource",["$resource",function(e){return e("/api/:operation",{},{login:{method:"POST",params:{operation:"login"}},logout:{method:"DELETE",params:{operation:"logout"}}})}]),e.factory("DemoResource",["$resource",function(e){var n=e("/api/demo/",{save:{method:"POST"}});return n.MODEL="User",n.prototype.isLoggedIn=function(){return this.hasOwnProperty("id")},n}]),e.constant("AuthTypesEnabled",{app:!0,cas:!0,lti:!0,demo:!1}),e.directive("autoFocus",["$timeout",function(s){return{restrict:"AC",link:function(e,n,t){s(function(){n[0].focus()},100)}}}]),e.run(["$rootScope","$route","$location","$log","$uibModal","$cacheFactory","AuthenticationService","Toaster","$http",function(t,e,n,s,a,r,o,i,c){var l,d=t.$new(),u=!1;t.displayCreateUser=function(){d.showCreateUserForm=!0,d.showComPAIRAccountFieldsCreateUserForm=!1},t.showLoginWithCreateUser=function(){d.allowCreateUser=!0,d.showComPAIRAccountFieldsCreateUserForm=!0,t.showLogin()},t.showLogin=function(){u||(l=a.open({backdrop:"static",controller:"LoginController",templateUrl:"modules/login/login-partial.html",keyboard:!1,scope:d}),u=!0)},t.hideLogin=function(){l&&(l.close(),d=t.$new()),u=!1},t.$on(o.LOGIN_REQUIRED_EVENT,t.showLogin),t.$on(o.LTI_LOGIN_REQUIRED_EVENT,t.showLoginWithCreateUser),t.$on(o.AUTH_LOGIN_REQUIRED_EVENT,t.displayCreateUser),t.$on(o.LOGIN_EVENT,t.hideLogin),t.$on(o.LOGIN_FORBIDDEN_EVENT,function(e,n){"type"in n.data&&"CAS"==n.data.type&&(i.warning("Log In Failed","Please double-check your username and password and try again."),t.$broadcast(o.LOGIN_REQUIRED_EVENT))}),t.$on(o.LOGOUT_EVENT,function(){r.get("$http").removeAll();var e=r.get("classlist");e&&e.removeAll()})}]),e.controller("LoginController",["$rootScope","$scope","$location","$log","$route","AuthTypesEnabled","LoginResource","AuthenticationService","LTI","LTIResource","SystemRole","DemoResource",function(e,n,t,s,a,r,o,i,c,l,d,u){n.submitted=!1,n.SystemRole=d,e.$on(i.LTI_LOGIN_REQUIRED_EVENT,function(){n.allowCreateUser=!0,n.showComPAIRAccountFieldsCreateUserForm=!0}),e.$on(i.AUTH_LOGIN_REQUIRED_EVENT,function(){n.showCreateUserForm=!0,n.showComPAIRAccountFieldsCreateUserForm=!1}),n.AuthTypesEnabled=r,n.AuthTypesEnabled.cas||r.demo||!n.AuthTypesEnabled.app||(n.showAppLogin=!0),n.createDemoAccount=function(e){u.save({system_role:e}).$promise.then(function(e){s.debug("Demo account creation successful!"),userid=e.user_id,s.debug("Login User ID: "+userid),i.login(!0).then(function(){n.login_err="",n.submitted=!1,"/"==t.path()?a.reload():t.path("/")},function(){s.error("Failed to retrieve logged in user\'s data: "+JSON.stringify(e)),n.login_err="Unable to retrieve user information, server problem?",n.submitted=!1})},function(e){s.debug("Login authentication failed."),e.data.error?n.login_err=e.data.error:n.login_err="Server error during authentication.",n.submitted=!1})},n.submit=function(){n.submitted=!0;var e={username:n.username,password:n.password};o.login(e).$promise.then(function(e){s.debug("Login authentication successful!"),userid=e.user_id,s.debug("Login User ID: "+userid),i.login().then(function(){n.login_err="",n.submitted=!1,a.reload()},function(){s.error("Failed to retrieve logged in user\'s data: "+JSON.stringify(e)),n.login_err="Unable to retrieve user information, server problem?",n.submitted=!1})},function(e){s.debug("Login authentication failed."),n.login_err=e.data.message?e.data.message:"Server error during authentication.",n.submitted=!1})}}]),e.controller("LogoutController",["$scope","$location","$log","$route","LoginResource","AuthenticationService","Toaster",function(e,n,t,s,a,r,o){e.logout=function(){return a.logout().$promise.then(function(e){t.debug("Logging out user successful."),r.logout(),"redirect"in e?window.location=e.redirect:(n.path("/"),s.reload())})}}])}(),function(){var e=angular.module("ubc.ctlt.compair.lti.consumer",["ngResource","ngRoute","ng-breadcrumbs","ui.bootstrap","LocalStorageModule","ubc.ctlt.compair.authentication","ubc.ctlt.compair.authorization","ubc.ctlt.compair.toaster","ubc.ctlt.compair.user","ubc.ctlt.compair.course","ubc.ctlt.compair.lti"]);e.factory("LTIConsumerResource",["$resource",function(e){var n=e("/api/lti/consumers/:id",{id:"@id"});return n.MODEL="LTIConsumer",n}]),e.controller("LTIConsumerListController",["$scope","$location","$route","$routeParams","UserResource","LTIConsumerResource","Toaster","breadcrumbs","xAPIStatementHelper","resolvedData",function(t,e,n,s,a,r,o,i,c,l){t.canManageUsers=l.canManageUsers,t.totalNumConsumers=0,t.consumerFilters={page:1,perPage:20,orderBy:null,reverse:null},t.canManageUsers||e.path("/"),t.updateTableOrderBy=function(e){t.reverse=t.predicate==e&&!t.reverse,t.predicate=e,t.consumerFilters.orderBy=t.predicate,t.consumerFilters.reverse=!!t.reverse||null},t.updateConsumerList=function(){r.get(t.consumerFilters).$promise.then(function(e){t.consumers=e.objects,t.totalNumConsumers=e.total})},t.updateConsumerList(),t.updateConsumer=function(e){r.save(e).$promise.then(function(e){e.active?o.success("LTI Consumer Activated"):o.success("LTI Consumer Deactivated"),t.updateConsumerList()})};t.$watchCollection("consumerFilters",function(e,n){angular.equals(e,n)||(n.orderBy!=e.orderBy&&(t.consumerFilters.page=1),c.filtered_page(t.consumerFilters),t.updateConsumerList())})}]),e.controller("LTIConsumerViewController",["$scope","$location","$route","$routeParams","UserResource","LTIConsumerResource","Toaster","breadcrumbs","xAPIStatementHelper","resolvedData",function(n,e,t,s,a,r,o,i,c,l){n.consumerId=s.consumerId,n.launchUrl=e.absUrl().replace("app/#"+e.url(),"")+"api/lti/auth",n.consumer=l.consumer||{},n.canManageUsers=l.canManageUsers,n.canManageUsers||e.path("/"),n.updateConsumerActive=function(){r.save(n.consumer).$promise.then(function(e){(n.consumer=e).active?o.success("LTI Consumer Activated"):o.success("LTI Consumer Deactivated")})}}]),e.controller("LTIConsumerWriteController",["$scope","$location","$route","$routeParams","UserResource","LTIConsumerResource","Toaster","breadcrumbs","xAPIStatementHelper","resolvedData",function(n,t,e,s,a,r,o,i,c,l){n.consumerId=s.consumerId,n.consumer=l.consumer||{},n.canManageUsers=l.canManageUsers,n.method=n.consumer.id?"edit":"create",n.submitted=!1,n.canManageUsers||t.path("/"),n.save=function(){n.submitted=!0,r.save(n.consumer).$promise.then(function(e){"create"==n.method?o.success("LTI Consumer Created"):"edit"==n.method&&o.success("LTI Consumer Updated"),t.path("/lti/consumer")}).finally(function(){n.submitted=!1})}}])}(),function(){var e=angular.module("ubc.ctlt.compair.lti.context",["ngResource","ngRoute","ng-breadcrumbs","ui.bootstrap","LocalStorageModule","ubc.ctlt.compair.authentication","ubc.ctlt.compair.authorization","ubc.ctlt.compair.toaster","ubc.ctlt.compair.user","ubc.ctlt.compair.course","ubc.ctlt.compair.lti"]);e.factory("LTIContextLinkResource",["$resource","Interceptors",function(e,n){var t=e("/api/lti/course/:course_id/context/:context_id",{course_id:"@course_id",context_id:"@context_id"},{get:{method:"GET"},linkCourse:{method:"POST",interceptor:n.contextCacheLTI},unlinkCourse:{method:"DELETE",interceptor:n.contextCacheLTI}});return t.MODEL="LTIContext",t}]),e.controller("LTIContextListController",["$scope","LTIContextLinkResource","Toaster","xAPIStatementHelper",function(t,n,s,a){t.course=null,t.totalNumContexts=0,t.contextFilters={page:1,perPage:20,orderBy:null,reverse:null,search:null},t.updateTableOrderBy=function(e){t.reverse=t.predicate==e&&!t.reverse,t.predicate=e,t.contextFilters.orderBy=t.predicate,t.contextFilters.reverse=!!t.reverse||null},t.updateContextList=function(){var e=angular.copy(t.contextFilters);n.get(e).$promise.then(function(e){t.contexts=e.objects,t.totalNumContexts=e.total})},t.updateContextList(),t.unlinkContext=function(e){n.unlinkCourse({course_id:e.compair_course_id,context_id:e.id}).$promise.then(function(e){s.success("Course Unlink","Successfully unlinked the ComPAIR course as requested from the external source."),t.updateContextList()})};t.$watchCollection("contextFilters",function(e,n){angular.equals(e,n)||(n.orderBy!=e.orderBy&&(t.contextFilters.page=1),n.search!=e.search&&(t.contextFilters.page=1),""===e.search&&(t.contextFilters.search=null),a.filtered_page(t.contextFilters),t.updateContextList())})}])}(),function(){var e=angular.module("ubc.ctlt.compair.lti",["ngResource","ngRoute","ng-breadcrumbs","ui.bootstrap","LocalStorageModule","ubc.ctlt.compair.authentication","ubc.ctlt.compair.authorization","ubc.ctlt.compair.toaster","ubc.ctlt.compair.user","ubc.ctlt.compair.course","ubc.ctlt.compair.lti.context"]);e.factory("LTIResource",["$resource","Interceptors",function(e,n){return e("/api/lti",{},{getStatus:{url:"/api/lti/status"},getMembershipStatus:{method:"GET",url:"/api/lti/course/:id/membership/status"},updateMembership:{method:"POST",url:"/api/lti/course/:id/membership",interceptor:n.enrolCacheLTI}})}]),e.factory("LTI",["$rootScope","$q","localStorageService","LTIResource",function(e,n,t,s){return{_lti_status:null,_check_storage:function(){if(null==this._lti_status){var e=t.get("lti_status");e&&(this._lti_status=e)}},ltiLinkUser:function(){return this._check_storage(),null!=this._lti_status&&this._lti_status.user&&0==this._lti_status.user.exists},clearStatus:function(){this._lti_status=null,t.remove("lti_status")},getStatus:function(){var n=this;return s.getStatus().$promise.then(function(e){return n._lti_status=e.status,t.set("lti_status",n._lti_status),n._lti_status})},isLTISession:function(){return this._check_storage(),this._lti_status&&this._lti_status.valid},getLTIUser:function(){return this._check_storage(),this.isLTISession()?this._lti_status.user:{}},getCourseName:function(){return this._check_storage(),this._lti_status?this._lti_status.course.name:""}}}]),e.controller("LTIController",["$rootScope","$scope","$location","$route","$uibModal","breadcrumbs","CourseRole","Toaster","AuthenticationService","LTI","LTIContextLinkResource","Session","xAPIStatementHelper","resolvedData",function(e,n,t,s,a,r,o,i,c,l,d,u,m,p){if(n.status=p.ltiStatus,n.status.valid)if(n.status.user.exists)if(n.status.course.exists)n.status.assignment.exists?t.path("/course/"+n.status.course.id+"/assignment/"+n.status.assignment.id):t.path("/course/"+n.status.course.id);else if(n.status.course.course_role==o.instructor){var g=n.$new(),h=a.open({animation:!0,backdrop:"static",keyboard:!1,controller:"CourseSelectModalController",templateUrl:"modules/course/course-select-partial.html",scope:g});h.opened.then(function(){m.opened_modal("Select Course")}),h.result.then(function(e){d.linkCourse({course_id:e},{},function(e){u.expirePermissions(),i.success("Course Linked","Successfully linked your ComPAIR course as requested with an external source."),s.reload()}),m.closed_modal("Select Course")},function(){s.reload(),m.closed_modal("Select Course")})}else i.warning("Course Not Yet Ready","Please wait for your instructor to set up the course and try accessing again."),t.path("/");else u.destroy(),e.$emit(c.LTI_LOGIN_REQUIRED_EVENT);else l.destroy_lit_status(),t.path("/")}])}(),function(){var e=angular.module("ubc.ctlt.compair.navbar",["ng-breadcrumbs","ngRoute","ubc.ctlt.compair.login","ubc.ctlt.compair.authentication","ubc.ctlt.compair.course","ubc.ctlt.compair.login","ubc.ctlt.compair.assignment","ubc.ctlt.compair.user"]);e.component("navbarComponent",{controller:"NavbarController",templateUrl:"modules/navbar/navbar-partial.html"}),e.controller("NavbarController",["$scope","$log","$routeParams","breadcrumbs","AuthTypesEnabled","Session","AuthenticationService","Authorize","CourseResource","UserResource","AssignmentResource",function(t,n,e,s,a,r,o,i,c,l,d){t.breadcrumbs=s,t.isCollapsed=!0,t.AuthTypesEnabled=a,t.getPermissions=function(){r.getUser({bypassErrorsInterceptor:!0}).then(function(e){t.loggedInUser=e,n.debug("Logged in as "+t.loggedInUser.username),i.can(i.CREATE,l.MODEL).then(function(e){t.canCreateUsers=e}),i.can(i.MANAGE,l.MODEL).then(function(e){t.canManageUsers=e}),i.can(i.CREATE,c.MODEL).then(function(e){t.canCreateCourses=e}),i.can(i.MANAGE,d.MODEL).then(function(e){t.canManageAssignments=e})})},t.setInCourse=function(){t.courseId=e.courseId,t.courseId&&c.get({id:t.courseId}).$promise.then(function(e){s.options={"Course Assignments":e.name}})},t.setInCourse(),t.$on("$routeChangeSuccess",function(e,n){t.setInCourse()}),t.getPermissions(),t.$on(o.LOGIN_EVENT,function(){t.getPermissions()}),t.$on(r.PERMISSION_REFRESHED_EVENT,function(){t.getPermissions()}),t.showLogin=function(){t.$emit(o.LOGIN_REQUIRED_EVENT)}}])}(),function(){var e=angular.module("ubc.ctlt.compair.oauth",["ngResource","ngRoute","ubc.ctlt.compair.session","ubc.ctlt.compair.authorization"]);e.constant("ThirdPartyAuthType",{cas:"CAS"}),e.controller("OAuthController",["$rootScope","$scope","$route","$location","Session","LTI","AuthenticationService","resolvedData",function(e,n,t,s,a,r,o,i){e.$emit(o.AUTH_LOGIN_REQUIRED_EVENT),a.getUser({bypassErrorsInterceptor:!0}).then(function(e){r.isLTISession()?s.path("/lti"):s.path("/")})}])}(),function(){var e=angular.module("ubc.ctlt.compair.report",["ngResource","ubc.ctlt.compair.common.form","ubc.ctlt.compair.course","ubc.ctlt.compair.toaster"]);e.factory("ReportResource",["$q","$routeParams","$resource",function(e,n,t){var s=t("/api/courses/:id/report",{id:"@id"});return s.MODEL="Course",s}]),e.controller("ReportCreateController",["$scope","$log","CourseResource","ReportResource","UserResource","GroupResource","AssignmentResource","Toaster","resolvedData",function(n,e,t,s,a,r,o,i,c){n.courses=c.coursesAsInstructor.courses,n.report={},n.assignments=[],n.groups=[];var l={id:"all",name:"All Assignments"},d={name:"All Groups",value:"all"};n.types=[{id:"participation",name:"Basic Participation Report"},{id:"participation_stat",name:"Participation Report for Research Teams"},{id:"peer_feedback",name:"Compiled Peer Feedback Report"}],n.changeReport=function(){n.reportFile=null},n.getAssignments=function(){(n.reportFile=null)!=n.report.course_id?(r.get({courseId:n.report.course_id}).$promise.then(function(e){n.report.group_name="all",n.groups=[],_.each(e.objects,function(e){n.groups.push({name:e,value:e})}),0<n.groups.length&&n.groups.push(d)}),o.get({courseId:n.report.course_id}).$promise.then(function(e){n.report.assignment=null,0<e.objects.length&&e.objects.push(l),n.assignments=e.objects})):n.assignments=[]},n.reportSubmit=function(){n.reportFile=null,n.submitted=!0;var e=angular.copy(n.report);"all"==e.assignment&&delete e.assignment,"all"==e.group_name&&delete e.group_name,s.save({id:e.course_id},e).$promise.then(function(e){n.reportFile=e.file}).finally(function(){n.submitted=!1})}}])}(),angular.module("ubc.ctlt.compair.toaster",["toaster"]).factory("Toaster",["toaster",function(e){return e.success=function(e,n){this.pop("success",e,n,5e3)},e.info=function(e,n){this.pop("info",e,n,1e4)},e.warning=function(e,n){this.pop("warning",e,n,1e4)},e.error=function(e,n){this.pop("error",e,n,1e4)},e}]),function(){var e=angular.module("ubc.ctlt.compair.user",["ngResource","ngRoute","ng-breadcrumbs","ubc.ctlt.compair.login","ubc.ctlt.compair.session","ubc.ctlt.compair.authorization","ubc.ctlt.compair.toaster"]);e.factory("UserResource",["$resource",function(e){var n=e("/api/users/:id",{id:"@id"},{getUserCourses:{url:"/api/users/courses"},getUserCoursesById:{url:"/api/users/:id/courses"},getUserCoursesStatus:{url:"/api/users/courses/status"},getTeachingUserCourses:{url:"/api/users/courses/teaching"},getEditButton:{url:"/api/users/:id/edit"},updateNotifcations:{method:"POST",url:"/api/users/:id/notification"},password:{method:"POST",url:"/api/users/:id/password"}});return n.MODEL="User",n.prototype.isLoggedIn=function(){return this.hasOwnProperty("id")},n}]),e.factory("UserLTIUsersResource",["$resource",function(e){var n=e("/api/users/:id/lti/users",{id:"@id"},{deleteById:{method:"DELETE",url:"/api/users/:id/lti/users/:ltiUserId"}});return n.MODEL="User",n}]),e.factory("UserThirdPartyUsersResource",["$resource",function(e){var n=e("/api/users/:id/third_party/users",{id:"@id"},{deleteById:{method:"DELETE",url:"/api/users/:id/third_party/users/:thirdPartyUserId"}});return n.MODEL="User",n}]),e.constant("UserSettings",{notifications:!1,expose_email_to_instructor:!1,allow_student_change_name:!0,allow_student_change_display_name:!0,allow_student_change_student_number:!0,allow_student_change_email:!0}),e.constant("SystemRole",{student:"Student",instructor:"Instructor",sys_admin:"System Administrator"}),e.constant("EmailNotificationMethod",{enable:"enable",disable:"disable"}),e.constant("CourseRole",{dropped:"Dropped",instructor:"Instructor",teaching_assistant:"Teaching Assistant",student:"Student"}),e.controller("UserWriteController",["$scope","$route","$routeParams","$location","breadcrumbs","Session","AuthTypesEnabled","UserResource","SystemRole","Toaster","resolvedData","UserSettings","EmailNotificationMethod","$uibModal",function(n,e,t,s,a,r,o,i,c,l,d,u,m,p){n.userId=t.userId,n.user=d.user||{},n.canManageUsers=d.canManageUsers,n.loggedInUser=d.loggedInUser,n.ownProfile=n.loggedInUser.id==n.userId,n.loggedInUserIsStudent=n.loggedInUser.system_role==c.student,n.method=n.user.id?"edit":"create",n.password={},n.UserSettings=u,n.EmailNotificationMethod=m,n.AuthTypesEnabled=o,n.SystemRole=c,n.system_roles=[c.student,c.instructor,c.sys_admin],n.canManageUsers||n.system_roles.pop(),"edit"==n.method?a.options={"View User":"{0}\'s Profile".format(n.user.displayname)}:"create"==n.method&&(n.user.uses_compair_login=!0,n.user.email_notification_method=m.enable,n.user.system_role=c.student),n.save=function(){n.submitted=!0,i.save({id:n.userId},n.user,function(e){"edit"==n.method?l.success("User Saved"):"create"==n.method&&l.success("User Saved","This user now has access to ComPAIR."),n.ownProfile&&n.user.displayname!=n.loggedInUser.displayname&&r.refresh(),s.path("/user/"+e.id)}).$promise.finally(function(){n.submitted=!1})},n.showPasswordModal=function(){var e=n.$new();e.user=angular.copy(n.user),n.modalInstance=p.open({animation:!0,backdrop:"static",controller:"UserPasswordModalController",templateUrl:"modules/user/user-password-modal-partial.html",scope:e})}}]),e.controller("UserPasswordModalController",["$scope","UserResource","Toaster","$uibModalInstance",function(n,e,t,s){n.modalInstance=s,n.submitted=!1,n.password={},n.changePassword=function(){n.submitted=!0,e.password({id:n.user.id},n.password,function(e){t.success("Password Saved"),n.modalInstance.close(),n.password={}}).$promise.finally(function(){n.submitted=!1})}}]),e.controller("UserViewController",["$scope","$routeParams","breadcrumbs","SystemRole","resolvedData","UserResource","UserSettings","EmailNotificationMethod","Toaster",function(e,n,t,s,a,r,o,i,c){e.userId=n.userId,e.user=a.user,e.showEditButton=a.userEditButton,e.canManageUsers=a.canManageUsers,e.loggedInUser=a.loggedInUser,e.ownProfile=e.loggedInUser.id==e.userId,e.loggedInUserIsInstructor=e.loggedInUser.system_role==s.instructor,e.UserSettings=o,e.EmailNotificationMethod=i,e.SystemRole=s,t.options={"View User":"{0}\'s Profile".format(e.user.displayname)},e.updateNotificationSettings=function(){e.submitted=!0,r.updateNotifcations({id:e.userId},e.user,function(e){c.success("Notifications Saved")}).$promise.finally(function(){e.submitted=!1})}}]),e.controller("UserListController",["$scope","$location","UserResource","Toaster","breadcrumbs","SystemRole","xAPIStatementHelper","resolvedData",function(t,e,n,s,a,r,o,i){t.loggedInUserId=i.loggedInUser.id,t.canManageUsers=i.canManageUsers,t.predicate="lastname",t.reverse=!1,t.users=[],t.totalNumUsers=0,t.userFilters={page:1,perPage:20,search:null,orderBy:null,reverse:null},t.canManageUsers||e.path("/"),t.updateUser=function(e){n.save({id:e.id},e,function(e){s.success("User Saved"),$route.reload()})},t.updateTableOrderBy=function(e){t.reverse=t.predicate==e&&!t.reverse,t.predicate=e,t.userFilters.orderBy=t.predicate,t.userFilters.reverse=!!t.reverse||null},t.updateUserList=function(){n.get(t.userFilters).$promise.then(function(e){t.users=e.objects,t.totalNumUsers=e.total})},t.updateUserList();t.$watchCollection("userFilters",function(e,n){angular.equals(e,n)||(n.search!=e.search&&(t.userFilters.page=1),n.orderBy!=e.orderBy&&(t.userFilters.page=1),""===e.search&&(t.userFilters.search=null),o.filtered_page(t.userFilters),t.updateUserList())})}]),e.controller("UserManageController",["$scope","$location","$route","$routeParams","UserResource","CourseResource","GroupResource","UserLTIUsersResource","UserThirdPartyUsersResource","ClassListResource","Toaster","breadcrumbs","CourseRole","AuthTypesEnabled","xAPIStatementHelper","moment","resolvedData",function(t,e,s,n,a,r,o,i,c,l,d,u,m,p,g,h,f){t.userId=n.userId,t.user=f.user,t.canManageUsers=f.canManageUsers,t.totalNumCourses=0,t.courseFilters={page:1,perPage:20,search:null,orderBy:null,reverse:null,includeSandbox:null},t.third_party_users=f.userThirdPartyUsers.objects,t.lti_users=f.userLTIs.objects,t.AuthTypesEnabled=p,u.options={"User Courses & Accounts":"{0}\'s Courses & Accounts".format(t.user.displayname)},t.course_roles=[m.student,m.teaching_assistant,m.instructor],t.canManageUsers||e.path("/"),t.updateTableOrderBy=function(e){t.reverse=t.predicate==e&&!t.reverse,t.predicate=e,t.courseFilters.orderBy=t.predicate,t.courseFilters.reverse=!!t.reverse||null},t.updateCourseList=function(){var e=angular.merge({id:t.userId},t.courseFilters);a.getUserCoursesById(e).$promise.then(function(e){t.courses=e.objects,_.forEach(t.courses,function(n){n.completed=n.end_date&&h().isAfter(n.end_date),n.before_start=n.start_date&&h().isBefore(n.start_date),n.in_progress=!(n.completed||n.before_start),n.groups=[],o.get({courseId:n.id}).$promise.then(function(e){n.groups=e.objects})}),t.totalNumCourses=e.total})},t.updateCourseList(),t.dropCourse=function(e){l.unenrol({courseId:e.id,userId:t.userId},function(e){d.success("User Dropped"),s.reload()})},t.updateRole=function(e){l.enrol({courseId:e.id,userId:t.userId},e,function(e){d.success("User Saved","Successfully changed the user\'s course role to "+e.course_role+".")})},t.updateGroup=function(e){e.group_name&&""!=e.group_name?o.enrol({courseId:e.id,userId:t.userId,groupName:e.group_name},{},function(e){d.success("User Saved","Successfully added the user to group "+e.group_name+".")}):o.unenrol({courseId:e.id,userId:t.userId},function(e){d.success("User Removed From Group")})},t.unlinkLTI=function(e){var n={id:t.userId,ltiUserId:e.id};i.deleteById(n).$promise.then(function(e){d.success("LTI Unlink","Successfully unlinked the LTI user as requested."),s.reload()})},t.deleteThirdPartyUser=function(e){var n={id:t.userId,thirdPartyUserId:e.id};c.deleteById(n).$promise.then(function(e){d.success("Third Party User Delete","Successfully deleted the third party user as requested."),s.reload()})};t.$watchCollection("courseFilters",function(e,n){angular.equals(e,n)||(n.search!=e.search&&(t.courseFilters.page=1),n.orderBy!=e.orderBy&&(t.courseFilters.page=1),""===e.search&&(t.courseFilters.search=null),g.filtered_page(t.courseFilters),t.updateCourseList())})}])}(),angular.module("ubc.ctlt.compair.common").directive("compairAvatar",function(){return{restrict:"E",scope:{userId:"=",avatar:"=",mainIdentifier:"=?",secondaryIdentifier:"=?",me:"=?"},template:\'<a ng-href="#/user/{{ userId }}"><img src="//www.gravatar.com/avatar/{{ avatar }}?s=32&d=retro" alt="" /> </a><a ng-href="#/user/{{ userId }}">{{ mainIdentifier }}<span ng-if="me">{{ mainIdentifier ? " (You)" : "You" }}</span><span ng-if="secondaryIdentifier"> ({{ secondaryIdentifier }})</span></a>\'}}),function(){var e=angular.module("ubc.ctlt.compair.common.form",["ckeditor"]);e.directive("compairFieldWithFeedback",function(){return{restrict:"E",scope:{formControl:"="},transclude:!0,templateUrl:"modules/common/form-field-with-feedback-template.html"}}),e.directive("pwMatch",function(){return{require:"ngModel",link:function(e,n,t,s){var a="#"+t.pwMatch;n.add(a).on("keyup",function(){e.$apply(function(){var e=n.val()===$(a).val();s.$setValidity("pwMatch",e)})})}}}),e.directive("confirmFormExit",function(){return{require:"form",link:function(s,e,a,r){window.onbeforeunload=function(){return s.forcePreventExit?"Are you sure you want to refresh this page? Any unsaved changed you\'ve made will be lost.":"answer"==a.formType&&(s.answer.content||s.uploader.queue.length)&&s.preventExit&&r.$dirty?"Are you sure you want to refresh this page? Any unsaved changed you\'ve made will be lost.":"compare"==a.formType&&s.preventExit&&r.$dirty?"Are you sure you want to refresh this page? Any unsaved work you\'ve done for this round will be lost.":"comment"==a.formType&&s.preventExit&&r.$dirty?"Are you sure you want to refresh this page? Any unsaved changed you\'ve made will be lost.":void 0},s.$on("$locationChangeStart",function(e,n,t){if(s.forcePreventExit){if(!confirm("Are you sure you want to leave this page? Any unsaved changes you\'ve made will be lost."))return void e.preventDefault();s.trackExited&&"function"==typeof s.trackExited&&s.trackExited()}else if("answer"==a.formType&&s.preventExit){if((s.answer.content||s.uploader.queue.length)&&r.$dirty&&!confirm("Are you sure you want to leave this page? Any unsaved changes you\'ve made will be lost."))return void e.preventDefault();s.trackExited&&"function"==typeof s.trackExited&&s.trackExited()}else if("compare"==a.formType&&s.preventExit){if(r.$dirty&&!confirm("Are you sure you want to leave this page? Any unsaved work you\'ve done for this round will be lost."))return void e.preventDefault();s.trackExited&&"function"==typeof s.trackExited&&s.trackExited()}else if("comment"==a.formType&&s.preventExit){if(r.$dirty&&!confirm("Are you sure you want to leave this page? Any unsaved changes you\'ve made will be lost."))return void e.preventDefault();s.trackExited&&"function"==typeof s.trackExited&&s.trackExited()}})}}}),e.service("EditorOptions",function(){this.basic={customConfig:"",toolbarGroups:[{name:"clipboard",groups:["clipboard","undo"]},{name:"insert"},{name:"links"},{name:"forms"},{name:"others"},"/",{name:"basicstyles",groups:["basicstyles","cleanup"]},{name:"paragraph",groups:["list","indent","blocks","align","bidi"]},{name:"colors"}],removeButtons:"Cut,Copy,Paste,PasteText,PasteFromWord,Font,Anchor",format_tags:"p;h1;h2;h3;pre",removeDialogTabs:"image:advanced;link:advanced",codeSnippet_theme:"foundation",linkShowTargetTab:!1,height:"150px",extraPlugins:"codesnippet,combinedmath,autolink"}})}(),function(){"use strict";angular.module("ubc.ctlt.compair.common").constant("logoSettings",{path:"img/"}),angular.module("ubc.ctlt.compair.common").directive("compairLogo",["logoSettings",function(s){return{restrict:"E",scope:{type:"="},template:\'<img ng-src="{{logo}}" alt="{{alt}}" class="compair-logo" />\',link:function(e,n,t){e.alt="scale"==e.type?"ComPAIR Scale":"ComPAIR Logo",e.logo=s.path+"compair-logo-"+e.type+".png"}}}])}(),angular.module("ubc.ctlt.compair.common").directive("modalCancelButton",function(){return{restrict:"E",scope:{modalInstance:"="},template:\'<div class="clearfix"><p class="pull-right"><a href="" ng-click="cancel()">Cancel</a> </p></div>\',link:function(e,n,t){e.cancel=function(){e.modalInstance.dismiss()}}}}),function(){"use strict";angular.module("ubc.ctlt.compair.login").directive("loginCreateUserForm",["$route","$log","UserResource","SystemRole","Toaster","AuthTypesEnabled","AuthenticationService","LTI","UserSettings","EmailNotificationMethod",function(s,a,r,o,i,c,l,d,u,m){return{restrict:"E",scope:{uses_compair_login:"=usesCompairLogin"},templateUrl:"modules/user/user-form-partial.html",link:function(n,e,t){n.method="create",n.canManageUsers=!1,n.submitted=!1,n.password={},n.UserSettings=u,n.EmailNotificationMethod=m,n.AuthTypesEnabled=c,n.SystemRole=o,n.system_roles=[o.student,o.instructor,o.sys_admin],n.user={system_role:o.student,uses_compair_login:n.uses_compair_login,email_notification_method:m.enable},n.loggedInUserIsStudent=!0,d.getStatus().then(function(e){d.isLTISession()&&(n.user=d.getLTIUser(),n.user.uses_compair_login=n.uses_compair_login,n.user.email_notification_method=m.enable,n.loggedInUserIsStudent=n.user.system_role==o.student)}),n.save=function(){n.submitted=!0,r.save({},n.user,function(e){i.success("User Setup Complete"),l.login().then(function(){n.submitted=!1,s.reload()},function(){a.error("Failed to retrieve logged in user\'s data: "+JSON.stringify(e)),n.submitted=!1})}).$promise.finally(function(){n.submitted=!1})}}}}])}(),angular.module("ubc.ctlt.compair.rich.content.highlightjs",[]).directive("hljs",function(){return function(e,n,t,s){e.$watch(t.hljs,function(){$(n[0]).find("pre code").each(function(e,n){hljs.highlightBlock(n)})})}}),angular.module("ubc.ctlt.compair.rich.content.mathjax",[]).directive("mathjax",function(){return function(e,n,t,s){e.$watch(t.mathjax,function(){MathJax.Hub.Queue(["Typeset",MathJax.Hub,n[0]])})}}),function(){var e=angular.module("ubc.ctlt.compair.rich.content",["Kaltura.directives","ui.bootstrap","ubc.ctlt.compair.common.xapi","ubc.ctlt.compair.rich.content.mathjax","ubc.ctlt.compair.rich.content.highlightjs","ubc.ctlt.compair.rich.content.twttr"]);e.constant("embedRegexpPatterns",{basicVideo:/((?:https?|ftp|file):\\/\\/\\S*\\.(?:ogv|webm|mp4)(\\?([\\w=&_%\\-]*))?)/gi,basicAudio:/((?:https?|ftp|file):\\/\\/\\S*\\.(?:wav|mp3|ogg)(\\?([\\w=&_%\\-]*))?)/gi,basicImage:/((?:https?|ftp|file):\\/\\/\\S*\\.(?:gif|jpg|jpeg|tiff|png|svg|webp)(\\?([\\w=&_%\\-]*))?)/gi,pdf:/((?:https?|ftp|file):\\/\\/\\S*\\.(?:pdf)(\\?([\\w=&_%\\-]*))?)/gi,soundCloud:/soundcloud.com\\/[a-zA-Z0-9-_]+\\/[a-zA-Z0-9-_]+/gi,spotify:/spotify.com\\/track\\/[a-zA-Z0-9_]+/gi,vimeo:/vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/([^\\/]*)\\/videos\\/|album\\/(\\d+)\\/video\\/|)(\\d+)(?:$|\\/|\\?)*/gi,youtube:/(?:[0-9A-Z-]+\\.)?(?:youtu\\.be\\/|youtube\\.com(?:\\/embed\\/|\\/v\\/|\\/watch\\?v=|\\/ytscreeningroom\\?v=|\\/feeds\\/api\\/videos\\/|\\/user\\S*[^\\w\\-\\s]|\\S*[^\\w\\-\\s]))([\\w\\-]{11})[?=&+%\\w-]*/gi,twitter:/https:\\/\\/twitter\\.com\\/\\w+\\/\\w+\\/\\d+/gi}),e.factory("embeddableRichContent",["$q","$http","$sce","embedRegexpPatterns",function(f,b,w,v){return{generateEmbeddableContent:function(e,n){if(e.match(v.basicVideo))return{type:"video",url:e,displayInline:!1};if(e.match(v.basicAudio))return{type:"audio",url:e,displayInline:!1};if(e.match(v.basicImage))return{type:"image",url:e,displayInline:!1};if(e.match(v.pdf))return{type:"pdf",url:e,embed:(g=e,h=\'<iframe src="\'+g+\'" class="content-item embed-responsive-item" allowfullscreen webkitallowfullscreen></iframe>\',w.trustAsHtml(h)),displayInline:!1};if(e.match(v.soundCloud))return{type:"soundCloud",url:e,embed:(m=e,p=\'<iframe height="160" scrolling="no" src="https://w.soundcloud.com/player/?url=https://\'+(m=v.soundCloud.exec(m)[0])+\'&auto_play=false&hide_related=true&show_comments=false&show_user=false&show_reposts=false&visual=false&download=false&color=f50000&theme_color=f50000" frameborder="0" class="content-item"></iframe>\',w.trustAsHtml(p)),displayInline:!1};if(e.match(v.spotify))return{type:"spotify",url:e,embed:(d=e,u=\'<iframe src="https://embed.spotify.com/?uri=spotify:track:\'+v.spotify.exec(d)[0].split("/")[2]+\'" frameborder="0" allowtransparency="true" class="content-item"></iframe></div>\',w.trustAsHtml(u)),displayInline:!1};if(e.match(v.vimeo))return{type:"vimeo",url:e,embed:(c=e,l=\'<iframe src="//player.vimeo.com/video/\'+v.vimeo.exec(c)[3]+\'?title=0&byline=0&portrait=0&autoplay=0" webkitallowfullscreen mozallowfullscreen allowfullscreen class="content-item embed-responsive-item"></iframe>\',w.trustAsHtml(l)),displayInline:!1};if(e.match(v.youtube))return{type:"youtube",url:e,embed:(o=e,i=\'<iframe src="https://www.youtube.com/embed/\'+v.youtube.exec(o)[1]+\'?autoplay=0" frameBorder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen class="content-item embed-responsive-item"></iframe>\',w.trustAsHtml(i)),displayInline:!1};if(e.match(v.twitter)){var t=(a="https://api.twitter.com/1/statuses/oembed.json?omit_script=true&&url="+e+"&maxwidth=600&hide_media=false&hide_thread=false&align=none&lang=en",r=f.defer(),b.jsonp(a+"&callback=JSON_CALLBACK").success(function(e,n,t,s){r.resolve(e)}).error(function(e,n,t,s){r.reject(n)}),r.promise),s={type:"twitter",url:e,promise:t,embed:"",displayInline:!1};return t.then(function(e){s.embed=w.trustAsHtml(e.html)}),s}var a,r,o,i,c,l,d,u,m,p,g,h},generateAttachmentContent:function(e,n){var t={type:"attachment",title:e.name,displayInline:!1};if(e.kaltura_media)t.id=e.id,t.service_url=e.kaltura_media.service_url,t.show_recent_warning=e.kaltura_media.show_recent_warning,t.kalturaAttributes={pid:e.kaltura_media.partner_id,uiconfid:e.kaltura_media.player_id,entryid:e.kaltura_media.entry_id,flashvars:\'{"streamerType": "auto"}\'},1==e.kaltura_media.media_type?t.type="kaltura_video":t.type="kaltura_audio";else{var s="/app/attachment/"+e.name;n&&(t.title=n,s+="?name="+encodeURIComponent(n+"."+e.extension)),t.url=s,"pdf"==e.extension?(t.type="pdf",t.url=w.trustAsResourceUrl("/app/pdf?file="+encodeURIComponent(t.url)+"#page=1")):e.mimetype.match(/image/gi)?t.type="image":e.mimetype.match(/video/gi)?t.type="video":e.mimetype.match(/audio/gi)&&(t.type="audio")}return t}}}]),app.directive("dynamicRichContent",["$compile",function(s){return{restrict:"A",replace:!0,link:function(n,t,e){n.$watch(e.dynamicRichContent,function(e){t.html(e),s(t.contents())(n)})}}}]),e.directive("richContent",["$filter","xAPIStatementHelper","$uibModal","embeddableRichContent","$sanitize",function(e,a,r,d,u){return{restrict:"E",scope:{content:"=",attachment:"=?",downloadName:"=?"},templateUrl:"modules/rich-content/rich-content-template.html",link:function(l,e,n){l.attachmentContent=[],l.isString=angular.isString,l.embeddableLinks=[],l.toggleShowContent=function(e){e.displayInline=!e.displayInline},l.showAttachmentContentModal=function(e){var n=l.$new();n.content=e,n.downloadName=l.downloadName,n.modalInstance=r.open({templateUrl:"modules/rich-content/rich-content-attachment-modal-template.html",scope:n}),n.modalInstance.opened.then(function(){a.opened_attachment_modal(e.title)}),n.modalInstance.result.finally(function(){a.closed_attachment_modal(e.title)})},l.showEmbeddableLinkModal=function(e){var n=l.$new();n.content=e,n.downloadName=l.downloadName,n.modalInstance=r.open({templateUrl:"modules/rich-content/rich-content-embeddable-modal-template.html",scope:n}),n.modalInstance.opened.then(function(){a.opened_embeddable_content_modal(e.url)}),n.modalInstance.result.finally(function(){a.closed_embeddable_content_modal(e.url)})};var t=function(){var e=u(l.content);l.embeddableLinks=[];for(var n=[],t=/<a[^>]*>[^<]+<\\/a>/gi,s=null;null!==(s=t.exec(e));){var a=$(s[0]).attr("href");if(a){var r=d.generateEmbeddableContent(a,l.downloadName);r&&(l.embeddableLinks.push(r),n.push({contentIndex:t.lastIndex,embeddableLinkIndex:l.embeddableLinks.length-1}))}}for(var o=n.length-1;0<=o;--o){var i=n[o].contentIndex,c=\'&mdash;<a href="" ng-click="showEmbeddableLinkModal(embeddableLinks[\'+n[o].embeddableLinkIndex+\'])" class="btn btn-info btn-xs">Open in Pop-up</a>\';e=e.substr(0,i)+c+e.substr(i)}l.richContent="<div mathjax hljs >"+e+"</div>"},s=function(){l.attachmentContent=[],l.attachment&&l.attachmentContent.push(d.generateAttachmentContent(l.attachment,l.downloadName))};l.$watchCollection("content",t),l.$watchCollection("attachment",s),t(),s()}}}])}(),angular.module("ubc.ctlt.compair.rich.content.twttr",[]).directive("twttr",["$timeout",function(a){return function(e,n,t,s){e.load=function(){a(function(){twttr.widgets.load()},1)},e.$watch(t.twttr,function(){e.load()}),e.load()}}]),angular.module("ubc.ctlt.compair.authentication",["ngResource","http-auth-interceptor"]).factory("AuthenticationService",["$rootScope","$http","$q","authService","Session",function(e,n,t,s,a){var r="event:Authentication-Login",o="event:Authentication-Logout";return{LOGIN_EVENT:r,LOGOUT_EVENT:o,LOGIN_REQUIRED_EVENT:"event:auth-loginRequired",LTI_LOGIN_REQUIRED_EVENT:"event:auth-ltiLoginRequired",LOGIN_FORBIDDEN_EVENT:"event:auth-forbidden",AUTH_LOGIN_REQUIRED_EVENT:"event:auth-authLoginRequired",isAuthenticated:function(){return a.getUser().then(function(e){return e?t.when(!0):t.when(!1)})},login:function(n){return n=n||!1,a.destroy(),a.getUser().then(function(){s.loginConfirmed("success",function(e){return!n&&e}),e.$broadcast(r)})},logout:function(){a.destroy(),e.$broadcast(o)}}}]),angular.module("ubc.ctlt.compair.common.interceptor",[]).service("Interceptors",["$q","$cacheFactory","AnswerResource",function(e,a,r){var t={};this.cache={response:function(e){var n=a.get("$http");n.remove(e.config.url);var t=e.config.url.replace(/\\/(flagged)/g,"");return n.remove(t),t=t.replace(/\\/[A-Za-z0-9_-]{22}$/g,""),n.remove(t),e.data}},this.enrolCache={response:function(e){var n=a.get("classlist");if(n){var t=e.config.url.match(/\\/api\\/courses\\/[A-Za-z0-9_-]{22}/g);n.remove(t[0]+"/users")}return(n=a.get("$http"))&&(t=e.config.url.match(/\\/api\\/courses\\/[A-Za-z0-9_-]{22}/g),n.remove(t[0]+"/groups")),e.data}},this.enrolCacheLTI={response:function(e){var n=a.get("classlist");if(n){var t=e.config.url.match(/[A-Za-z0-9_-]{22}/g)[0];n.remove("/api/courses/"+t+"/users")}return e.data}},this.contextCacheLTI={response:function(e){var n=a.get("classlist");if(n){var t=e.config.url.match(/[A-Za-z0-9_-]{22}/g)[0];n.remove("/api/courses/"+t+"/users")}return(n=a.get("$http"))&&(t=e.config.url.match(/[A-Za-z0-9_-]{22}/g)[0],n.remove("/api/courses/"+t)),e.data}},this.groupSessionInterceptor={response:function(e){var n=e.config.url.match(/[A-Za-z0-9_-]{22}/g)[0];return null==t[n]&&(t[n]=[]),t[n]=_.sortBy(_.union(t[n],e.data.objects),function(e){return e}),e.data.objects=t[n],e.data}},this.answerCommentCache={response:function(e){var n=a.get("$http"),t=e.config.url.match(/\\/api\\/courses\\/[A-Za-z0-9_-]{22}\\/assignments\\/[A-Za-z0-9_-]{22}\\/answers\\/[A-Za-z0-9_-]{22}\\/comments(\\/[A-Za-z0-9_-]{22})?/g);n.remove(t[0]);var s=t[0].replace(/\\/[A-Za-z0-9_-]{22}$/g,"");return s!=t[0]&&n.remove(s),r.invalidListCache(),e.data}}}]),angular.module("ubc.ctlt.compair.session",["ngResource","LocalStorageModule","ubc.ctlt.compair.user"]).factory("Session",["$rootScope","$http","$q","localStorageService","$log","UserResource",function(t,a,r,o,i,c){var s="event:Session-refreshPermissions";return{_user:new c,_permissions:null,PERMISSION_REFRESHED_EVENT:s,getUser:function(e){if(e=e||{},this._user.hasOwnProperty("id"))return r.when(this._user);var n=o.get("user");if(n)return angular.extend(this._user,n),r.when(this._user);i.debug("Getting user from server");var t=this,s=r.defer();return a.get("/api/session",{cache:!0,bypassErrorsInterceptor:e.bypassErrorsInterceptor}).then(function(e){var n=c.get({id:e.data.id},function(e){o.set("user",e),angular.extend(t._user,e),s.resolve(t._user)});return angular.extend(t._user,n),t._permissions=e.data.permissions,o.set("permissions",t._permissions),s.promise})},getPermissions:function(){if(this._permissions)return r.when(this._permissions);var e=o.get("permissions");if(e)return this._permissions=e,r.when(this._permissions);i.debug("Getting permission from server");var n=this;return a.get("/api/session/permission").then(function(e){return n._permissions=e.data,o.set("permissions",n._permissions),t.$broadcast(s),n._permissions})},isLoggedIn:function(){return!(!this._user||!this._user.hasOwnProperty("id"))},destroy:function(){for(var e in this._user)delete this._user[e];this._permissions=null,o.remove("user","permissions","lti_status")},refresh:function(){var t=this,s=r.defer();return a.get("/api/session",{cache:!0}).then(function(e){var n=c.get({id:e.data.id},function(e){o.set("user",e),angular.extend(t._user,e),s.resolve(t._user)});return angular.extend(t._user,n),t._permissions=e.data.permissions,o.set("permissions",t._permissions),s.promise})},expirePermissions:function(){this._permissions=null,o.remove("permissions")}}}]);'