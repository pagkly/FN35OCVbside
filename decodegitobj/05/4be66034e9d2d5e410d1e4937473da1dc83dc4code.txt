b'blob 1274\x001a.\'can\'\nb.not and or\nfalse false true\nTrue\nc.\ndict.values([((3,4),\'door\'),((1,2),\'shoes\')])\n\n2.\n1,2\n2,3\n3,5\n5,8\n8,13\n\ni=4\nnums=(8,13)\ntotal=(1,1),3\n0\n\ndef last_letter(word):\n\tlast=0\n\ti=1\n\twhile i<len(word):\n\t\tif word[i]>word[last]:\n\t\t\tlast=i\n\t\ti+=1\n\treturn last\n1.char_dict={}/dict()/\n2.if char_dict[char]==1:\n3. return hapax_letters\n4.print (hapax_letters(text))\n\n5. def lensort(lst):\n\t# Sorting list by ascending ortographic order\n\t# Created by Arthur 04/09/2018\n\tminlen=0\n\tmin=lst[0]\n\tmax=0\n\tfor f in lst:\n\t\tif min>f and len(min)>len(f):\n\t\t\tmin=f\n\t\tif max<f and len(max)<len(f):\n\t\t\tmax=f\n\ttotallst=[]\n\tfor i in range(len(min),len(max)):\n\t\tlstbylen=[]\n\t\tfor f in lst:\n\t\t\tif len(f)==i:\n\t\t\t\tlstbylen.append(f)\n\t\t\t\tlstbylen=sorted(lstbylen)\n\t\tfor f in lstbylen:\n\t\t\ttotallst.append(f)\n\treturn totallst\ndef lensort(lst): \n\ttuplist = [] \n\tfor item in lst: \n\t\ttuplist.append((len(item), item)) \n\t\tretlist = [] \n\t\tfor item in sorted(tuplist): \n\t\t\tretlist.append(item[1]) \n\treturn(retlist)\n\n1.5\ndict_items([(\'a\',1),(\'b\',2)])\nTrue\n\ndef substr("woolloomooloo","oo"):\ndef substr(sup, sub):\n\tif sub in sub:\n\t\treturn True\n\telse:\n\t\treturn False\n\ndef substrn(sup, sub):\n\tcount=0\n\tfor f in range(0,len(sup)):\n\t\tif sub in sub[f:f+len(sub)]:\n\t\t\tcount+=1\n\tprint(count)\n\t#return count\n\t\n\t\n\t\t\t'