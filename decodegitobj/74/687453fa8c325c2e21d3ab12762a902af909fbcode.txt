b'blob 3951\x00def encrypt0(plaintext, code_table):\n    # TODO implement this function.\n    encrypted_word=[]\n    letters="abcdefghijklmnopqrstuvwxyz"\n    # Looping every character in plaintext to convert it to \n    # numeric counterpart called alpha_number\n    for char in plaintext:\n        i=0\n        for alpha in letters:\n            if char==alpha:\n                alpha_number=i\n            i+=1\n        # Initialize the variable last_used_number with -1 or any \n        # negative number not inside any list of integers in the code_table.\n        last_used_number=-1\n        # Looping every letter in each iteration of encrypted_word list\n        # containing the updated list of encrypted letters.\n        # Thus, it can also be used for detecting last number used from \n        # code_table for alpha_number.\n        for f in encrypted_word:\n            if f in code_table[alpha_number]:\n                last_used_number=f\n        # If the last_used_number is still -1 or not in the list code_table, \n        # use the first number in that alphabet code_table; \n        # else use last_used_number to check further.\n        if last_used_number>=0:\n            lasti=len(code_table[alpha_number])-1\n            # If the last_used_number matches the very last number in the list \n            # of the code_table for that alphabet;\n            # it will use the first number in the list instead.\n            # If not, then the next number after last_used_number is used.\n            if last_used_number==code_table[alpha_number][lasti]:\n                encrypted_letter=code_table[alpha_number][0]\n            else:\n                encrypted_letter=int(last_used_number)+1\n        else:\n            encrypted_letter=code_table[alpha_number][0]\n        encrypted_word.append(encrypted_letter)          \n    return encrypted_word\n\ndef encrypt1():\n    for f in encrypted_word:\n        for g in code_table[alpha_number]:\n            if f==g:\n                    if f!=code_table[alpha_number][-1]:\n                        newindex=lastusedindex+1\n                        lastusedindex+=1\n                    else:\n                        newindex=0\n                        lastusedindex=0\ndef encrypt(plaintext, code_table):\n    encrypted_word=[]\n    letters="abcdefghijklmnopqrstuvwxyz"\n    for char in plaintext:\n        for i in range(0,len(letters)):\n            if char==letters[i]:\n                alpha_number=i\n        newindex=0\n        for f in encrypted_word:\n            if f in code_table[alpha_number]:\n                if f!=code_table[alpha_number][-1]:\n                    for g in code_table[alpha_number]:\n                        if f==g:\n                            newindex+=1\n                if f==code_table[alpha_number][-1]:\n                    newindex=0\n        encrypted_letter=code_table[alpha_number][newindex]\n        encrypted_word.append(encrypted_letter)\n    return encrypted_word\n\n#TESTVAL\nCODE_TABLE = [[90,91,92,93,94,95,96,97], [98,99], [0,1,2], [3,4,5,6], [7,8,9,10,11,12,13,14,15], [16,17], [18,19], [20,21,22,23,24,25], [26,27,28,29,30,31,32], [33], [34], [35,36,37,38], [39,40], [41,42,43,44,45,46,47], [48,49,50,51,52,53,54,55], [56,57], [58], [59,60,61,62,63,64], [65,66,67,68,69,70], [71,72,73,74,75,76,77,78,79], [80,81,82], [83], [84,85], [86], [87,88], [89]]\nprint(encrypt(\'computer\', CODE_TABLE))\nprint([ encrypt(\'computer\', CODE_TABLE) == [0, 48, 39, 56, 80, 71, 7, 59] ])\n#[0, 48, 39, 56, 80, 71, 7, 59]\n\nprint(encrypt(\'science\', CODE_TABLE))\nprint(encrypt(\'science\', CODE_TABLE)==[65, 0, 26, 7, 41, 1, 8])\n#[65, 0, 26, 7, 41, 1, 8]\nprint(encrypt(\'cabbagepatch\', CODE_TABLE))\nprint(encrypt(\'cabbagepatch\', CODE_TABLE)==[0, 90, 98, 99, 91, 18, 7, 56, 92, 71, 1, 20])\nprint(encrypt(\'bubble\', CODE_TABLE))\nprint(encrypt(\'bubble\', CODE_TABLE)==[98, 80, 99, 98, 35, 7])\nprint(encrypt(\'wowwhatawombat\', CODE_TABLE))\nprint(encrypt(\'wowwhatawombat\', CODE_TABLE)==[84, 48, 85, 84, 20, 90, 71, 91, 85, 49, 39, 98, 92, 72])\n'