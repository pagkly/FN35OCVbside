#b'blob 1443\x00#Ester Yamin
#white jacket
#black shoe

#https://www.melbourneairport.com.au/Passengers/Flights/Departures
#QF426 MELB(YMMY)-SYDNEY(YMMS)
#11:00/11:15
#T1/Gate11
#*BOARDING*
#facebook-messenger-logo

#https://www.sydneyairport.com.au/flights/QF41/AABVOIVkg6hkFuxHxnOt/dropping-off
#QF41 SYD-CGK
#13:45-18:40 FRI 24
#T1/Gate25
#On Time
#Walk time to gate from security
#12 Minutes

def foo(x,y):
    a=42
    x,y=y,x
    b=17
    c=100
    print(a,b,x,y)

a,b,x,y=1,2,3,4
foo(17,4)
print(a,b,x,y)


##PROBLEMS
def valid_fm(val):
    checkfreq=False
    checknum=str(type(val))
    if "." in val:
        fmval=float(val)*10
        if fmval in range(880,1080):
            checkfreq=True
    return print(str(checkfreq))
    
def palnum(num):
    palnumlist=[]
    finalnum=10**num
    for f in range(1,finalnum):
        for g in range(1,finalnum):
            prodnum=f*g
            #print(f,g,prodnum)
            prodnumold=str(prodnum)
            if str(prodnum)==prodnumold[::-1]:
                palnumlist.append(prodnum)
    return palnumlist[-1]
    pass
#print(palnum(1))
print(palnum(2))
print(palnum(3))
print(palnum(4))
def letter_overlap_mine(s1,s2):
    s1.split()
    s2.split()
    charlist=[]
    s3=s1+s2
    for char in s3:
        if not char in charlist:
            charlist.append(char)
    return charlist
    pass
def letter_overlap(s1,s2):
    return len(set(s1)&set(s2))
    
print(letter_overlap("abra","alac"))
'