b'blob 2031\x00/* ==================================================================\n * General i18n functions\n * Copyright (c) 2001 by Blackboard, Inc.,\n * 1899 L Street, NW, 5th Floor\n * Washington, DC, 20036, U.S.A.\n * All rights reserved.\n * Submit RFC & bugs report to: aklimenko@blackboard.com\n * This software is the confidential and proprietary information\n * of Blackboard, Inc. ("Confidential Information").  You\n * shall not disclose such Confidential Information and shall use\n * it only in accordance with the terms of the license agreement\n * you entered into with Blackboard.\n * ==================================================================*/\n\n// internal methods\n\nfunction _escape(string)\n{\n  // ?= does not seem to work\n  return (\'\'+string).replace(/^\'|([^\\\\])\'/g, "$1\\\\\'").replace(/\\n/g, "&crlf;");\n}\n\n\nfunction _unescape(string)\n{\n  return string.replace(/&crlf;/g, "\\n");\n}\n\nfunction _substitute(string, parameters)\n{\n  for ( var key in parameters)\n  {\n    if ( parameters.hasOwnProperty( key ) )\n    {\n      string = eval( "string.replace(/\\\\{" + key + "\\\\}/g, \'" + _escape(parameters[key]) + "\')" );\n    }\n  }\n  return _unescape(string);\n}\n\n// Public methods: these methods are instance methods of dynamically generated\n// Javascript bundle objects. See Java class blackboard.platform.intl.JsResource\n// and Perl module CI::L10n::JsResource.\n\n\n// Get a string from a resource bundle\nfunction i18n_get_string(key)\n{\n  return this[key];\n}\n\n\n// Get string and perform substitution using positions (arrays) or names (object)\nfunction i18n_get_formatted_string(key, parameters)\n{\n  var string = this.getString(key);\n  if (string && parameters)\n  {\n    // Convert to object keyed by string representation of array index\n    if ( parameters.constructor.toString() == [].constructor.toString() )\n    {\n      var array = parameters;\n      parameters = {};\n      for (var i = 0; i < array.length; ++i)\n      {\n        parameters[\'\'+i] = array[i];\n      }\n    }\n    string = _substitute(string, parameters);\n  }\n  return string;\n}'